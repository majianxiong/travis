
9d224e2d042f196c03c75c4086970e52c7f7f85f	{"key":"{\"uglify-es\":\"3.3.5\",\"uglifyjs-webpack-plugin\":\"1.1.6\",\"uglifyjs-webpack-plugin-options\":{\"test\":/\\.js$/i,\"warningsFilter\":function () {\n      return true;\n    },\"extractComments\":false,\"sourceMap\":false,\"cache\":true,\"parallel\":true,\"uglifyOptions\":{\"output\":{\"comments\":false}}},\"path\":\"\\u002Fopt\\u002Flampp\\u002Fhtdocs\\u002Fapp\\u002Fdist\\u002Fbundle\\u002F3.bundle.js\",\"input\":\"\\u002F******\\u002F (function(modules) { \\u002F\\u002F webpackBootstrap\\n\\u002F******\\u002F \\t\\u002F\\u002F The module cache\\n\\u002F******\\u002F \\tvar installedModules = {};\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F The require function\\n\\u002F******\\u002F \\tfunction __webpack_require__(moduleId) {\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\t\\u002F\\u002F Check if module is in cache\\n\\u002F******\\u002F \\t\\tif(installedModules[moduleId]) {\\n\\u002F******\\u002F \\t\\t\\treturn installedModules[moduleId].exports;\\n\\u002F******\\u002F \\t\\t}\\n\\u002F******\\u002F \\t\\t\\u002F\\u002F Create a new module (and put it into the cache)\\n\\u002F******\\u002F \\t\\tvar module = installedModules[moduleId] = {\\n\\u002F******\\u002F \\t\\t\\ti: moduleId,\\n\\u002F******\\u002F \\t\\t\\tl: false,\\n\\u002F******\\u002F \\t\\t\\texports: {}\\n\\u002F******\\u002F \\t\\t};\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\t\\u002F\\u002F Execute the module function\\n\\u002F******\\u002F \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\t\\u002F\\u002F Flag the module as loaded\\n\\u002F******\\u002F \\t\\tmodule.l = true;\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\t\\u002F\\u002F Return the exports of the module\\n\\u002F******\\u002F \\t\\treturn module.exports;\\n\\u002F******\\u002F \\t}\\n\\u002F******\\u002F\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F expose the modules object (__webpack_modules__)\\n\\u002F******\\u002F \\t__webpack_require__.m = modules;\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F expose the module cache\\n\\u002F******\\u002F \\t__webpack_require__.c = installedModules;\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F define getter function for harmony exports\\n\\u002F******\\u002F \\t__webpack_require__.d = function(exports, name, getter) {\\n\\u002F******\\u002F \\t\\tif(!__webpack_require__.o(exports, name)) {\\n\\u002F******\\u002F \\t\\t\\tObject.defineProperty(exports, name, {\\n\\u002F******\\u002F \\t\\t\\t\\tconfigurable: false,\\n\\u002F******\\u002F \\t\\t\\t\\tenumerable: true,\\n\\u002F******\\u002F \\t\\t\\t\\tget: getter\\n\\u002F******\\u002F \\t\\t\\t});\\n\\u002F******\\u002F \\t\\t}\\n\\u002F******\\u002F \\t};\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F getDefaultExport function for compatibility with non-harmony modules\\n\\u002F******\\u002F \\t__webpack_require__.n = function(module) {\\n\\u002F******\\u002F \\t\\tvar getter = module && module.__esModule ?\\n\\u002F******\\u002F \\t\\t\\tfunction getDefault() { return module['default']; } :\\n\\u002F******\\u002F \\t\\t\\tfunction getModuleExports() { return module; };\\n\\u002F******\\u002F \\t\\t__webpack_require__.d(getter, 'a', getter);\\n\\u002F******\\u002F \\t\\treturn getter;\\n\\u002F******\\u002F \\t};\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F Object.prototype.hasOwnProperty.call\\n\\u002F******\\u002F \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F __webpack_public_path__\\n\\u002F******\\u002F \\t__webpack_require__.p = \\\"\\\";\\n\\u002F******\\u002F\\n\\u002F******\\u002F \\t\\u002F\\u002F Load entry module and return exports\\n\\u002F******\\u002F \\treturn __webpack_require__(__webpack_require__.s = 71);\\n\\u002F******\\u002F })\\n\\u002F************************************************************************\\u002F\\n\\u002F******\\u002F ([\\n\\u002F* 0 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nif (true) {\\n  module.exports = __webpack_require__(12);\\n} else {\\n  module.exports = require('.\\u002Fcjs\\u002Freact.development.js');\\n}\\n\\n\\n\\u002F***\\u002F }),\\n\\u002F* 1 *\\u002F,\\n\\u002F* 2 *\\u002F,\\n\\u002F* 3 *\\u002F,\\n\\u002F* 4 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n\\u002F**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * \\n *\\u002F\\n\\nfunction makeEmptyFunction(arg) {\\n  return function () {\\n    return arg;\\n  };\\n}\\n\\n\\u002F**\\n * This function accepts and discards inputs; it has no side effects. This is\\n * primarily useful idiomatically for overridable function endpoints which\\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\\n *\\u002F\\nvar emptyFunction = function emptyFunction() {};\\n\\nemptyFunction.thatReturns = makeEmptyFunction;\\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\\nemptyFunction.thatReturnsThis = function () {\\n  return this;\\n};\\nemptyFunction.thatReturnsArgument = function (arg) {\\n  return arg;\\n};\\n\\nmodule.exports = emptyFunction;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 5 *\\u002F,\\n\\u002F* 6 *\\u002F,\\n\\u002F* 7 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\u002F*\\nobject-assign\\n(c) Sindre Sorhus\\n@license MIT\\n*\\u002F\\n\\n\\n\\u002F* eslint-disable no-unused-vars *\\u002F\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\\n\\nfunction toObject(val) {\\n\\tif (val === null || val === undefined) {\\n\\t\\tthrow new TypeError('Object.assign cannot be called with null or undefined');\\n\\t}\\n\\n\\treturn Object(val);\\n}\\n\\nfunction shouldUseNative() {\\n\\ttry {\\n\\t\\tif (!Object.assign) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\\u002F\\u002F Detect buggy property enumeration order in older V8 versions.\\n\\n\\t\\t\\u002F\\u002F https:\\u002F\\u002Fbugs.chromium.org\\u002Fp\\u002Fv8\\u002Fissues\\u002Fdetail?id=4118\\n\\t\\tvar test1 = new String('abc');  \\u002F\\u002F eslint-disable-line no-new-wrappers\\n\\t\\ttest1[5] = 'de';\\n\\t\\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\\u002F\\u002F https:\\u002F\\u002Fbugs.chromium.org\\u002Fp\\u002Fv8\\u002Fissues\\u002Fdetail?id=3056\\n\\t\\tvar test2 = {};\\n\\t\\tfor (var i = 0; i \\u003C 10; i++) {\\n\\t\\t\\ttest2['_' + String.fromCharCode(i)] = i;\\n\\t\\t}\\n\\t\\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\\n\\t\\t\\treturn test2[n];\\n\\t\\t});\\n\\t\\tif (order2.join('') !== '0123456789') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\\u002F\\u002F https:\\u002F\\u002Fbugs.chromium.org\\u002Fp\\u002Fv8\\u002Fissues\\u002Fdetail?id=3056\\n\\t\\tvar test3 = {};\\n\\t\\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\\n\\t\\t\\ttest3[letter] = letter;\\n\\t\\t});\\n\\t\\tif (Object.keys(Object.assign({}, test3)).join('') !==\\n\\t\\t\\t\\t'abcdefghijklmnopqrst') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t} catch (err) {\\n\\t\\t\\u002F\\u002F We don't expect any of the above to throw, but better to be safe.\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\\n\\tvar from;\\n\\tvar to = toObject(target);\\n\\tvar symbols;\\n\\n\\tfor (var s = 1; s \\u003C arguments.length; s++) {\\n\\t\\tfrom = Object(arguments[s]);\\n\\n\\t\\tfor (var key in from) {\\n\\t\\t\\tif (hasOwnProperty.call(from, key)) {\\n\\t\\t\\t\\tto[key] = from[key];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getOwnPropertySymbols) {\\n\\t\\t\\tsymbols = getOwnPropertySymbols(from);\\n\\t\\t\\tfor (var i = 0; i \\u003C symbols.length; i++) {\\n\\t\\t\\t\\tif (propIsEnumerable.call(from, symbols[i])) {\\n\\t\\t\\t\\t\\tto[symbols[i]] = from[symbols[i]];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn to;\\n};\\n\\n\\n\\u002F***\\u002F }),\\n\\u002F* 8 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\u002F**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n *\\u002F\\n\\n\\n\\nvar emptyObject = {};\\n\\nif (false) {\\n  Object.freeze(emptyObject);\\n}\\n\\nmodule.exports = emptyObject;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 9 *\\u002F,\\n\\u002F* 10 *\\u002F,\\n\\u002F* 11 *\\u002F,\\n\\u002F* 12 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\u002F** @license React v16.2.0\\n * react.production.min.js\\n *\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\u002F\\n\\nvar m=__webpack_require__(7),n=__webpack_require__(8),p=__webpack_require__(4),q=\\\"function\\\"===typeof Symbol&&Symbol[\\\"for\\\"],r=q?Symbol[\\\"for\\\"](\\\"react.element\\\"):60103,t=q?Symbol[\\\"for\\\"](\\\"react.call\\\"):60104,u=q?Symbol[\\\"for\\\"](\\\"react.return\\\"):60105,v=q?Symbol[\\\"for\\\"](\\\"react.portal\\\"):60106,w=q?Symbol[\\\"for\\\"](\\\"react.fragment\\\"):60107,x=\\\"function\\\"===typeof Symbol&&Symbol.iterator;\\nfunction y(a){for(var b=arguments.length-1,e=\\\"Minified React error #\\\"+a+\\\"; visit http:\\u002F\\u002Ffacebook.github.io\\u002Freact\\u002Fdocs\\u002Ferror-decoder.html?invariant\\\\x3d\\\"+a,c=0;c\\u003Cb;c++)e+=\\\"\\\\x26args[]\\\\x3d\\\"+encodeURIComponent(arguments[c+1]);b=Error(e+\\\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\\\");b.name=\\\"Invariant Violation\\\";b.framesToPop=1;throw b;}\\nvar z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){\\\"object\\\"!==typeof a&&\\\"function\\\"!==typeof a&&null!=a?y(\\\"85\\\"):void 0;this.updater.enqueueSetState(this,a,b,\\\"setState\\\")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\\\"forceUpdate\\\")};\\nfunction B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\\nfunction J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\\\"\\\"+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1\\u003Cf){for(var h=Array(f),l=0;l\\u003Cf;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return\\\"object\\\"===typeof a&&null!==a&&a.$$typeof===r}\\nfunction escape(a){var b={\\\"\\\\x3d\\\":\\\"\\\\x3d0\\\",\\\":\\\":\\\"\\\\x3d2\\\"};return\\\"$\\\"+(\\\"\\\"+a).replace(\\u002F[=:]\\u002Fg,function(a){return b[a]})}var L=\\u002F\\\\\\u002F+\\u002Fg,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10\\u003EM.length&&M.push(a)}\\nfunction P(a,b,e,c){var d=typeof a;if(\\\"undefined\\\"===d||\\\"boolean\\\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \\\"string\\\":case \\\"number\\\":g=!0;break;case \\\"object\\\":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,\\\"\\\"===b?\\\".\\\"+Q(a,0):b),1;g=0;b=\\\"\\\"===b?\\\".\\\":b+\\\":\\\";if(Array.isArray(a))for(var k=0;k\\u003Ca.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||\\\"undefined\\\"===typeof a?f=null:(f=x&&a[x]||a[\\\"@@iterator\\\"],f=\\\"function\\\"===typeof f?f:null),\\\"function\\\"===typeof f)for(a=\\nf.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else\\\"object\\\"===d&&(e=\\\"\\\"+a,y(\\\"31\\\",\\\"[object Object]\\\"===e?\\\"object with keys {\\\"+Object.keys(a).join(\\\", \\\")+\\\"}\\\":e,\\\"\\\"));return g}function Q(a,b){return\\\"object\\\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}\\nfunction S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?\\\"\\\":(\\\"\\\"+a.key).replace(L,\\\"$\\\\x26\\u002F\\\")+\\\"\\u002F\\\")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g=\\\"\\\";null!=e&&(g=(\\\"\\\"+e).replace(L,\\\"$\\\\x26\\u002F\\\")+\\\"\\u002F\\\");b=N(b,g,c,d);null==a||P(a,\\\"\\\",S,b);O(b)}\\nvar U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,\\\"\\\",R,b);O(b)},count:function(a){return null==a?0:P(a,\\\"\\\",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y(\\\"143\\\");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),\\nd=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=\\\"\\\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1\\u003Ch){f=Array(h);for(var l=0;l\\u003Ch;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},\\nisValidElement:K,version:\\\"16.2.0\\\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W[\\\"default\\\"]?W[\\\"default\\\"]:W;\\n\\n\\n\\u002F***\\u002F }),\\n\\u002F* 13 *\\u002F,\\n\\u002F* 14 *\\u002F,\\n\\u002F* 15 *\\u002F,\\n\\u002F* 16 *\\u002F,\\n\\u002F* 17 *\\u002F,\\n\\u002F* 18 *\\u002F,\\n\\u002F* 19 *\\u002F,\\n\\u002F* 20 *\\u002F,\\n\\u002F* 21 *\\u002F,\\n\\u002F* 22 *\\u002F,\\n\\u002F* 23 *\\u002F,\\n\\u002F* 24 *\\u002F,\\n\\u002F* 25 *\\u002F,\\n\\u002F* 26 *\\u002F,\\n\\u002F* 27 *\\u002F,\\n\\u002F* 28 *\\u002F,\\n\\u002F* 29 *\\u002F,\\n\\u002F* 30 *\\u002F,\\n\\u002F* 31 *\\u002F,\\n\\u002F* 32 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxButton = function (_React$Component) {\\n    _inherits(JqxButton, _React$Component);\\n\\n    function JqxButton() {\\n        _classCallCheck(this, JqxButton);\\n\\n        return _possibleConstructorReturn(this, (JqxButton.__proto__ || Object.getPrototypeOf(JqxButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['delay', 'disabled', 'height', 'imgSrc', 'imgWidth', 'imgHeight', 'imgPosition', 'roundedCorners', 'rtl', 'textPosition', 'textImageRelation', 'theme', 'template', 'toggled', 'width', 'value'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'delay',\\n        value: function delay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('delay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('delay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'imgSrc',\\n        value: function imgSrc(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('imgSrc', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('imgSrc');\\n            }\\n        }\\n    }, {\\n        key: 'imgWidth',\\n        value: function imgWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('imgWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('imgWidth');\\n            }\\n        }\\n    }, {\\n        key: 'imgHeight',\\n        value: function imgHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('imgHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('imgHeight');\\n            }\\n        }\\n    }, {\\n        key: 'imgPosition',\\n        value: function imgPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('imgPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('imgPosition');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'textPosition',\\n        value: function textPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('textPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('textPosition');\\n            }\\n        }\\n    }, {\\n        key: 'textImageRelation',\\n        value: function textImageRelation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('textImageRelation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('textImageRelation');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('theme');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('template');\\n            }\\n        }\\n    }, {\\n        key: 'toggled',\\n        value: function toggled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('toggled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('toggled');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('value');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxButton('check');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxButton('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxButton('focus');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxButton('render');\\n        }\\n    }, {\\n        key: 'toggle',\\n        value: function toggle() {\\n            JQXLite(this.componentSelector).jqxButton('toggle');\\n        }\\n    }, {\\n        key: 'unCheck',\\n        value: function unCheck() {\\n            JQXLite(this.componentSelector).jqxButton('unCheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxButton('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButton('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 33 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxGrid = function (_React$Component) {\\n    _inherits(JqxGrid, _React$Component);\\n\\n    function JqxGrid() {\\n        _classCallCheck(this, JqxGrid);\\n\\n        return _possibleConstructorReturn(this, (JqxGrid.__proto__ || Object.getPrototypeOf(JqxGrid)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxGrid, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['altrows', 'altstart', 'altstep', 'autoshowloadelement', 'autoshowfiltericon', 'autoshowcolumnsmenubutton', 'clipboard', 'closeablegroups', 'columnsmenuwidth', 'columnmenuopening', 'columnmenuclosing', 'cellhover', 'enablekeyboarddelete', 'enableellipsis', 'enablemousewheel', 'enableanimations', 'enabletooltips', 'enablehover', 'enablebrowserselection', 'everpresentrowposition', 'everpresentrowheight', 'everpresentrowactions', 'everpresentrowactionsmode', 'filterrowheight', 'filtermode', 'groupsrenderer', 'groupcolumnrenderer', 'groupsexpandedbydefault', 'handlekeyboardnavigation', 'pagerrenderer', 'rtl', 'showdefaultloadelement', 'showfiltercolumnbackground', 'showfiltermenuitems', 'showpinnedcolumnbackground', 'showsortcolumnbackground', 'showsortmenuitems', 'showgroupmenuitems', 'showrowdetailscolumn', 'showheader', 'showgroupsheader', 'showaggregates', 'showgroupaggregates', 'showeverpresentrow', 'showfilterrow', 'showemptyrow', 'showstatusbar', 'statusbarheight', 'showtoolbar', 'selectionmode', 'updatefilterconditions', 'updatefilterpanel', 'theme', 'toolbarheight', 'autoheight', 'autorowheight', 'columnsheight', 'deferreddatafields', 'groupsheaderheight', 'groupindentwidth', 'height', 'pagerheight', 'rowsheight', 'scrollbarsize', 'scrollmode', 'scrollfeedback', 'width', 'autosavestate', 'autoloadstate', 'columns', 'columngroups', 'columnsmenu', 'columnsresize', 'columnsautoresize', 'columnsreorder', 'disabled', 'editable', 'editmode', 'filter', 'filterable', 'groupable', 'groups', 'horizontalscrollbarstep', 'horizontalscrollbarlargestep', 'initrowdetails', 'keyboardnavigation', 'localization', 'pagesize', 'pagesizeoptions', 'pagermode', 'pagerbuttonscount', 'pageable', 'rowdetails', 'rowdetailstemplate', 'ready', 'rendered', 'renderstatusbar', 'rendertoolbar', 'rendergridrows', 'sortable', 'selectedrowindex', 'selectedrowindexes', 'source', 'sorttogglestates', 'updatedelay', 'virtualmode', 'verticalscrollbarstep', 'verticalscrollbarlargestep'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxGrid(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxGrid('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxGrid(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'altrows',\\n        value: function altrows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('altrows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('altrows');\\n            }\\n        }\\n    }, {\\n        key: 'altstart',\\n        value: function altstart(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('altstart', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('altstart');\\n            }\\n        }\\n    }, {\\n        key: 'altstep',\\n        value: function altstep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('altstep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('altstep');\\n            }\\n        }\\n    }, {\\n        key: 'autoshowloadelement',\\n        value: function autoshowloadelement(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autoshowloadelement', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autoshowloadelement');\\n            }\\n        }\\n    }, {\\n        key: 'autoshowfiltericon',\\n        value: function autoshowfiltericon(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autoshowfiltericon', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autoshowfiltericon');\\n            }\\n        }\\n    }, {\\n        key: 'autoshowcolumnsmenubutton',\\n        value: function autoshowcolumnsmenubutton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autoshowcolumnsmenubutton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autoshowcolumnsmenubutton');\\n            }\\n        }\\n    }, {\\n        key: 'clipboard',\\n        value: function clipboard(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('clipboard', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('clipboard');\\n            }\\n        }\\n    }, {\\n        key: 'closeablegroups',\\n        value: function closeablegroups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('closeablegroups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('closeablegroups');\\n            }\\n        }\\n    }, {\\n        key: 'columnsmenuwidth',\\n        value: function columnsmenuwidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnsmenuwidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnsmenuwidth');\\n            }\\n        }\\n    }, {\\n        key: 'columnmenuopening',\\n        value: function columnmenuopening(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnmenuopening', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnmenuopening');\\n            }\\n        }\\n    }, {\\n        key: 'columnmenuclosing',\\n        value: function columnmenuclosing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnmenuclosing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnmenuclosing');\\n            }\\n        }\\n    }, {\\n        key: 'cellhover',\\n        value: function cellhover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('cellhover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('cellhover');\\n            }\\n        }\\n    }, {\\n        key: 'enablekeyboarddelete',\\n        value: function enablekeyboarddelete(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enablekeyboarddelete', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enablekeyboarddelete');\\n            }\\n        }\\n    }, {\\n        key: 'enableellipsis',\\n        value: function enableellipsis(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enableellipsis', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enableellipsis');\\n            }\\n        }\\n    }, {\\n        key: 'enablemousewheel',\\n        value: function enablemousewheel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enablemousewheel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enablemousewheel');\\n            }\\n        }\\n    }, {\\n        key: 'enableanimations',\\n        value: function enableanimations(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enableanimations', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enableanimations');\\n            }\\n        }\\n    }, {\\n        key: 'enabletooltips',\\n        value: function enabletooltips(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enabletooltips', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enabletooltips');\\n            }\\n        }\\n    }, {\\n        key: 'enablehover',\\n        value: function enablehover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enablehover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enablehover');\\n            }\\n        }\\n    }, {\\n        key: 'enablebrowserselection',\\n        value: function enablebrowserselection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('enablebrowserselection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('enablebrowserselection');\\n            }\\n        }\\n    }, {\\n        key: 'everpresentrowposition',\\n        value: function everpresentrowposition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowposition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowposition');\\n            }\\n        }\\n    }, {\\n        key: 'everpresentrowheight',\\n        value: function everpresentrowheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowheight');\\n            }\\n        }\\n    }, {\\n        key: 'everpresentrowactions',\\n        value: function everpresentrowactions(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowactions', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowactions');\\n            }\\n        }\\n    }, {\\n        key: 'everpresentrowactionsmode',\\n        value: function everpresentrowactionsmode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowactionsmode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowactionsmode');\\n            }\\n        }\\n    }, {\\n        key: 'filterrowheight',\\n        value: function filterrowheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('filterrowheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('filterrowheight');\\n            }\\n        }\\n    }, {\\n        key: 'filtermode',\\n        value: function filtermode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('filtermode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('filtermode');\\n            }\\n        }\\n    }, {\\n        key: 'groupsrenderer',\\n        value: function groupsrenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groupsrenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groupsrenderer');\\n            }\\n        }\\n    }, {\\n        key: 'groupcolumnrenderer',\\n        value: function groupcolumnrenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groupcolumnrenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groupcolumnrenderer');\\n            }\\n        }\\n    }, {\\n        key: 'groupsexpandedbydefault',\\n        value: function groupsexpandedbydefault(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groupsexpandedbydefault', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groupsexpandedbydefault');\\n            }\\n        }\\n    }, {\\n        key: 'handlekeyboardnavigation',\\n        value: function handlekeyboardnavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('handlekeyboardnavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('handlekeyboardnavigation');\\n            }\\n        }\\n    }, {\\n        key: 'pagerrenderer',\\n        value: function pagerrenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pagerrenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pagerrenderer');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showdefaultloadelement',\\n        value: function showdefaultloadelement(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showdefaultloadelement', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showdefaultloadelement');\\n            }\\n        }\\n    }, {\\n        key: 'showfiltercolumnbackground',\\n        value: function showfiltercolumnbackground(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showfiltercolumnbackground', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showfiltercolumnbackground');\\n            }\\n        }\\n    }, {\\n        key: 'showfiltermenuitems',\\n        value: function showfiltermenuitems(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showfiltermenuitems', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showfiltermenuitems');\\n            }\\n        }\\n    }, {\\n        key: 'showpinnedcolumnbackground',\\n        value: function showpinnedcolumnbackground(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showpinnedcolumnbackground', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showpinnedcolumnbackground');\\n            }\\n        }\\n    }, {\\n        key: 'showsortcolumnbackground',\\n        value: function showsortcolumnbackground(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showsortcolumnbackground', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showsortcolumnbackground');\\n            }\\n        }\\n    }, {\\n        key: 'showsortmenuitems',\\n        value: function showsortmenuitems(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showsortmenuitems', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showsortmenuitems');\\n            }\\n        }\\n    }, {\\n        key: 'showgroupmenuitems',\\n        value: function showgroupmenuitems(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showgroupmenuitems', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showgroupmenuitems');\\n            }\\n        }\\n    }, {\\n        key: 'showrowdetailscolumn',\\n        value: function showrowdetailscolumn(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showrowdetailscolumn', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showrowdetailscolumn');\\n            }\\n        }\\n    }, {\\n        key: 'showheader',\\n        value: function showheader(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showheader', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showheader');\\n            }\\n        }\\n    }, {\\n        key: 'showgroupsheader',\\n        value: function showgroupsheader(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showgroupsheader', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showgroupsheader');\\n            }\\n        }\\n    }, {\\n        key: 'showaggregates',\\n        value: function showaggregates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showaggregates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showaggregates');\\n            }\\n        }\\n    }, {\\n        key: 'showgroupaggregates',\\n        value: function showgroupaggregates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showgroupaggregates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showgroupaggregates');\\n            }\\n        }\\n    }, {\\n        key: 'showeverpresentrow',\\n        value: function showeverpresentrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showeverpresentrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showeverpresentrow');\\n            }\\n        }\\n    }, {\\n        key: 'showfilterrow',\\n        value: function showfilterrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showfilterrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showfilterrow');\\n            }\\n        }\\n    }, {\\n        key: 'showemptyrow',\\n        value: function showemptyrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showemptyrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showemptyrow');\\n            }\\n        }\\n    }, {\\n        key: 'showstatusbar',\\n        value: function showstatusbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showstatusbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showstatusbar');\\n            }\\n        }\\n    }, {\\n        key: 'statusbarheight',\\n        value: function statusbarheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('statusbarheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('statusbarheight');\\n            }\\n        }\\n    }, {\\n        key: 'showtoolbar',\\n        value: function showtoolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('showtoolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('showtoolbar');\\n            }\\n        }\\n    }, {\\n        key: 'selectionmode',\\n        value: function selectionmode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('selectionmode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('selectionmode');\\n            }\\n        }\\n    }, {\\n        key: 'updatefilterconditions',\\n        value: function updatefilterconditions(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('updatefilterconditions', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('updatefilterconditions');\\n            }\\n        }\\n    }, {\\n        key: 'updatefilterpanel',\\n        value: function updatefilterpanel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('updatefilterpanel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('updatefilterpanel');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toolbarheight',\\n        value: function toolbarheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('toolbarheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('toolbarheight');\\n            }\\n        }\\n    }, {\\n        key: 'autoheight',\\n        value: function autoheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autoheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autoheight');\\n            }\\n        }\\n    }, {\\n        key: 'autorowheight',\\n        value: function autorowheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autorowheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autorowheight');\\n            }\\n        }\\n    }, {\\n        key: 'columnsheight',\\n        value: function columnsheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnsheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnsheight');\\n            }\\n        }\\n    }, {\\n        key: 'deferreddatafields',\\n        value: function deferreddatafields(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('deferreddatafields', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('deferreddatafields');\\n            }\\n        }\\n    }, {\\n        key: 'groupsheaderheight',\\n        value: function groupsheaderheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groupsheaderheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groupsheaderheight');\\n            }\\n        }\\n    }, {\\n        key: 'groupindentwidth',\\n        value: function groupindentwidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groupindentwidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groupindentwidth');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('height');\\n            }\\n        }\\n    }, {\\n        key: 'pagerheight',\\n        value: function pagerheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pagerheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pagerheight');\\n            }\\n        }\\n    }, {\\n        key: 'rowsheight',\\n        value: function rowsheight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rowsheight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rowsheight');\\n            }\\n        }\\n    }, {\\n        key: 'scrollbarsize',\\n        value: function scrollbarsize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('scrollbarsize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('scrollbarsize');\\n            }\\n        }\\n    }, {\\n        key: 'scrollmode',\\n        value: function scrollmode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('scrollmode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('scrollmode');\\n            }\\n        }\\n    }, {\\n        key: 'scrollfeedback',\\n        value: function scrollfeedback(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('scrollfeedback', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('scrollfeedback');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('width');\\n            }\\n        }\\n    }, {\\n        key: 'autosavestate',\\n        value: function autosavestate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autosavestate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autosavestate');\\n            }\\n        }\\n    }, {\\n        key: 'autoloadstate',\\n        value: function autoloadstate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('autoloadstate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('autoloadstate');\\n            }\\n        }\\n    }, {\\n        key: 'columns',\\n        value: function columns(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columns', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columns');\\n            }\\n        }\\n    }, {\\n        key: 'columngroups',\\n        value: function columngroups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columngroups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columngroups');\\n            }\\n        }\\n    }, {\\n        key: 'columnsmenu',\\n        value: function columnsmenu(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnsmenu', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnsmenu');\\n            }\\n        }\\n    }, {\\n        key: 'columnsresize',\\n        value: function columnsresize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnsresize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnsresize');\\n            }\\n        }\\n    }, {\\n        key: 'columnsautoresize',\\n        value: function columnsautoresize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnsautoresize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnsautoresize');\\n            }\\n        }\\n    }, {\\n        key: 'columnsreorder',\\n        value: function columnsreorder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('columnsreorder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('columnsreorder');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'editable',\\n        value: function editable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('editable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('editable');\\n            }\\n        }\\n    }, {\\n        key: 'editmode',\\n        value: function editmode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('editmode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('editmode');\\n            }\\n        }\\n    }, {\\n        key: 'filter',\\n        value: function filter(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('filter', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('filter');\\n            }\\n        }\\n    }, {\\n        key: 'filterable',\\n        value: function filterable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('filterable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('filterable');\\n            }\\n        }\\n    }, {\\n        key: 'groupable',\\n        value: function groupable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groupable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groupable');\\n            }\\n        }\\n    }, {\\n        key: 'groups',\\n        value: function groups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('groups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('groups');\\n            }\\n        }\\n    }, {\\n        key: 'horizontalscrollbarstep',\\n        value: function horizontalscrollbarstep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarstep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarstep');\\n            }\\n        }\\n    }, {\\n        key: 'horizontalscrollbarlargestep',\\n        value: function horizontalscrollbarlargestep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarlargestep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarlargestep');\\n            }\\n        }\\n    }, {\\n        key: 'initrowdetails',\\n        value: function initrowdetails(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('initrowdetails', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('initrowdetails');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardnavigation',\\n        value: function keyboardnavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('keyboardnavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('keyboardnavigation');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('localization');\\n            }\\n        }\\n    }, {\\n        key: 'pagesize',\\n        value: function pagesize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pagesize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pagesize');\\n            }\\n        }\\n    }, {\\n        key: 'pagesizeoptions',\\n        value: function pagesizeoptions(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pagesizeoptions', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pagesizeoptions');\\n            }\\n        }\\n    }, {\\n        key: 'pagermode',\\n        value: function pagermode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pagermode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pagermode');\\n            }\\n        }\\n    }, {\\n        key: 'pagerbuttonscount',\\n        value: function pagerbuttonscount(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pagerbuttonscount', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pagerbuttonscount');\\n            }\\n        }\\n    }, {\\n        key: 'pageable',\\n        value: function pageable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('pageable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('pageable');\\n            }\\n        }\\n    }, {\\n        key: 'rowdetails',\\n        value: function rowdetails(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rowdetails', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rowdetails');\\n            }\\n        }\\n    }, {\\n        key: 'rowdetailstemplate',\\n        value: function rowdetailstemplate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rowdetailstemplate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rowdetailstemplate');\\n            }\\n        }\\n    }, {\\n        key: 'ready',\\n        value: function ready(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('ready', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('ready');\\n            }\\n        }\\n    }, {\\n        key: 'rendered',\\n        value: function rendered(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rendered', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rendered');\\n            }\\n        }\\n    }, {\\n        key: 'renderstatusbar',\\n        value: function renderstatusbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('renderstatusbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('renderstatusbar');\\n            }\\n        }\\n    }, {\\n        key: 'rendertoolbar',\\n        value: function rendertoolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rendertoolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rendertoolbar');\\n            }\\n        }\\n    }, {\\n        key: 'rendergridrows',\\n        value: function rendergridrows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('rendergridrows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('rendergridrows');\\n            }\\n        }\\n    }, {\\n        key: 'sortable',\\n        value: function sortable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('sortable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('sortable');\\n            }\\n        }\\n    }, {\\n        key: 'selectedrowindex',\\n        value: function selectedrowindex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('selectedrowindex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('selectedrowindex');\\n            }\\n        }\\n    }, {\\n        key: 'selectedrowindexes',\\n        value: function selectedrowindexes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('selectedrowindexes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('selectedrowindexes');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('source');\\n            }\\n        }\\n    }, {\\n        key: 'sorttogglestates',\\n        value: function sorttogglestates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('sorttogglestates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('sorttogglestates');\\n            }\\n        }\\n    }, {\\n        key: 'updatedelay',\\n        value: function updatedelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('updatedelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('updatedelay');\\n            }\\n        }\\n    }, {\\n        key: 'virtualmode',\\n        value: function virtualmode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('virtualmode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('virtualmode');\\n            }\\n        }\\n    }, {\\n        key: 'verticalscrollbarstep',\\n        value: function verticalscrollbarstep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('verticalscrollbarstep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('verticalscrollbarstep');\\n            }\\n        }\\n    }, {\\n        key: 'verticalscrollbarlargestep',\\n        value: function verticalscrollbarlargestep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGrid('verticalscrollbarlargestep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGrid('verticalscrollbarlargestep');\\n            }\\n        }\\n    }, {\\n        key: 'autoresizecolumns',\\n        value: function autoresizecolumns(type) {\\n            JQXLite(this.componentSelector).jqxGrid('autoresizecolumns', type);\\n        }\\n    }, {\\n        key: 'autoresizecolumn',\\n        value: function autoresizecolumn(dataField, type) {\\n            JQXLite(this.componentSelector).jqxGrid('autoresizecolumn', dataField, type);\\n        }\\n    }, {\\n        key: 'beginupdate',\\n        value: function beginupdate() {\\n            JQXLite(this.componentSelector).jqxGrid('beginupdate');\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxGrid('clear');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxGrid('destroy');\\n        }\\n    }, {\\n        key: 'endupdate',\\n        value: function endupdate() {\\n            JQXLite(this.componentSelector).jqxGrid('endupdate');\\n        }\\n    }, {\\n        key: 'ensurerowvisible',\\n        value: function ensurerowvisible(rowBoundIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('ensurerowvisible', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxGrid('focus');\\n        }\\n    }, {\\n        key: 'getcolumnindex',\\n        value: function getcolumnindex(dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnindex', dataField);\\n        }\\n    }, {\\n        key: 'getcolumn',\\n        value: function getcolumn(dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcolumn', dataField);\\n        }\\n    }, {\\n        key: 'getcolumnproperty',\\n        value: function getcolumnproperty(dataField, propertyName) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnproperty', dataField, propertyName);\\n        }\\n    }, {\\n        key: 'getrowid',\\n        value: function getrowid(rowBoundIndex) {\\n            return JQXLite(this.componentSelector).jqxGrid('getrowid', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'getrowdata',\\n        value: function getrowdata(rowBoundIndex) {\\n            return JQXLite(this.componentSelector).jqxGrid('getrowdata', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'getrowdatabyid',\\n        value: function getrowdatabyid(rowID) {\\n            return JQXLite(this.componentSelector).jqxGrid('getrowdatabyid', rowID);\\n        }\\n    }, {\\n        key: 'getrowboundindexbyid',\\n        value: function getrowboundindexbyid(rowID) {\\n            return JQXLite(this.componentSelector).jqxGrid('getrowboundindexbyid', rowID);\\n        }\\n    }, {\\n        key: 'getrowboundindex',\\n        value: function getrowboundindex(rowDisplayIndex) {\\n            return JQXLite(this.componentSelector).jqxGrid('getrowboundindex', rowDisplayIndex);\\n        }\\n    }, {\\n        key: 'getrows',\\n        value: function getrows() {\\n            return JQXLite(this.componentSelector).jqxGrid('getrows');\\n        }\\n    }, {\\n        key: 'getboundrows',\\n        value: function getboundrows() {\\n            return JQXLite(this.componentSelector).jqxGrid('getboundrows');\\n        }\\n    }, {\\n        key: 'getdisplayrows',\\n        value: function getdisplayrows() {\\n            return JQXLite(this.componentSelector).jqxGrid('getdisplayrows');\\n        }\\n    }, {\\n        key: 'getdatainformation',\\n        value: function getdatainformation() {\\n            return JQXLite(this.componentSelector).jqxGrid('getdatainformation');\\n        }\\n    }, {\\n        key: 'getsortinformation',\\n        value: function getsortinformation() {\\n            return JQXLite(this.componentSelector).jqxGrid('getsortinformation');\\n        }\\n    }, {\\n        key: 'getpaginginformation',\\n        value: function getpaginginformation() {\\n            return JQXLite(this.componentSelector).jqxGrid('getpaginginformation');\\n        }\\n    }, {\\n        key: 'hidecolumn',\\n        value: function hidecolumn(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('hidecolumn', dataField);\\n        }\\n    }, {\\n        key: 'hideloadelement',\\n        value: function hideloadelement() {\\n            JQXLite(this.componentSelector).jqxGrid('hideloadelement');\\n        }\\n    }, {\\n        key: 'hiderowdetails',\\n        value: function hiderowdetails(rowBoundIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('hiderowdetails', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'iscolumnvisible',\\n        value: function iscolumnvisible(dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('iscolumnvisible', dataField);\\n        }\\n    }, {\\n        key: 'iscolumnpinned',\\n        value: function iscolumnpinned(dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('iscolumnpinned', dataField);\\n        }\\n    }, {\\n        key: 'localizestrings',\\n        value: function localizestrings(localizationobject) {\\n            JQXLite(this.componentSelector).jqxGrid('localizestrings', localizationobject);\\n        }\\n    }, {\\n        key: 'pincolumn',\\n        value: function pincolumn(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('pincolumn', dataField);\\n        }\\n    }, {\\n        key: 'refreshdata',\\n        value: function refreshdata() {\\n            JQXLite(this.componentSelector).jqxGrid('refreshdata');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxGrid('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxGrid('render');\\n        }\\n    }, {\\n        key: 'scrolloffset',\\n        value: function scrolloffset(top, left) {\\n            JQXLite(this.componentSelector).jqxGrid('scrolloffset', top, left);\\n        }\\n    }, {\\n        key: 'scrollposition',\\n        value: function scrollposition() {\\n            return JQXLite(this.componentSelector).jqxGrid('scrollposition');\\n        }\\n    }, {\\n        key: 'showloadelement',\\n        value: function showloadelement() {\\n            JQXLite(this.componentSelector).jqxGrid('showloadelement');\\n        }\\n    }, {\\n        key: 'showrowdetails',\\n        value: function showrowdetails(rowBoundIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('showrowdetails', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'setcolumnindex',\\n        value: function setcolumnindex(dataField, index) {\\n            JQXLite(this.componentSelector).jqxGrid('setcolumnindex', dataField, index);\\n        }\\n    }, {\\n        key: 'setcolumnproperty',\\n        value: function setcolumnproperty(dataField, propertyName, propertyValue) {\\n            JQXLite(this.componentSelector).jqxGrid('setcolumnproperty', dataField, propertyName, propertyValue);\\n        }\\n    }, {\\n        key: 'showcolumn',\\n        value: function showcolumn(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('showcolumn', dataField);\\n        }\\n    }, {\\n        key: 'unpincolumn',\\n        value: function unpincolumn(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('unpincolumn', dataField);\\n        }\\n    }, {\\n        key: 'updatebounddata',\\n        value: function updatebounddata(type) {\\n            JQXLite(this.componentSelector).jqxGrid('updatebounddata', type);\\n        }\\n    }, {\\n        key: 'updating',\\n        value: function updating() {\\n            return JQXLite(this.componentSelector).jqxGrid('updating');\\n        }\\n    }, {\\n        key: 'getsortcolumn',\\n        value: function getsortcolumn() {\\n            return JQXLite(this.componentSelector).jqxGrid('getsortcolumn');\\n        }\\n    }, {\\n        key: 'removesort',\\n        value: function removesort() {\\n            JQXLite(this.componentSelector).jqxGrid('removesort');\\n        }\\n    }, {\\n        key: 'sortby',\\n        value: function sortby(dataField, sortOrder) {\\n            JQXLite(this.componentSelector).jqxGrid('sortby', dataField, sortOrder);\\n        }\\n    }, {\\n        key: 'addgroup',\\n        value: function addgroup(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('addgroup', dataField);\\n        }\\n    }, {\\n        key: 'cleargroups',\\n        value: function cleargroups() {\\n            JQXLite(this.componentSelector).jqxGrid('cleargroups');\\n        }\\n    }, {\\n        key: 'collapsegroup',\\n        value: function collapsegroup(group) {\\n            JQXLite(this.componentSelector).jqxGrid('collapsegroup', group);\\n        }\\n    }, {\\n        key: 'collapseallgroups',\\n        value: function collapseallgroups() {\\n            JQXLite(this.componentSelector).jqxGrid('collapseallgroups');\\n        }\\n    }, {\\n        key: 'expandallgroups',\\n        value: function expandallgroups() {\\n            JQXLite(this.componentSelector).jqxGrid('expandallgroups');\\n        }\\n    }, {\\n        key: 'expandgroup',\\n        value: function expandgroup(group) {\\n            JQXLite(this.componentSelector).jqxGrid('expandgroup', group);\\n        }\\n    }, {\\n        key: 'getrootgroupscount',\\n        value: function getrootgroupscount() {\\n            return JQXLite(this.componentSelector).jqxGrid('getrootgroupscount');\\n        }\\n    }, {\\n        key: 'getgroup',\\n        value: function getgroup(groupIndex) {\\n            return JQXLite(this.componentSelector).jqxGrid('getgroup', groupIndex);\\n        }\\n    }, {\\n        key: 'insertgroup',\\n        value: function insertgroup(groupIndex, dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('insertgroup', groupIndex, dataField);\\n        }\\n    }, {\\n        key: 'iscolumngroupable',\\n        value: function iscolumngroupable() {\\n            return JQXLite(this.componentSelector).jqxGrid('iscolumngroupable');\\n        }\\n    }, {\\n        key: 'removegroupat',\\n        value: function removegroupat(groupIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('removegroupat', groupIndex);\\n        }\\n    }, {\\n        key: 'removegroup',\\n        value: function removegroup(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('removegroup', dataField);\\n        }\\n    }, {\\n        key: 'addfilter',\\n        value: function addfilter(dataField, filterGroup, refreshGrid) {\\n            JQXLite(this.componentSelector).jqxGrid('addfilter', dataField, filterGroup, refreshGrid);\\n        }\\n    }, {\\n        key: 'applyfilters',\\n        value: function applyfilters() {\\n            JQXLite(this.componentSelector).jqxGrid('applyfilters');\\n        }\\n    }, {\\n        key: 'clearfilters',\\n        value: function clearfilters() {\\n            JQXLite(this.componentSelector).jqxGrid('clearfilters');\\n        }\\n    }, {\\n        key: 'getfilterinformation',\\n        value: function getfilterinformation() {\\n            return JQXLite(this.componentSelector).jqxGrid('getfilterinformation');\\n        }\\n    }, {\\n        key: 'getcolumnat',\\n        value: function getcolumnat(index) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnat', index);\\n        }\\n    }, {\\n        key: 'removefilter',\\n        value: function removefilter(dataField, refreshGrid) {\\n            JQXLite(this.componentSelector).jqxGrid('removefilter', dataField, refreshGrid);\\n        }\\n    }, {\\n        key: 'refreshfilterrow',\\n        value: function refreshfilterrow() {\\n            JQXLite(this.componentSelector).jqxGrid('refreshfilterrow');\\n        }\\n    }, {\\n        key: 'gotopage',\\n        value: function gotopage(pagenumber) {\\n            JQXLite(this.componentSelector).jqxGrid('gotopage', pagenumber);\\n        }\\n    }, {\\n        key: 'gotoprevpage',\\n        value: function gotoprevpage() {\\n            JQXLite(this.componentSelector).jqxGrid('gotoprevpage');\\n        }\\n    }, {\\n        key: 'gotonextpage',\\n        value: function gotonextpage() {\\n            JQXLite(this.componentSelector).jqxGrid('gotonextpage');\\n        }\\n    }, {\\n        key: 'addrow',\\n        value: function addrow(rowIds, data, rowPosition) {\\n            JQXLite(this.componentSelector).jqxGrid('addrow', rowIds, data, rowPosition);\\n        }\\n    }, {\\n        key: 'begincelledit',\\n        value: function begincelledit(rowBoundIndex, dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('begincelledit', rowBoundIndex, dataField);\\n        }\\n    }, {\\n        key: 'beginrowedit',\\n        value: function beginrowedit(rowBoundIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('beginrowedit', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'closemenu',\\n        value: function closemenu() {\\n            JQXLite(this.componentSelector).jqxGrid('closemenu');\\n        }\\n    }, {\\n        key: 'deleterow',\\n        value: function deleterow(rowIds) {\\n            JQXLite(this.componentSelector).jqxGrid('deleterow', rowIds);\\n        }\\n    }, {\\n        key: 'endcelledit',\\n        value: function endcelledit(rowBoundIndex, dataField, confirmChanges) {\\n            JQXLite(this.componentSelector).jqxGrid('endcelledit', rowBoundIndex, dataField, confirmChanges);\\n        }\\n    }, {\\n        key: 'endrowedit',\\n        value: function endrowedit(rowBoundIndex, confirmChanges) {\\n            JQXLite(this.componentSelector).jqxGrid('endrowedit', rowBoundIndex, confirmChanges);\\n        }\\n    }, {\\n        key: 'getcell',\\n        value: function getcell(rowBoundIndex, datafield) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcell', rowBoundIndex, datafield);\\n        }\\n    }, {\\n        key: 'getcellatposition',\\n        value: function getcellatposition(left, top) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcellatposition', left, top);\\n        }\\n    }, {\\n        key: 'getcelltext',\\n        value: function getcelltext(rowBoundIndex, dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcelltext', rowBoundIndex, dataField);\\n        }\\n    }, {\\n        key: 'getcelltextbyid',\\n        value: function getcelltextbyid(rowID, dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcelltextbyid', rowID, dataField);\\n        }\\n    }, {\\n        key: 'getcellvaluebyid',\\n        value: function getcellvaluebyid(rowID, dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcellvaluebyid', rowID, dataField);\\n        }\\n    }, {\\n        key: 'getcellvalue',\\n        value: function getcellvalue(rowBoundIndex, dataField) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcellvalue', rowBoundIndex, dataField);\\n        }\\n    }, {\\n        key: 'isBindingCompleted',\\n        value: function isBindingCompleted() {\\n            return JQXLite(this.componentSelector).jqxGrid('isBindingCompleted');\\n        }\\n    }, {\\n        key: 'openmenu',\\n        value: function openmenu(dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('openmenu', dataField);\\n        }\\n    }, {\\n        key: 'setcellvalue',\\n        value: function setcellvalue(rowBoundIndex, dataField, value) {\\n            JQXLite(this.componentSelector).jqxGrid('setcellvalue', rowBoundIndex, dataField, value);\\n        }\\n    }, {\\n        key: 'setcellvaluebyid',\\n        value: function setcellvaluebyid(rowID, dataField, value) {\\n            JQXLite(this.componentSelector).jqxGrid('setcellvaluebyid', rowID, dataField, value);\\n        }\\n    }, {\\n        key: 'showvalidationpopup',\\n        value: function showvalidationpopup(rowBoundIndex, dataField, validationMessage) {\\n            JQXLite(this.componentSelector).jqxGrid('showvalidationpopup', rowBoundIndex, dataField, validationMessage);\\n        }\\n    }, {\\n        key: 'updaterow',\\n        value: function updaterow(rowIds, data) {\\n            JQXLite(this.componentSelector).jqxGrid('updaterow', rowIds, data);\\n        }\\n    }, {\\n        key: 'clearselection',\\n        value: function clearselection() {\\n            JQXLite(this.componentSelector).jqxGrid('clearselection');\\n        }\\n    }, {\\n        key: 'getselectedrowindex',\\n        value: function getselectedrowindex() {\\n            return JQXLite(this.componentSelector).jqxGrid('getselectedrowindex');\\n        }\\n    }, {\\n        key: 'getselectedrowindexes',\\n        value: function getselectedrowindexes() {\\n            return JQXLite(this.componentSelector).jqxGrid('getselectedrowindexes');\\n        }\\n    }, {\\n        key: 'getselectedcell',\\n        value: function getselectedcell() {\\n            return JQXLite(this.componentSelector).jqxGrid('getselectedcell');\\n        }\\n    }, {\\n        key: 'getselectedcells',\\n        value: function getselectedcells() {\\n            return JQXLite(this.componentSelector).jqxGrid('getselectedcells');\\n        }\\n    }, {\\n        key: 'selectcell',\\n        value: function selectcell(rowBoundIndex, dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('selectcell', rowBoundIndex, dataField);\\n        }\\n    }, {\\n        key: 'selectallrows',\\n        value: function selectallrows() {\\n            JQXLite(this.componentSelector).jqxGrid('selectallrows');\\n        }\\n    }, {\\n        key: 'selectrow',\\n        value: function selectrow(rowBoundIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('selectrow', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'unselectrow',\\n        value: function unselectrow(rowBoundIndex) {\\n            JQXLite(this.componentSelector).jqxGrid('unselectrow', rowBoundIndex);\\n        }\\n    }, {\\n        key: 'unselectcell',\\n        value: function unselectcell(rowBoundIndex, dataField) {\\n            JQXLite(this.componentSelector).jqxGrid('unselectcell', rowBoundIndex, dataField);\\n        }\\n    }, {\\n        key: 'getcolumnaggregateddata',\\n        value: function getcolumnaggregateddata(dataField, aggregates) {\\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnaggregateddata', dataField, aggregates);\\n        }\\n    }, {\\n        key: 'refreshaggregates',\\n        value: function refreshaggregates() {\\n            JQXLite(this.componentSelector).jqxGrid('refreshaggregates');\\n        }\\n    }, {\\n        key: 'renderaggregates',\\n        value: function renderaggregates() {\\n            JQXLite(this.componentSelector).jqxGrid('renderaggregates');\\n        }\\n    }, {\\n        key: 'exportdata',\\n        value: function exportdata(dataType, fileName, exportHeader, rows, exportHiddenColumns, serverURL, charSet) {\\n            return JQXLite(this.componentSelector).jqxGrid('exportdata', dataType, fileName, exportHeader, rows, exportHiddenColumns, serverURL, charSet);\\n        }\\n    }, {\\n        key: 'getstate',\\n        value: function getstate() {\\n            return JQXLite(this.componentSelector).jqxGrid('getstate');\\n        }\\n    }, {\\n        key: 'loadstate',\\n        value: function loadstate(stateobject) {\\n            JQXLite(this.componentSelector).jqxGrid('loadstate', stateobject);\\n        }\\n    }, {\\n        key: 'savestate',\\n        value: function savestate() {\\n            return JQXLite(this.componentSelector).jqxGrid('savestate');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxGrid' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxGrid;\\n}(_react2.default.Component);\\n\\nexports.default = JqxGrid;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 34 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxInput = function (_React$Component) {\\n    _inherits(JqxInput, _React$Component);\\n\\n    function JqxInput() {\\n        _classCallCheck(this, JqxInput);\\n\\n        return _possibleConstructorReturn(this, (JqxInput.__proto__ || Object.getPrototypeOf(JqxInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n            this.val(this.props.value);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'dropDownWidth', 'displayMember', 'height', 'items', 'minLength', 'maxLength', 'opened', 'placeHolder', 'popupZIndex', 'query', 'renderer', 'rtl', 'searchMode', 'source', 'theme', 'valueMember', 'width', 'value'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownWidth',\\n        value: function dropDownWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('dropDownWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('dropDownWidth');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'items',\\n        value: function items(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('items', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('items');\\n            }\\n        }\\n    }, {\\n        key: 'minLength',\\n        value: function minLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('minLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('minLength');\\n            }\\n        }\\n    }, {\\n        key: 'maxLength',\\n        value: function maxLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('maxLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('maxLength');\\n            }\\n        }\\n    }, {\\n        key: 'opened',\\n        value: function opened(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('opened', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('opened');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'query',\\n        value: function query(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('query', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('query');\\n            }\\n        }\\n    }, {\\n        key: 'renderer',\\n        value: function renderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('renderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('renderer');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'searchMode',\\n        value: function searchMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('searchMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('searchMode');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('source');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('value');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxInput('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxInput('focus');\\n        }\\n    }, {\\n        key: 'selectAll',\\n        value: function selectAll() {\\n            JQXLite(this.componentSelector).jqxInput('selectAll');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxInput('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement('input', { type: 'text', id: id });\\n        }\\n    }]);\\n\\n    return JqxInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 35 *\\u002F,\\n\\u002F* 36 *\\u002F,\\n\\u002F* 37 *\\u002F,\\n\\u002F* 38 *\\u002F,\\n\\u002F* 39 *\\u002F,\\n\\u002F* 40 *\\u002F,\\n\\u002F* 41 *\\u002F,\\n\\u002F* 42 *\\u002F,\\n\\u002F* 43 *\\u002F,\\n\\u002F* 44 *\\u002F,\\n\\u002F* 45 *\\u002F,\\n\\u002F* 46 *\\u002F,\\n\\u002F* 47 *\\u002F,\\n\\u002F* 48 *\\u002F,\\n\\u002F* 49 *\\u002F,\\n\\u002F* 50 *\\u002F,\\n\\u002F* 51 *\\u002F,\\n\\u002F* 52 *\\u002F,\\n\\u002F* 53 *\\u002F,\\n\\u002F* 54 *\\u002F,\\n\\u002F* 55 *\\u002F,\\n\\u002F* 56 *\\u002F,\\n\\u002F* 57 *\\u002F,\\n\\u002F* 58 *\\u002F,\\n\\u002F* 59 *\\u002F,\\n\\u002F* 60 *\\u002F,\\n\\u002F* 61 *\\u002F,\\n\\u002F* 62 *\\u002F,\\n\\u002F* 63 *\\u002F,\\n\\u002F* 64 *\\u002F,\\n\\u002F* 65 *\\u002F,\\n\\u002F* 66 *\\u002F,\\n\\u002F* 67 *\\u002F,\\n\\u002F* 68 *\\u002F,\\n\\u002F* 69 *\\u002F,\\n\\u002F* 70 *\\u002F,\\n\\u002F* 71 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n__webpack_require__(72);\\n__webpack_require__(73);\\n__webpack_require__(74);\\n__webpack_require__(32);\\n__webpack_require__(75);\\n__webpack_require__(76);\\n__webpack_require__(77);\\n__webpack_require__(78);\\n__webpack_require__(79);\\n__webpack_require__(80);\\n__webpack_require__(81);\\n__webpack_require__(82);\\n__webpack_require__(83);\\n__webpack_require__(84);\\n__webpack_require__(85);\\n__webpack_require__(86);\\n__webpack_require__(87);\\n__webpack_require__(88);\\n__webpack_require__(89);\\n__webpack_require__(90);\\n__webpack_require__(91);\\n__webpack_require__(92);\\n__webpack_require__(93);\\n__webpack_require__(94);\\n__webpack_require__(33);\\n__webpack_require__(34);\\n__webpack_require__(95);\\n__webpack_require__(96);\\n__webpack_require__(97);\\n__webpack_require__(98);\\n__webpack_require__(99);\\n__webpack_require__(100);\\n__webpack_require__(101);\\n__webpack_require__(102);\\n__webpack_require__(103);\\n__webpack_require__(104);\\n__webpack_require__(105);\\n__webpack_require__(106);\\n__webpack_require__(107);\\n__webpack_require__(108);\\n__webpack_require__(109);\\n__webpack_require__(110);\\n__webpack_require__(111);\\n__webpack_require__(112);\\n__webpack_require__(113);\\n__webpack_require__(114);\\n__webpack_require__(115);\\n__webpack_require__(116);\\n__webpack_require__(117);\\n__webpack_require__(118);\\n__webpack_require__(119);\\n__webpack_require__(120);\\n__webpack_require__(121);\\n__webpack_require__(122);\\n__webpack_require__(123);\\n__webpack_require__(124);\\n__webpack_require__(125);\\n__webpack_require__(126);\\n__webpack_require__(127);\\n__webpack_require__(128);\\n__webpack_require__(129);\\n__webpack_require__(130);\\n__webpack_require__(131);\\n__webpack_require__(132);\\n__webpack_require__(133);\\n__webpack_require__(134);\\n__webpack_require__(135);\\nmodule.exports = __webpack_require__(136);\\n\\n\\n\\u002F***\\u002F }),\\n\\u002F* 72 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxBarGauge = function (_React$Component) {\\n    _inherits(JqxBarGauge, _React$Component);\\n\\n    function JqxBarGauge() {\\n        _classCallCheck(this, JqxBarGauge);\\n\\n        return _possibleConstructorReturn(this, (JqxBarGauge.__proto__ || Object.getPrototypeOf(JqxBarGauge)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxBarGauge, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDuration', 'backgroundColor', 'barSpacing', 'baseValue', 'colorScheme', 'customColorScheme', 'disabled', 'endAngle', 'formatFunction', 'height', 'labels', 'max', 'min', 'relativeInnerRadius', 'rendered', 'startAngle', 'title', 'tooltip', 'useGradient', 'values', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxBarGauge(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxBarGauge('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxBarGauge(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'backgroundColor',\\n        value: function backgroundColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('backgroundColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('backgroundColor');\\n            }\\n        }\\n    }, {\\n        key: 'barSpacing',\\n        value: function barSpacing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('barSpacing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('barSpacing');\\n            }\\n        }\\n    }, {\\n        key: 'baseValue',\\n        value: function baseValue(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('baseValue', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('baseValue');\\n            }\\n        }\\n    }, {\\n        key: 'colorScheme',\\n        value: function colorScheme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('colorScheme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('colorScheme');\\n            }\\n        }\\n    }, {\\n        key: 'customColorScheme',\\n        value: function customColorScheme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('customColorScheme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('customColorScheme');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'endAngle',\\n        value: function endAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('endAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('endAngle');\\n            }\\n        }\\n    }, {\\n        key: 'formatFunction',\\n        value: function formatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('formatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('formatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('height');\\n            }\\n        }\\n    }, {\\n        key: 'labels',\\n        value: function labels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('labels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('labels');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('max');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('min');\\n            }\\n        }\\n    }, {\\n        key: 'relativeInnerRadius',\\n        value: function relativeInnerRadius(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('relativeInnerRadius', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('relativeInnerRadius');\\n            }\\n        }\\n    }, {\\n        key: 'rendered',\\n        value: function rendered(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('rendered', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('rendered');\\n            }\\n        }\\n    }, {\\n        key: 'startAngle',\\n        value: function startAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('startAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('startAngle');\\n            }\\n        }\\n    }, {\\n        key: 'title',\\n        value: function title(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('title', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('title');\\n            }\\n        }\\n    }, {\\n        key: 'tooltip',\\n        value: function tooltip(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('tooltip', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('tooltip');\\n            }\\n        }\\n    }, {\\n        key: 'useGradient',\\n        value: function useGradient(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('useGradient', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('useGradient');\\n            }\\n        }\\n    }, {\\n        key: 'values',\\n        value: function values(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('values', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('values');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('width');\\n            }\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxBarGauge('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxBarGauge('render');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxBarGauge('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBarGauge('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxBarGauge' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxBarGauge;\\n}(_react2.default.Component);\\n\\nexports.default = JqxBarGauge;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 73 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxBulletChart = function (_React$Component) {\\n    _inherits(JqxBulletChart, _React$Component);\\n\\n    function JqxBulletChart() {\\n        _classCallCheck(this, JqxBulletChart);\\n\\n        return _possibleConstructorReturn(this, (JqxBulletChart.__proto__ || Object.getPrototypeOf(JqxBulletChart)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxBulletChart, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDuration', 'barSize', 'description', 'disabled', 'height', 'labelsFormat', 'labelsFormatFunction', 'orientation', 'pointer', 'rtl', 'ranges', 'showTooltip', 'target', 'ticks', 'title', 'tooltipFormatFunction', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxBulletChart(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxBulletChart('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxBulletChart(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'barSize',\\n        value: function barSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('barSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('barSize');\\n            }\\n        }\\n    }, {\\n        key: 'description',\\n        value: function description(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('description', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('description');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('height');\\n            }\\n        }\\n    }, {\\n        key: 'labelsFormat',\\n        value: function labelsFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('labelsFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('labelsFormat');\\n            }\\n        }\\n    }, {\\n        key: 'labelsFormatFunction',\\n        value: function labelsFormatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('labelsFormatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('labelsFormatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'pointer',\\n        value: function pointer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('pointer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('pointer');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'ranges',\\n        value: function ranges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('ranges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('ranges');\\n            }\\n        }\\n    }, {\\n        key: 'showTooltip',\\n        value: function showTooltip(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('showTooltip', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('showTooltip');\\n            }\\n        }\\n    }, {\\n        key: 'target',\\n        value: function target(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('target', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('target');\\n            }\\n        }\\n    }, {\\n        key: 'ticks',\\n        value: function ticks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('ticks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('ticks');\\n            }\\n        }\\n    }, {\\n        key: 'title',\\n        value: function title(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('title', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('title');\\n            }\\n        }\\n    }, {\\n        key: 'tooltipFormatFunction',\\n        value: function tooltipFormatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('tooltipFormatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('tooltipFormatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxBulletChart('destroy');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxBulletChart('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxBulletChart('refresh');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxBulletChart('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxBulletChart('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxBulletChart' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxBulletChart;\\n}(_react2.default.Component);\\n\\nexports.default = JqxBulletChart;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 74 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxButtonGroup = function (_React$Component) {\\n    _inherits(JqxButtonGroup, _React$Component);\\n\\n    function JqxButtonGroup() {\\n        _classCallCheck(this, JqxButtonGroup);\\n\\n        return _possibleConstructorReturn(this, (JqxButtonGroup.__proto__ || Object.getPrototypeOf(JqxButtonGroup)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxButtonGroup, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'enableHover', 'mode', 'rtl', 'template', 'theme'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            JQXLite(this.componentSelector).css('margin-left', '1px');if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxButtonGroup(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxButtonGroup('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxButtonGroup(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButtonGroup('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButtonGroup('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButtonGroup('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButtonGroup('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'mode',\\n        value: function mode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButtonGroup('mode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButtonGroup('mode');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButtonGroup('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButtonGroup('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButtonGroup('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButtonGroup('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxButtonGroup('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxButtonGroup('theme');\\n            }\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(index) {\\n            JQXLite(this.componentSelector).jqxButtonGroup('disableAt', index);\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxButtonGroup('disable');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxButtonGroup('destroy');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxButtonGroup('enable');\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(index) {\\n            JQXLite(this.componentSelector).jqxButtonGroup('enableAt', index);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxButtonGroup('focus');\\n        }\\n    }, {\\n        key: 'getSelection',\\n        value: function getSelection() {\\n            return JQXLite(this.componentSelector).jqxButtonGroup('getSelection');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxButtonGroup('render');\\n        }\\n    }, {\\n        key: 'setSelection',\\n        value: function setSelection(index) {\\n            JQXLite(this.componentSelector).jqxButtonGroup('setSelection', index);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxButtonGroup' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxButtonGroup;\\n}(_react2.default.Component);\\n\\nexports.default = JqxButtonGroup;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 75 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxCalendar = function (_React$Component) {\\n    _inherits(JqxCalendar, _React$Component);\\n\\n    function JqxCalendar() {\\n        _classCallCheck(this, JqxCalendar);\\n\\n        return _possibleConstructorReturn(this, (JqxCalendar.__proto__ || Object.getPrototypeOf(JqxCalendar)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxCalendar, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['backText', 'columnHeaderHeight', 'clearstring', 'culture', 'dayNameFormat', 'disabled', 'enableWeekend', 'enableViews', 'enableOtherMonthDays', 'enableFastNavigation', 'enableHover', 'enableAutoNavigation', 'enableTooltips', 'forwardText', 'firstDayOfWeek', 'height', 'min', 'max', 'navigationDelay', 'rowHeaderWidth', 'readOnly', 'restrictedDates', 'rtl', 'stepMonths', 'showWeeknumbers', 'showDayNames', 'showOtherMonthDays', 'showFooter', 'selectionMode', 'specialDates', 'theme', 'titleHeight', 'titleFormat', 'todaystring', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxCalendar(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxCalendar('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxCalendar(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'backText',\\n        value: function backText(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('backText', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('backText');\\n            }\\n        }\\n    }, {\\n        key: 'columnHeaderHeight',\\n        value: function columnHeaderHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('columnHeaderHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('columnHeaderHeight');\\n            }\\n        }\\n    }, {\\n        key: 'clearstring',\\n        value: function clearstring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('clearstring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('clearstring');\\n            }\\n        }\\n    }, {\\n        key: 'culture',\\n        value: function culture(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('culture', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('culture');\\n            }\\n        }\\n    }, {\\n        key: 'dayNameFormat',\\n        value: function dayNameFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('dayNameFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('dayNameFormat');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableWeekend',\\n        value: function enableWeekend(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableWeekend', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableWeekend');\\n            }\\n        }\\n    }, {\\n        key: 'enableViews',\\n        value: function enableViews(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableViews', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableViews');\\n            }\\n        }\\n    }, {\\n        key: 'enableOtherMonthDays',\\n        value: function enableOtherMonthDays(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableOtherMonthDays', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableOtherMonthDays');\\n            }\\n        }\\n    }, {\\n        key: 'enableFastNavigation',\\n        value: function enableFastNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableFastNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableFastNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'enableAutoNavigation',\\n        value: function enableAutoNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableAutoNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableAutoNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'enableTooltips',\\n        value: function enableTooltips(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('enableTooltips', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('enableTooltips');\\n            }\\n        }\\n    }, {\\n        key: 'forwardText',\\n        value: function forwardText(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('forwardText', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('forwardText');\\n            }\\n        }\\n    }, {\\n        key: 'firstDayOfWeek',\\n        value: function firstDayOfWeek(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('firstDayOfWeek', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('firstDayOfWeek');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('height');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('max');\\n            }\\n        }\\n    }, {\\n        key: 'navigationDelay',\\n        value: function navigationDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('navigationDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('navigationDelay');\\n            }\\n        }\\n    }, {\\n        key: 'rowHeaderWidth',\\n        value: function rowHeaderWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('rowHeaderWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('rowHeaderWidth');\\n            }\\n        }\\n    }, {\\n        key: 'readOnly',\\n        value: function readOnly(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('readOnly', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('readOnly');\\n            }\\n        }\\n    }, {\\n        key: 'restrictedDates',\\n        value: function restrictedDates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('restrictedDates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('restrictedDates');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'stepMonths',\\n        value: function stepMonths(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('stepMonths', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('stepMonths');\\n            }\\n        }\\n    }, {\\n        key: 'showWeeknumbers',\\n        value: function showWeeknumbers(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('showWeeknumbers', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('showWeeknumbers');\\n            }\\n        }\\n    }, {\\n        key: 'showDayNames',\\n        value: function showDayNames(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('showDayNames', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('showDayNames');\\n            }\\n        }\\n    }, {\\n        key: 'showOtherMonthDays',\\n        value: function showOtherMonthDays(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('showOtherMonthDays', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('showOtherMonthDays');\\n            }\\n        }\\n    }, {\\n        key: 'showFooter',\\n        value: function showFooter(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('showFooter', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('showFooter');\\n            }\\n        }\\n    }, {\\n        key: 'selectionMode',\\n        value: function selectionMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('selectionMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('selectionMode');\\n            }\\n        }\\n    }, {\\n        key: 'specialDates',\\n        value: function specialDates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('specialDates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('specialDates');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('theme');\\n            }\\n        }\\n    }, {\\n        key: 'titleHeight',\\n        value: function titleHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('titleHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('titleHeight');\\n            }\\n        }\\n    }, {\\n        key: 'titleFormat',\\n        value: function titleFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('titleFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('titleFormat');\\n            }\\n        }\\n    }, {\\n        key: 'todaystring',\\n        value: function todaystring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('todaystring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('todaystring');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('width');\\n            }\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxCalendar('clear');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxCalendar('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxCalendar('focus');\\n        }\\n    }, {\\n        key: 'addSpecialDate',\\n        value: function addSpecialDate(date, tooltip, text) {\\n            JQXLite(this.componentSelector).jqxCalendar('addSpecialDate', date, tooltip, text);\\n        }\\n    }, {\\n        key: 'getMinDate',\\n        value: function getMinDate() {\\n            return JQXLite(this.componentSelector).jqxCalendar('getMinDate');\\n        }\\n    }, {\\n        key: 'getMaxDate',\\n        value: function getMaxDate() {\\n            return JQXLite(this.componentSelector).jqxCalendar('getMaxDate');\\n        }\\n    }, {\\n        key: 'getDate',\\n        value: function getDate() {\\n            return JQXLite(this.componentSelector).jqxCalendar('getDate');\\n        }\\n    }, {\\n        key: 'getRange',\\n        value: function getRange() {\\n            return JQXLite(this.componentSelector).jqxCalendar('getRange');\\n        }\\n    }, {\\n        key: 'navigateForward',\\n        value: function navigateForward(months) {\\n            JQXLite(this.componentSelector).jqxCalendar('navigateForward', months);\\n        }\\n    }, {\\n        key: 'navigateBackward',\\n        value: function navigateBackward(months) {\\n            JQXLite(this.componentSelector).jqxCalendar('navigateBackward', months);\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxCalendar('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxCalendar('refresh');\\n        }\\n    }, {\\n        key: 'setMinDate',\\n        value: function setMinDate(date) {\\n            JQXLite(this.componentSelector).jqxCalendar('setMinDate', date);\\n        }\\n    }, {\\n        key: 'setMaxDate',\\n        value: function setMaxDate(date) {\\n            JQXLite(this.componentSelector).jqxCalendar('setMaxDate', date);\\n        }\\n    }, {\\n        key: 'setDate',\\n        value: function setDate(date) {\\n            JQXLite(this.componentSelector).jqxCalendar('setDate', date);\\n        }\\n    }, {\\n        key: 'setRange',\\n        value: function setRange(date, date2) {\\n            JQXLite(this.componentSelector).jqxCalendar('setRange', date, date2);\\n        }\\n    }, {\\n        key: 'today',\\n        value: function today() {\\n            JQXLite(this.componentSelector).jqxCalendar('today');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value, value2) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxCalendar('val', value, value2);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCalendar('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxCalendar' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxCalendar;\\n}(_react2.default.Component);\\n\\nexports.default = JqxCalendar;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 76 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxChart = function (_React$Component) {\\n    _inherits(JqxChart, _React$Component);\\n\\n    function JqxChart() {\\n        _classCallCheck(this, JqxChart);\\n\\n        return _possibleConstructorReturn(this, (JqxChart.__proto__ || Object.getPrototypeOf(JqxChart)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxChart, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['title', 'description', 'source', 'showBorderLine', 'borderLineColor', 'borderLineWidth', 'backgroundColor', 'backgroundImage', 'showLegend', 'legendLayout', 'categoryAxis', 'padding', 'titlePadding', 'colorScheme', 'greyScale', 'showToolTips', 'toolTipShowDelay', 'toolTipHideDelay', 'toolTipMoveDuration', 'drawBefore', 'draw', 'rtl', 'enableCrosshairs', 'crosshairsColor', 'crosshairsDashStyle', 'crosshairsLineWidth', 'columnSeriesOverlap', 'enabled', 'enableAnimations', 'animationDuration', 'enableAxisTextAnimation', 'renderEngine', 'xAxis', 'valueAxis', 'seriesGroups'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxChart(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxChart('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxChart(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'title',\\n        value: function title(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('title', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('title');\\n            }\\n        }\\n    }, {\\n        key: 'description',\\n        value: function description(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('description', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('description');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('source');\\n            }\\n        }\\n    }, {\\n        key: 'showBorderLine',\\n        value: function showBorderLine(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('showBorderLine', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('showBorderLine');\\n            }\\n        }\\n    }, {\\n        key: 'borderLineColor',\\n        value: function borderLineColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('borderLineColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('borderLineColor');\\n            }\\n        }\\n    }, {\\n        key: 'borderLineWidth',\\n        value: function borderLineWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('borderLineWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('borderLineWidth');\\n            }\\n        }\\n    }, {\\n        key: 'backgroundColor',\\n        value: function backgroundColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('backgroundColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('backgroundColor');\\n            }\\n        }\\n    }, {\\n        key: 'backgroundImage',\\n        value: function backgroundImage(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('backgroundImage', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('backgroundImage');\\n            }\\n        }\\n    }, {\\n        key: 'showLegend',\\n        value: function showLegend(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('showLegend', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('showLegend');\\n            }\\n        }\\n    }, {\\n        key: 'legendLayout',\\n        value: function legendLayout(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('legendLayout', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('legendLayout');\\n            }\\n        }\\n    }, {\\n        key: 'categoryAxis',\\n        value: function categoryAxis(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('categoryAxis', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('categoryAxis');\\n            }\\n        }\\n    }, {\\n        key: 'padding',\\n        value: function padding(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('padding', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('padding');\\n            }\\n        }\\n    }, {\\n        key: 'titlePadding',\\n        value: function titlePadding(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('titlePadding', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('titlePadding');\\n            }\\n        }\\n    }, {\\n        key: 'colorScheme',\\n        value: function colorScheme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('colorScheme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('colorScheme');\\n            }\\n        }\\n    }, {\\n        key: 'greyScale',\\n        value: function greyScale(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('greyScale', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('greyScale');\\n            }\\n        }\\n    }, {\\n        key: 'showToolTips',\\n        value: function showToolTips(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('showToolTips', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('showToolTips');\\n            }\\n        }\\n    }, {\\n        key: 'toolTipShowDelay',\\n        value: function toolTipShowDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('toolTipShowDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('toolTipShowDelay');\\n            }\\n        }\\n    }, {\\n        key: 'toolTipHideDelay',\\n        value: function toolTipHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('toolTipHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('toolTipHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'toolTipMoveDuration',\\n        value: function toolTipMoveDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('toolTipMoveDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('toolTipMoveDuration');\\n            }\\n        }\\n    }, {\\n        key: 'drawBefore',\\n        value: function drawBefore(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('drawBefore', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('drawBefore');\\n            }\\n        }\\n    }, {\\n        key: 'draw',\\n        value: function draw(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('draw', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('draw');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'enableCrosshairs',\\n        value: function enableCrosshairs(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('enableCrosshairs', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('enableCrosshairs');\\n            }\\n        }\\n    }, {\\n        key: 'crosshairsColor',\\n        value: function crosshairsColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('crosshairsColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('crosshairsColor');\\n            }\\n        }\\n    }, {\\n        key: 'crosshairsDashStyle',\\n        value: function crosshairsDashStyle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('crosshairsDashStyle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('crosshairsDashStyle');\\n            }\\n        }\\n    }, {\\n        key: 'crosshairsLineWidth',\\n        value: function crosshairsLineWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('crosshairsLineWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('crosshairsLineWidth');\\n            }\\n        }\\n    }, {\\n        key: 'columnSeriesOverlap',\\n        value: function columnSeriesOverlap(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('columnSeriesOverlap', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('columnSeriesOverlap');\\n            }\\n        }\\n    }, {\\n        key: 'enabled',\\n        value: function enabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('enabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('enabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableAnimations',\\n        value: function enableAnimations(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('enableAnimations', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('enableAnimations');\\n            }\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'enableAxisTextAnimation',\\n        value: function enableAxisTextAnimation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('enableAxisTextAnimation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('enableAxisTextAnimation');\\n            }\\n        }\\n    }, {\\n        key: 'renderEngine',\\n        value: function renderEngine(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('renderEngine', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('renderEngine');\\n            }\\n        }\\n    }, {\\n        key: 'xAxis',\\n        value: function xAxis(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('xAxis', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('xAxis');\\n            }\\n        }\\n    }, {\\n        key: 'valueAxis',\\n        value: function valueAxis(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('valueAxis', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('valueAxis');\\n            }\\n        }\\n    }, {\\n        key: 'seriesGroups',\\n        value: function seriesGroups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxChart('seriesGroups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxChart('seriesGroups');\\n            }\\n        }\\n    }, {\\n        key: 'getInstance',\\n        value: function getInstance() {\\n            return JQXLite(this.componentSelector).jqxChart('getInstance');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            return JQXLite(this.componentSelector).jqxChart('refresh');\\n        }\\n    }, {\\n        key: 'update',\\n        value: function update() {\\n            return JQXLite(this.componentSelector).jqxChart('update');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            return JQXLite(this.componentSelector).jqxChart('destroy');\\n        }\\n    }, {\\n        key: 'addColorScheme',\\n        value: function addColorScheme(schemeName, colors) {\\n            return JQXLite(this.componentSelector).jqxChart('addColorScheme', schemeName, colors);\\n        }\\n    }, {\\n        key: 'removeColorScheme',\\n        value: function removeColorScheme(schemeName) {\\n            return JQXLite(this.componentSelector).jqxChart('removeColorScheme', schemeName);\\n        }\\n    }, {\\n        key: 'getItemsCount',\\n        value: function getItemsCount(groupIndex, serieIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getItemsCount', groupIndex, serieIndex);\\n        }\\n    }, {\\n        key: 'getItemCoord',\\n        value: function getItemCoord(groupIndex, serieIndex, itemIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getItemCoord', groupIndex, serieIndex, itemIndex);\\n        }\\n    }, {\\n        key: 'getXAxisRect',\\n        value: function getXAxisRect(groupIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getXAxisRect', groupIndex);\\n        }\\n    }, {\\n        key: 'getXAxisLabels',\\n        value: function getXAxisLabels(groupIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getXAxisLabels', groupIndex);\\n        }\\n    }, {\\n        key: 'getValueAxisRect',\\n        value: function getValueAxisRect(groupIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getValueAxisRect', groupIndex);\\n        }\\n    }, {\\n        key: 'getValueAxisLabels',\\n        value: function getValueAxisLabels(groupIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getValueAxisLabels', groupIndex);\\n        }\\n    }, {\\n        key: 'getColorScheme',\\n        value: function getColorScheme(colorScheme) {\\n            return JQXLite(this.componentSelector).jqxChart('getColorScheme', colorScheme);\\n        }\\n    }, {\\n        key: 'hideSerie',\\n        value: function hideSerie(groupIndex, serieIndex, itemIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('hideSerie', groupIndex, serieIndex, itemIndex);\\n        }\\n    }, {\\n        key: 'showSerie',\\n        value: function showSerie(groupIndex, serieIndex, itemIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('showSerie', groupIndex, serieIndex, itemIndex);\\n        }\\n    }, {\\n        key: 'hideToolTip',\\n        value: function hideToolTip(hideDelay) {\\n            return JQXLite(this.componentSelector).jqxChart('hideToolTip', hideDelay);\\n        }\\n    }, {\\n        key: 'showToolTip',\\n        value: function showToolTip(groupIndex, serieIndex, itemIndex, showDelay, hideDelay) {\\n            return JQXLite(this.componentSelector).jqxChart('showToolTip', groupIndex, serieIndex, itemIndex, showDelay, hideDelay);\\n        }\\n    }, {\\n        key: 'saveAsJPEG',\\n        value: function saveAsJPEG(fileName, exportServerUrl) {\\n            return JQXLite(this.componentSelector).jqxChart('saveAsJPEG', fileName, exportServerUrl);\\n        }\\n    }, {\\n        key: 'saveAsPNG',\\n        value: function saveAsPNG(fileName, exportServerUrl) {\\n            return JQXLite(this.componentSelector).jqxChart('saveAsPNG', fileName, exportServerUrl);\\n        }\\n    }, {\\n        key: 'saveAsPDF',\\n        value: function saveAsPDF(fileName, exportServerUrl) {\\n            return JQXLite(this.componentSelector).jqxChart('saveAsPDF', fileName, exportServerUrl);\\n        }\\n    }, {\\n        key: 'getXAxisValue',\\n        value: function getXAxisValue(offset, groupIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getXAxisValue', offset, groupIndex);\\n        }\\n    }, {\\n        key: 'getValueAxisValue',\\n        value: function getValueAxisValue(offset, groupIndex) {\\n            return JQXLite(this.componentSelector).jqxChart('getValueAxisValue', offset, groupIndex);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxChart' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxChart;\\n}(_react2.default.Component);\\n\\nexports.default = JqxChart;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 77 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxCheckBox = function (_React$Component) {\\n    _inherits(JqxCheckBox, _React$Component);\\n\\n    function JqxCheckBox() {\\n        _classCallCheck(this, JqxCheckBox);\\n\\n        return _possibleConstructorReturn(this, (JqxCheckBox.__proto__ || Object.getPrototypeOf(JqxCheckBox)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxCheckBox, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationShowDelay', 'animationHideDelay', 'boxSize', 'checked', 'disabled', 'enableContainerClick', 'groupName', 'height', 'hasThreeStates', 'locked', 'rtl', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxCheckBox(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxCheckBox('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxCheckBox(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationShowDelay',\\n        value: function animationShowDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('animationShowDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('animationShowDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDelay',\\n        value: function animationHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('animationHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('animationHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'boxSize',\\n        value: function boxSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('boxSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('boxSize');\\n            }\\n        }\\n    }, {\\n        key: 'checked',\\n        value: function checked(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('checked', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('checked');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableContainerClick',\\n        value: function enableContainerClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('enableContainerClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('enableContainerClick');\\n            }\\n        }\\n    }, {\\n        key: 'groupName',\\n        value: function groupName(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('groupName', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('groupName');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('height');\\n            }\\n        }\\n    }, {\\n        key: 'hasThreeStates',\\n        value: function hasThreeStates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('hasThreeStates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('hasThreeStates');\\n            }\\n        }\\n    }, {\\n        key: 'locked',\\n        value: function locked(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('locked', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('locked');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('width');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxCheckBox('check');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxCheckBox('disable');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxCheckBox('destroy');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxCheckBox('enable');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxCheckBox('focus');\\n        }\\n    }, {\\n        key: 'indeterminate',\\n        value: function indeterminate() {\\n            JQXLite(this.componentSelector).jqxCheckBox('indeterminate');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxCheckBox('render');\\n        }\\n    }, {\\n        key: 'toggle',\\n        value: function toggle() {\\n            JQXLite(this.componentSelector).jqxCheckBox('toggle');\\n        }\\n    }, {\\n        key: 'uncheck',\\n        value: function uncheck() {\\n            JQXLite(this.componentSelector).jqxCheckBox('uncheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxCheckBox('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxCheckBox('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxCheckBox' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                _react2.default.createElement(\\n                    'span',\\n                    null,\\n                    this.props.value\\n                )\\n            );\\n        }\\n    }]);\\n\\n    return JqxCheckBox;\\n}(_react2.default.Component);\\n\\nexports.default = JqxCheckBox;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 78 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxColorPicker = function (_React$Component) {\\n    _inherits(JqxColorPicker, _React$Component);\\n\\n    function JqxColorPicker() {\\n        _classCallCheck(this, JqxColorPicker);\\n\\n        return _possibleConstructorReturn(this, (JqxColorPicker.__proto__ || Object.getPrototypeOf(JqxColorPicker)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxColorPicker, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['color', 'colorMode', 'disabled', 'height', 'showTransparent', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxColorPicker(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxColorPicker('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxColorPicker(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'color',\\n        value: function color(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxColorPicker('color', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxColorPicker('color');\\n            }\\n        }\\n    }, {\\n        key: 'colorMode',\\n        value: function colorMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxColorPicker('colorMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxColorPicker('colorMode');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxColorPicker('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxColorPicker('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxColorPicker('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxColorPicker('height');\\n            }\\n        }\\n    }, {\\n        key: 'showTransparent',\\n        value: function showTransparent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxColorPicker('showTransparent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxColorPicker('showTransparent');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxColorPicker('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxColorPicker('width');\\n            }\\n        }\\n    }, {\\n        key: 'getColor',\\n        value: function getColor() {\\n            return JQXLite(this.componentSelector).jqxColorPicker('getColor');\\n        }\\n    }, {\\n        key: 'setColor',\\n        value: function setColor(color) {\\n            JQXLite(this.componentSelector).jqxColorPicker('setColor', color);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxColorPicker' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxColorPicker;\\n}(_react2.default.Component);\\n\\nexports.default = JqxColorPicker;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 79 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxComboBox = function (_React$Component) {\\n    _inherits(JqxComboBox, _React$Component);\\n\\n    function JqxComboBox() {\\n        _classCallCheck(this, JqxComboBox);\\n\\n        return _possibleConstructorReturn(this, (JqxComboBox.__proto__ || Object.getPrototypeOf(JqxComboBox)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxComboBox, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'autoComplete', 'autoOpen', 'autoItemsHeight', 'autoDropDownHeight', 'closeDelay', 'checkboxes', 'disabled', 'displayMember', 'dropDownHorizontalAlignment', 'dropDownVerticalAlignment', 'dropDownHeight', 'dropDownWidth', 'enableHover', 'enableSelection', 'enableBrowserBoundsDetection', 'height', 'itemHeight', 'multiSelect', 'minLength', 'openDelay', 'popupZIndex', 'placeHolder', 'remoteAutoComplete', 'remoteAutoCompleteDelay', 'renderer', 'renderSelectedItem', 'rtl', 'selectedIndex', 'showArrow', 'showCloseButtons', 'searchMode', 'search', 'source', 'scrollBarSize', 'template', 'theme', 'validateSelection', 'valueMember', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxComboBox(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxComboBox('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxComboBox(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'autoComplete',\\n        value: function autoComplete(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('autoComplete', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('autoComplete');\\n            }\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'autoItemsHeight',\\n        value: function autoItemsHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('autoItemsHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('autoItemsHeight');\\n            }\\n        }\\n    }, {\\n        key: 'autoDropDownHeight',\\n        value: function autoDropDownHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('autoDropDownHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('autoDropDownHeight');\\n            }\\n        }\\n    }, {\\n        key: 'closeDelay',\\n        value: function closeDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('closeDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('closeDelay');\\n            }\\n        }\\n    }, {\\n        key: 'checkboxes',\\n        value: function checkboxes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('checkboxes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('checkboxes');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownHorizontalAlignment',\\n        value: function dropDownHorizontalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('dropDownHorizontalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('dropDownHorizontalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownVerticalAlignment',\\n        value: function dropDownVerticalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('dropDownVerticalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('dropDownVerticalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownHeight',\\n        value: function dropDownHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('dropDownHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('dropDownHeight');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownWidth',\\n        value: function dropDownWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('dropDownWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('dropDownWidth');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'enableSelection',\\n        value: function enableSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('enableSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('enableSelection');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserBoundsDetection',\\n        value: function enableBrowserBoundsDetection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('enableBrowserBoundsDetection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('enableBrowserBoundsDetection');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('height');\\n            }\\n        }\\n    }, {\\n        key: 'itemHeight',\\n        value: function itemHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('itemHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('itemHeight');\\n            }\\n        }\\n    }, {\\n        key: 'multiSelect',\\n        value: function multiSelect(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('multiSelect', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('multiSelect');\\n            }\\n        }\\n    }, {\\n        key: 'minLength',\\n        value: function minLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('minLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('minLength');\\n            }\\n        }\\n    }, {\\n        key: 'openDelay',\\n        value: function openDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('openDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('openDelay');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'remoteAutoComplete',\\n        value: function remoteAutoComplete(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('remoteAutoComplete', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('remoteAutoComplete');\\n            }\\n        }\\n    }, {\\n        key: 'remoteAutoCompleteDelay',\\n        value: function remoteAutoCompleteDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('remoteAutoCompleteDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('remoteAutoCompleteDelay');\\n            }\\n        }\\n    }, {\\n        key: 'renderer',\\n        value: function renderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('renderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('renderer');\\n            }\\n        }\\n    }, {\\n        key: 'renderSelectedItem',\\n        value: function renderSelectedItem(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('renderSelectedItem', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('renderSelectedItem');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'selectedIndex',\\n        value: function selectedIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('selectedIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('selectedIndex');\\n            }\\n        }\\n    }, {\\n        key: 'showArrow',\\n        value: function showArrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('showArrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('showArrow');\\n            }\\n        }\\n    }, {\\n        key: 'showCloseButtons',\\n        value: function showCloseButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('showCloseButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('showCloseButtons');\\n            }\\n        }\\n    }, {\\n        key: 'searchMode',\\n        value: function searchMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('searchMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('searchMode');\\n            }\\n        }\\n    }, {\\n        key: 'search',\\n        value: function search(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('search', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('search');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('source');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('theme');\\n            }\\n        }\\n    }, {\\n        key: 'validateSelection',\\n        value: function validateSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('validateSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('validateSelection');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('width');\\n            }\\n        }\\n    }, {\\n        key: 'addItem',\\n        value: function addItem(item) {\\n            return JQXLite(this.componentSelector).jqxComboBox('addItem', item);\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxComboBox('clearSelection');\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxComboBox('clear');\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxComboBox('close');\\n        }\\n    }, {\\n        key: 'checkIndex',\\n        value: function checkIndex(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('checkIndex', index);\\n        }\\n    }, {\\n        key: 'checkItem',\\n        value: function checkItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('checkItem', item);\\n        }\\n    }, {\\n        key: 'checkAll',\\n        value: function checkAll() {\\n            JQXLite(this.componentSelector).jqxComboBox('checkAll');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxComboBox('destroy');\\n        }\\n    }, {\\n        key: 'disableItem',\\n        value: function disableItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('disableItem', item);\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('disableAt', index);\\n        }\\n    }, {\\n        key: 'enableItem',\\n        value: function enableItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('enableItem', item);\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('enableAt', index);\\n        }\\n    }, {\\n        key: 'ensureVisible',\\n        value: function ensureVisible(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('ensureVisible', index);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxComboBox('focus');\\n        }\\n    }, {\\n        key: 'getItem',\\n        value: function getItem(index) {\\n            return JQXLite(this.componentSelector).jqxComboBox('getItem', index);\\n        }\\n    }, {\\n        key: 'getItemByValue',\\n        value: function getItemByValue(value) {\\n            return JQXLite(this.componentSelector).jqxComboBox('getItemByValue', value);\\n        }\\n    }, {\\n        key: 'getVisibleItems',\\n        value: function getVisibleItems() {\\n            return JQXLite(this.componentSelector).jqxComboBox('getVisibleItems');\\n        }\\n    }, {\\n        key: 'getItems',\\n        value: function getItems() {\\n            return JQXLite(this.componentSelector).jqxComboBox('getItems');\\n        }\\n    }, {\\n        key: 'getCheckedItems',\\n        value: function getCheckedItems() {\\n            return JQXLite(this.componentSelector).jqxComboBox('getCheckedItems');\\n        }\\n    }, {\\n        key: 'getSelectedItem',\\n        value: function getSelectedItem() {\\n            return JQXLite(this.componentSelector).jqxComboBox('getSelectedItem');\\n        }\\n    }, {\\n        key: 'getSelectedItems',\\n        value: function getSelectedItems() {\\n            return JQXLite(this.componentSelector).jqxComboBox('getSelectedItems');\\n        }\\n    }, {\\n        key: 'getSelectedIndex',\\n        value: function getSelectedIndex() {\\n            return JQXLite(this.componentSelector).jqxComboBox('getSelectedIndex');\\n        }\\n    }, {\\n        key: 'insertAt',\\n        value: function insertAt(item, index) {\\n            return JQXLite(this.componentSelector).jqxComboBox('insertAt', item, index);\\n        }\\n    }, {\\n        key: 'isOpened',\\n        value: function isOpened() {\\n            return JQXLite(this.componentSelector).jqxComboBox('isOpened');\\n        }\\n    }, {\\n        key: 'indeterminateIndex',\\n        value: function indeterminateIndex(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('indeterminateIndex', index);\\n        }\\n    }, {\\n        key: 'indeterminateItem',\\n        value: function indeterminateItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('indeterminateItem', item);\\n        }\\n    }, {\\n        key: 'loadFromSelect',\\n        value: function loadFromSelect(selectTagId) {\\n            JQXLite(this.componentSelector).jqxComboBox('loadFromSelect', selectTagId);\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxComboBox('open');\\n        }\\n    }, {\\n        key: 'removeItem',\\n        value: function removeItem(item) {\\n            return JQXLite(this.componentSelector).jqxComboBox('removeItem', item);\\n        }\\n    }, {\\n        key: 'removeAt',\\n        value: function removeAt(index) {\\n            return JQXLite(this.componentSelector).jqxComboBox('removeAt', index);\\n        }\\n    }, {\\n        key: 'selectIndex',\\n        value: function selectIndex(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('selectIndex', index);\\n        }\\n    }, {\\n        key: 'selectItem',\\n        value: function selectItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('selectItem', item);\\n        }\\n    }, {\\n        key: 'searchstring',\\n        value: function searchstring() {\\n            return JQXLite(this.componentSelector).jqxComboBox('searchstring');\\n        }\\n    }, {\\n        key: 'updateItem',\\n        value: function updateItem(item, itemValue) {\\n            JQXLite(this.componentSelector).jqxComboBox('updateItem', item, itemValue);\\n        }\\n    }, {\\n        key: 'updateAt',\\n        value: function updateAt(item, index) {\\n            JQXLite(this.componentSelector).jqxComboBox('updateAt', item, index);\\n        }\\n    }, {\\n        key: 'unselectIndex',\\n        value: function unselectIndex(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('unselectIndex', index);\\n        }\\n    }, {\\n        key: 'unselectItem',\\n        value: function unselectItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('unselectItem', item);\\n        }\\n    }, {\\n        key: 'uncheckIndex',\\n        value: function uncheckIndex(index) {\\n            JQXLite(this.componentSelector).jqxComboBox('uncheckIndex', index);\\n        }\\n    }, {\\n        key: 'uncheckItem',\\n        value: function uncheckItem(item) {\\n            JQXLite(this.componentSelector).jqxComboBox('uncheckItem', item);\\n        }\\n    }, {\\n        key: 'uncheckAll',\\n        value: function uncheckAll() {\\n            JQXLite(this.componentSelector).jqxComboBox('uncheckAll');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxComboBox('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComboBox('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxComboBox' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxComboBox;\\n}(_react2.default.Component);\\n\\nexports.default = JqxComboBox;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 80 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxComplexInput = function (_React$Component) {\\n    _inherits(JqxComplexInput, _React$Component);\\n\\n    function JqxComplexInput() {\\n        _classCallCheck(this, JqxComplexInput);\\n\\n        return _possibleConstructorReturn(this, (JqxComplexInput.__proto__ || Object.getPrototypeOf(JqxComplexInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxComplexInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['decimalNotation', 'disabled', 'height', 'placeHolder', 'roundedCorners', 'rtl', 'spinButtons', 'spinButtonsStep', 'template', 'theme', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxComplexInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxComplexInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxComplexInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'decimalNotation',\\n        value: function decimalNotation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('decimalNotation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('decimalNotation');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtons',\\n        value: function spinButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('spinButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('spinButtons');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtonsStep',\\n        value: function spinButtonsStep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('spinButtonsStep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('spinButtonsStep');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxComplexInput('destroy');\\n        }\\n    }, {\\n        key: 'getReal',\\n        value: function getReal(complexnumber) {\\n            return JQXLite(this.componentSelector).jqxComplexInput('getReal', complexnumber);\\n        }\\n    }, {\\n        key: 'getImaginary',\\n        value: function getImaginary(complexnumber) {\\n            return JQXLite(this.componentSelector).jqxComplexInput('getImaginary', complexnumber);\\n        }\\n    }, {\\n        key: 'getDecimalNotation',\\n        value: function getDecimalNotation(part, type) {\\n            return JQXLite(this.componentSelector).jqxComplexInput('getDecimalNotation', part, type);\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxComplexInput('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxComplexInput('refresh');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxComplexInput('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxComplexInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxComplexInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                _react2.default.createElement('input', { type: 'text' }),\\n                _react2.default.createElement('div', null)\\n            );\\n        }\\n    }]);\\n\\n    return JqxComplexInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxComplexInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 81 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDataTable = function (_React$Component) {\\n    _inherits(JqxDataTable, _React$Component);\\n\\n    function JqxDataTable() {\\n        _classCallCheck(this, JqxDataTable);\\n\\n        return _possibleConstructorReturn(this, (JqxDataTable.__proto__ || Object.getPrototypeOf(JqxDataTable)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDataTable, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['altRows', 'autoRowHeight', 'aggregatesHeight', 'autoShowLoadElement', 'columnsHeight', 'columns', 'columnGroups', 'columnsResize', 'columnsReorder', 'disabled', 'editable', 'editSettings', 'exportSettings', 'enableHover', 'enableBrowserSelection', 'filterable', 'filterHeight', 'filterMode', 'groups', 'groupsRenderer', 'height', 'initRowDetails', 'incrementalSearch', 'localization', 'pagerHeight', 'pageSize', 'pageSizeOptions', 'pageable', 'pagerPosition', 'pagerMode', 'pagerButtonsCount', 'pagerRenderer', 'ready', 'rowDetails', 'renderToolbar', 'renderStatusbar', 'rendering', 'rendered', 'rtl', 'source', 'sortable', 'showAggregates', 'showToolbar', 'showStatusbar', 'statusBarHeight', 'scrollBarSize', 'selectionMode', 'serverProcessing', 'showHeader', 'theme', 'toolbarHeight', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDataTable(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDataTable('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDataTable(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'altRows',\\n        value: function altRows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('altRows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('altRows');\\n            }\\n        }\\n    }, {\\n        key: 'autoRowHeight',\\n        value: function autoRowHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('autoRowHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('autoRowHeight');\\n            }\\n        }\\n    }, {\\n        key: 'aggregatesHeight',\\n        value: function aggregatesHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('aggregatesHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('aggregatesHeight');\\n            }\\n        }\\n    }, {\\n        key: 'autoShowLoadElement',\\n        value: function autoShowLoadElement(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('autoShowLoadElement', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('autoShowLoadElement');\\n            }\\n        }\\n    }, {\\n        key: 'columnsHeight',\\n        value: function columnsHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('columnsHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('columnsHeight');\\n            }\\n        }\\n    }, {\\n        key: 'columns',\\n        value: function columns(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('columns', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('columns');\\n            }\\n        }\\n    }, {\\n        key: 'columnGroups',\\n        value: function columnGroups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('columnGroups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('columnGroups');\\n            }\\n        }\\n    }, {\\n        key: 'columnsResize',\\n        value: function columnsResize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('columnsResize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('columnsResize');\\n            }\\n        }\\n    }, {\\n        key: 'columnsReorder',\\n        value: function columnsReorder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('columnsReorder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('columnsReorder');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'editable',\\n        value: function editable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('editable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('editable');\\n            }\\n        }\\n    }, {\\n        key: 'editSettings',\\n        value: function editSettings(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('editSettings', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('editSettings');\\n            }\\n        }\\n    }, {\\n        key: 'exportSettings',\\n        value: function exportSettings(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('exportSettings', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('exportSettings');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserSelection',\\n        value: function enableBrowserSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('enableBrowserSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('enableBrowserSelection');\\n            }\\n        }\\n    }, {\\n        key: 'filterable',\\n        value: function filterable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('filterable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('filterable');\\n            }\\n        }\\n    }, {\\n        key: 'filterHeight',\\n        value: function filterHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('filterHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('filterHeight');\\n            }\\n        }\\n    }, {\\n        key: 'filterMode',\\n        value: function filterMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('filterMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('filterMode');\\n            }\\n        }\\n    }, {\\n        key: 'groups',\\n        value: function groups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('groups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('groups');\\n            }\\n        }\\n    }, {\\n        key: 'groupsRenderer',\\n        value: function groupsRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('groupsRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('groupsRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('height');\\n            }\\n        }\\n    }, {\\n        key: 'initRowDetails',\\n        value: function initRowDetails(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('initRowDetails', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('initRowDetails');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearch',\\n        value: function incrementalSearch(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('incrementalSearch', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('incrementalSearch');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('localization');\\n            }\\n        }\\n    }, {\\n        key: 'pagerHeight',\\n        value: function pagerHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pagerHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pagerHeight');\\n            }\\n        }\\n    }, {\\n        key: 'pageSize',\\n        value: function pageSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pageSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pageSize');\\n            }\\n        }\\n    }, {\\n        key: 'pageSizeOptions',\\n        value: function pageSizeOptions(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pageSizeOptions', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pageSizeOptions');\\n            }\\n        }\\n    }, {\\n        key: 'pageable',\\n        value: function pageable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pageable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pageable');\\n            }\\n        }\\n    }, {\\n        key: 'pagerPosition',\\n        value: function pagerPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pagerPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pagerPosition');\\n            }\\n        }\\n    }, {\\n        key: 'pagerMode',\\n        value: function pagerMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pagerMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pagerMode');\\n            }\\n        }\\n    }, {\\n        key: 'pagerButtonsCount',\\n        value: function pagerButtonsCount(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pagerButtonsCount', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pagerButtonsCount');\\n            }\\n        }\\n    }, {\\n        key: 'pagerRenderer',\\n        value: function pagerRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('pagerRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('pagerRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'ready',\\n        value: function ready(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('ready', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('ready');\\n            }\\n        }\\n    }, {\\n        key: 'rowDetails',\\n        value: function rowDetails(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('rowDetails', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('rowDetails');\\n            }\\n        }\\n    }, {\\n        key: 'renderToolbar',\\n        value: function renderToolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('renderToolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('renderToolbar');\\n            }\\n        }\\n    }, {\\n        key: 'renderStatusbar',\\n        value: function renderStatusbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('renderStatusbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('renderStatusbar');\\n            }\\n        }\\n    }, {\\n        key: 'rendering',\\n        value: function rendering(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('rendering', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('rendering');\\n            }\\n        }\\n    }, {\\n        key: 'rendered',\\n        value: function rendered(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('rendered', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('rendered');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('source');\\n            }\\n        }\\n    }, {\\n        key: 'sortable',\\n        value: function sortable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('sortable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('sortable');\\n            }\\n        }\\n    }, {\\n        key: 'showAggregates',\\n        value: function showAggregates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('showAggregates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('showAggregates');\\n            }\\n        }\\n    }, {\\n        key: 'showToolbar',\\n        value: function showToolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('showToolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('showToolbar');\\n            }\\n        }\\n    }, {\\n        key: 'showStatusbar',\\n        value: function showStatusbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('showStatusbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('showStatusbar');\\n            }\\n        }\\n    }, {\\n        key: 'statusBarHeight',\\n        value: function statusBarHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('statusBarHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('statusBarHeight');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'selectionMode',\\n        value: function selectionMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('selectionMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('selectionMode');\\n            }\\n        }\\n    }, {\\n        key: 'serverProcessing',\\n        value: function serverProcessing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('serverProcessing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('serverProcessing');\\n            }\\n        }\\n    }, {\\n        key: 'showHeader',\\n        value: function showHeader(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('showHeader', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('showHeader');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toolbarHeight',\\n        value: function toolbarHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('toolbarHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('toolbarHeight');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDataTable('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDataTable('width');\\n            }\\n        }\\n    }, {\\n        key: 'addRow',\\n        value: function addRow(rowIndex, rowData, rowPosition) {\\n            JQXLite(this.componentSelector).jqxDataTable('addRow', rowIndex, rowData, rowPosition);\\n        }\\n    }, {\\n        key: 'addFilter',\\n        value: function addFilter(dataField, filerGroup) {\\n            JQXLite(this.componentSelector).jqxDataTable('addFilter', dataField, filerGroup);\\n        }\\n    }, {\\n        key: 'applyFilters',\\n        value: function applyFilters() {\\n            JQXLite(this.componentSelector).jqxDataTable('applyFilters');\\n        }\\n    }, {\\n        key: 'beginUpdate',\\n        value: function beginUpdate() {\\n            JQXLite(this.componentSelector).jqxDataTable('beginUpdate');\\n        }\\n    }, {\\n        key: 'beginRowEdit',\\n        value: function beginRowEdit(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('beginRowEdit', rowIndex);\\n        }\\n    }, {\\n        key: 'beginCellEdit',\\n        value: function beginCellEdit(rowIndex, dataField) {\\n            JQXLite(this.componentSelector).jqxDataTable('beginCellEdit', rowIndex, dataField);\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxDataTable('clearSelection');\\n        }\\n    }, {\\n        key: 'clearFilters',\\n        value: function clearFilters() {\\n            JQXLite(this.componentSelector).jqxDataTable('clearFilters');\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxDataTable('clear');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxDataTable('destroy');\\n        }\\n    }, {\\n        key: 'deleteRow',\\n        value: function deleteRow(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('deleteRow', rowIndex);\\n        }\\n    }, {\\n        key: 'endUpdate',\\n        value: function endUpdate() {\\n            JQXLite(this.componentSelector).jqxDataTable('endUpdate');\\n        }\\n    }, {\\n        key: 'ensureRowVisible',\\n        value: function ensureRowVisible(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('ensureRowVisible', rowIndex);\\n        }\\n    }, {\\n        key: 'endRowEdit',\\n        value: function endRowEdit(rowIndex, cancelChanges) {\\n            JQXLite(this.componentSelector).jqxDataTable('endRowEdit', rowIndex, cancelChanges);\\n        }\\n    }, {\\n        key: 'endCellEdit',\\n        value: function endCellEdit(rowIndex, dataField) {\\n            JQXLite(this.componentSelector).jqxDataTable('endCellEdit', rowIndex, dataField);\\n        }\\n    }, {\\n        key: 'exportData',\\n        value: function exportData(exportDataType) {\\n            return JQXLite(this.componentSelector).jqxDataTable('exportData', exportDataType);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxDataTable('focus');\\n        }\\n    }, {\\n        key: 'getColumnProperty',\\n        value: function getColumnProperty(dataField, propertyName) {\\n            return JQXLite(this.componentSelector).jqxDataTable('getColumnProperty', dataField, propertyName);\\n        }\\n    }, {\\n        key: 'goToPage',\\n        value: function goToPage(pageIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('goToPage', pageIndex);\\n        }\\n    }, {\\n        key: 'goToPrevPage',\\n        value: function goToPrevPage() {\\n            JQXLite(this.componentSelector).jqxDataTable('goToPrevPage');\\n        }\\n    }, {\\n        key: 'goToNextPage',\\n        value: function goToNextPage() {\\n            JQXLite(this.componentSelector).jqxDataTable('goToNextPage');\\n        }\\n    }, {\\n        key: 'getSelection',\\n        value: function getSelection() {\\n            return JQXLite(this.componentSelector).jqxDataTable('getSelection');\\n        }\\n    }, {\\n        key: 'getRows',\\n        value: function getRows() {\\n            return JQXLite(this.componentSelector).jqxDataTable('getRows');\\n        }\\n    }, {\\n        key: 'getView',\\n        value: function getView() {\\n            return JQXLite(this.componentSelector).jqxDataTable('getView');\\n        }\\n    }, {\\n        key: 'getCellValue',\\n        value: function getCellValue(rowIndex, dataField) {\\n            return JQXLite(this.componentSelector).jqxDataTable('getCellValue', rowIndex, dataField);\\n        }\\n    }, {\\n        key: 'hideColumn',\\n        value: function hideColumn(dataField) {\\n            JQXLite(this.componentSelector).jqxDataTable('hideColumn', dataField);\\n        }\\n    }, {\\n        key: 'hideDetails',\\n        value: function hideDetails(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('hideDetails', rowIndex);\\n        }\\n    }, {\\n        key: 'isBindingCompleted',\\n        value: function isBindingCompleted() {\\n            return JQXLite(this.componentSelector).jqxDataTable('isBindingCompleted');\\n        }\\n    }, {\\n        key: 'lockRow',\\n        value: function lockRow(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('lockRow', rowIndex);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxDataTable('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxDataTable('render');\\n        }\\n    }, {\\n        key: 'removeFilter',\\n        value: function removeFilter(dataField) {\\n            JQXLite(this.componentSelector).jqxDataTable('removeFilter', dataField);\\n        }\\n    }, {\\n        key: 'scrollOffset',\\n        value: function scrollOffset(top, left) {\\n            return JQXLite(this.componentSelector).jqxDataTable('scrollOffset', top, left);\\n        }\\n    }, {\\n        key: 'setColumnProperty',\\n        value: function setColumnProperty(dataField, propertyName, propertyValue) {\\n            JQXLite(this.componentSelector).jqxDataTable('setColumnProperty', dataField, propertyName, propertyValue);\\n        }\\n    }, {\\n        key: 'showColumn',\\n        value: function showColumn(dataField) {\\n            JQXLite(this.componentSelector).jqxDataTable('showColumn', dataField);\\n        }\\n    }, {\\n        key: 'selectRow',\\n        value: function selectRow(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('selectRow', rowIndex);\\n        }\\n    }, {\\n        key: 'showDetails',\\n        value: function showDetails(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('showDetails', rowIndex);\\n        }\\n    }, {\\n        key: 'setCellValue',\\n        value: function setCellValue(rowIndex, dataField, value) {\\n            JQXLite(this.componentSelector).jqxDataTable('setCellValue', rowIndex, dataField, value);\\n        }\\n    }, {\\n        key: 'sortBy',\\n        value: function sortBy(dataField, sortOrder) {\\n            JQXLite(this.componentSelector).jqxDataTable('sortBy', dataField, sortOrder);\\n        }\\n    }, {\\n        key: 'updating',\\n        value: function updating() {\\n            return JQXLite(this.componentSelector).jqxDataTable('updating');\\n        }\\n    }, {\\n        key: 'updateBoundData',\\n        value: function updateBoundData() {\\n            JQXLite(this.componentSelector).jqxDataTable('updateBoundData');\\n        }\\n    }, {\\n        key: 'unselectRow',\\n        value: function unselectRow(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('unselectRow', rowIndex);\\n        }\\n    }, {\\n        key: 'updateRow',\\n        value: function updateRow(rowIndex, rowData) {\\n            JQXLite(this.componentSelector).jqxDataTable('updateRow', rowIndex, rowData);\\n        }\\n    }, {\\n        key: 'unlockRow',\\n        value: function unlockRow(rowIndex) {\\n            JQXLite(this.componentSelector).jqxDataTable('unlockRow', rowIndex);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDataTable' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDataTable;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDataTable;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 82 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDateTimeInput = function (_React$Component) {\\n    _inherits(JqxDateTimeInput, _React$Component);\\n\\n    function JqxDateTimeInput() {\\n        _classCallCheck(this, JqxDateTimeInput);\\n\\n        return _possibleConstructorReturn(this, (JqxDateTimeInput.__proto__ || Object.getPrototypeOf(JqxDateTimeInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDateTimeInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'allowNullDate', 'allowKeyboardDelete', 'clearstring', 'culture', 'closeDelay', 'closeCalendarAfterSelection', 'dropDownHorizontalAlignment', 'dropDownVerticalAlignment', 'disabled', 'enableBrowserBoundsDetection', 'enableAbsoluteSelection', 'firstDayOfWeek', 'formatstring', 'height', 'min', 'max', 'openDelay', 'placeHolder', 'popupZIndex', 'rtl', 'readonly', 'showFooter', 'selectionMode', 'showWeeknumbers', 'showTimeButton', 'showCalendarButton', 'theme', 'template', 'textAlign', 'todaystring', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDateTimeInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDateTimeInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'allowNullDate',\\n        value: function allowNullDate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('allowNullDate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('allowNullDate');\\n            }\\n        }\\n    }, {\\n        key: 'allowKeyboardDelete',\\n        value: function allowKeyboardDelete(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('allowKeyboardDelete', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('allowKeyboardDelete');\\n            }\\n        }\\n    }, {\\n        key: 'clearstring',\\n        value: function clearstring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('clearstring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('clearstring');\\n            }\\n        }\\n    }, {\\n        key: 'culture',\\n        value: function culture(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('culture', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('culture');\\n            }\\n        }\\n    }, {\\n        key: 'closeDelay',\\n        value: function closeDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('closeDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('closeDelay');\\n            }\\n        }\\n    }, {\\n        key: 'closeCalendarAfterSelection',\\n        value: function closeCalendarAfterSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('closeCalendarAfterSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('closeCalendarAfterSelection');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownHorizontalAlignment',\\n        value: function dropDownHorizontalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('dropDownHorizontalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('dropDownHorizontalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownVerticalAlignment',\\n        value: function dropDownVerticalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('dropDownVerticalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('dropDownVerticalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserBoundsDetection',\\n        value: function enableBrowserBoundsDetection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('enableBrowserBoundsDetection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('enableBrowserBoundsDetection');\\n            }\\n        }\\n    }, {\\n        key: 'enableAbsoluteSelection',\\n        value: function enableAbsoluteSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('enableAbsoluteSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('enableAbsoluteSelection');\\n            }\\n        }\\n    }, {\\n        key: 'firstDayOfWeek',\\n        value: function firstDayOfWeek(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('firstDayOfWeek', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('firstDayOfWeek');\\n            }\\n        }\\n    }, {\\n        key: 'formatstring',\\n        value: function formatstring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('formatstring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('formatstring');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('max');\\n            }\\n        }\\n    }, {\\n        key: 'openDelay',\\n        value: function openDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('openDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('openDelay');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'readonly',\\n        value: function readonly(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('readonly', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('readonly');\\n            }\\n        }\\n    }, {\\n        key: 'showFooter',\\n        value: function showFooter(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('showFooter', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('showFooter');\\n            }\\n        }\\n    }, {\\n        key: 'selectionMode',\\n        value: function selectionMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('selectionMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('selectionMode');\\n            }\\n        }\\n    }, {\\n        key: 'showWeeknumbers',\\n        value: function showWeeknumbers(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('showWeeknumbers', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('showWeeknumbers');\\n            }\\n        }\\n    }, {\\n        key: 'showTimeButton',\\n        value: function showTimeButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('showTimeButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('showTimeButton');\\n            }\\n        }\\n    }, {\\n        key: 'showCalendarButton',\\n        value: function showCalendarButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('showCalendarButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('showCalendarButton');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('template');\\n            }\\n        }\\n    }, {\\n        key: 'textAlign',\\n        value: function textAlign(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('textAlign', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('textAlign');\\n            }\\n        }\\n    }, {\\n        key: 'todaystring',\\n        value: function todaystring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('todaystring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('todaystring');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('close');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('focus');\\n        }\\n    }, {\\n        key: 'getRange',\\n        value: function getRange(date) {\\n            return JQXLite(this.componentSelector).jqxDateTimeInput('getRange', date);\\n        }\\n    }, {\\n        key: 'getText',\\n        value: function getText() {\\n            return JQXLite(this.componentSelector).jqxDateTimeInput('getText');\\n        }\\n    }, {\\n        key: 'getDate',\\n        value: function getDate() {\\n            return JQXLite(this.componentSelector).jqxDateTimeInput('getDate');\\n        }\\n    }, {\\n        key: 'getMaxDate',\\n        value: function getMaxDate() {\\n            return JQXLite(this.componentSelector).jqxDateTimeInput('getMaxDate');\\n        }\\n    }, {\\n        key: 'getMinDate',\\n        value: function getMinDate() {\\n            return JQXLite(this.componentSelector).jqxDateTimeInput('getMinDate');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('open');\\n        }\\n    }, {\\n        key: 'setRange',\\n        value: function setRange(date, date2) {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('setRange', date, date2);\\n        }\\n    }, {\\n        key: 'setMinDate',\\n        value: function setMinDate(date) {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('setMinDate', date);\\n        }\\n    }, {\\n        key: 'setMaxDate',\\n        value: function setMaxDate(date) {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('setMaxDate', date);\\n        }\\n    }, {\\n        key: 'setDate',\\n        value: function setDate(date) {\\n            JQXLite(this.componentSelector).jqxDateTimeInput('setDate', date);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value, value2) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxDateTimeInput('val', value, value2);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDateTimeInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDateTimeInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDateTimeInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDateTimeInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 83 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDocking = function (_React$Component) {\\n    _inherits(JqxDocking, _React$Component);\\n\\n    function JqxDocking() {\\n        _classCallCheck(this, JqxDocking);\\n\\n        return _possibleConstructorReturn(this, (JqxDocking.__proto__ || Object.getPrototypeOf(JqxDocking)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDocking, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['cookies', 'cookieOptions', 'disabled', 'floatingWindowOpacity', 'height', 'keyboardNavigation', 'mode', 'orientation', 'rtl', 'theme', 'width', 'windowsMode', 'windowsOffset'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDocking(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDocking('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDocking(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'cookies',\\n        value: function cookies(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('cookies', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('cookies');\\n            }\\n        }\\n    }, {\\n        key: 'cookieOptions',\\n        value: function cookieOptions(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('cookieOptions', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('cookieOptions');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'floatingWindowOpacity',\\n        value: function floatingWindowOpacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('floatingWindowOpacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('floatingWindowOpacity');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('height');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardNavigation',\\n        value: function keyboardNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('keyboardNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('keyboardNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'mode',\\n        value: function mode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('mode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('mode');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('width');\\n            }\\n        }\\n    }, {\\n        key: 'windowsMode',\\n        value: function windowsMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('windowsMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('windowsMode');\\n            }\\n        }\\n    }, {\\n        key: 'windowsOffset',\\n        value: function windowsOffset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDocking('windowsOffset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDocking('windowsOffset');\\n            }\\n        }\\n    }, {\\n        key: 'addWindow',\\n        value: function addWindow(windowId, mode, panel, position) {\\n            JQXLite(this.componentSelector).jqxDocking('addWindow', windowId, mode, panel, position);\\n        }\\n    }, {\\n        key: 'closeWindow',\\n        value: function closeWindow(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('closeWindow', windowId);\\n        }\\n    }, {\\n        key: 'collapseWindow',\\n        value: function collapseWindow(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('collapseWindow', windowId);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxDocking('destroy');\\n        }\\n    }, {\\n        key: 'disableWindowResize',\\n        value: function disableWindowResize(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('disableWindowResize', windowId);\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxDocking('disable');\\n        }\\n    }, {\\n        key: 'exportLayout',\\n        value: function exportLayout() {\\n            return JQXLite(this.componentSelector).jqxDocking('exportLayout');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxDocking('enable');\\n        }\\n    }, {\\n        key: 'expandWindow',\\n        value: function expandWindow(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('expandWindow', windowId);\\n        }\\n    }, {\\n        key: 'enableWindowResize',\\n        value: function enableWindowResize(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('enableWindowResize', windowId);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxDocking('focus');\\n        }\\n    }, {\\n        key: 'hideAllCloseButtons',\\n        value: function hideAllCloseButtons() {\\n            JQXLite(this.componentSelector).jqxDocking('hideAllCloseButtons');\\n        }\\n    }, {\\n        key: 'hideAllCollapseButtons',\\n        value: function hideAllCollapseButtons() {\\n            JQXLite(this.componentSelector).jqxDocking('hideAllCollapseButtons');\\n        }\\n    }, {\\n        key: 'hideCollapseButton',\\n        value: function hideCollapseButton(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('hideCollapseButton', windowId);\\n        }\\n    }, {\\n        key: 'hideCloseButton',\\n        value: function hideCloseButton(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('hideCloseButton', windowId);\\n        }\\n    }, {\\n        key: 'importLayout',\\n        value: function importLayout(Json) {\\n            JQXLite(this.componentSelector).jqxDocking('importLayout', Json);\\n        }\\n    }, {\\n        key: 'move',\\n        value: function move(windowId, panel, position) {\\n            JQXLite(this.componentSelector).jqxDocking('move', windowId, panel, position);\\n        }\\n    }, {\\n        key: 'pinWindow',\\n        value: function pinWindow(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('pinWindow', windowId);\\n        }\\n    }, {\\n        key: 'setWindowMode',\\n        value: function setWindowMode(windowId, mode) {\\n            JQXLite(this.componentSelector).jqxDocking('setWindowMode', windowId, mode);\\n        }\\n    }, {\\n        key: 'showCloseButton',\\n        value: function showCloseButton(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('showCloseButton', windowId);\\n        }\\n    }, {\\n        key: 'showCollapseButton',\\n        value: function showCollapseButton(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('showCollapseButton', windowId);\\n        }\\n    }, {\\n        key: 'setWindowPosition',\\n        value: function setWindowPosition(windowId, top, left) {\\n            JQXLite(this.componentSelector).jqxDocking('setWindowPosition', windowId, top, left);\\n        }\\n    }, {\\n        key: 'showAllCloseButtons',\\n        value: function showAllCloseButtons() {\\n            JQXLite(this.componentSelector).jqxDocking('showAllCloseButtons');\\n        }\\n    }, {\\n        key: 'showAllCollapseButtons',\\n        value: function showAllCollapseButtons() {\\n            JQXLite(this.componentSelector).jqxDocking('showAllCollapseButtons');\\n        }\\n    }, {\\n        key: 'unpinWindow',\\n        value: function unpinWindow(windowId) {\\n            JQXLite(this.componentSelector).jqxDocking('unpinWindow', windowId);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDocking' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDocking;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDocking;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 84 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDockingLayout = function (_React$Component) {\\n    _inherits(JqxDockingLayout, _React$Component);\\n\\n    function JqxDockingLayout() {\\n        _classCallCheck(this, JqxDockingLayout);\\n\\n        return _possibleConstructorReturn(this, (JqxDockingLayout.__proto__ || Object.getPrototypeOf(JqxDockingLayout)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDockingLayout, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['contextMenu', 'height', 'layout', 'minGroupHeight', 'minGroupWidth', 'resizable', 'rtl', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDockingLayout(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDockingLayout('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDockingLayout(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'contextMenu',\\n        value: function contextMenu(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('contextMenu', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('contextMenu');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('height');\\n            }\\n        }\\n    }, {\\n        key: 'layout',\\n        value: function layout(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('layout', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('layout');\\n            }\\n        }\\n    }, {\\n        key: 'minGroupHeight',\\n        value: function minGroupHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('minGroupHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('minGroupHeight');\\n            }\\n        }\\n    }, {\\n        key: 'minGroupWidth',\\n        value: function minGroupWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('minGroupWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('minGroupWidth');\\n            }\\n        }\\n    }, {\\n        key: 'resizable',\\n        value: function resizable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('resizable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('resizable');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockingLayout('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockingLayout('width');\\n            }\\n        }\\n    }, {\\n        key: 'addFloatGroup',\\n        value: function addFloatGroup(width, height, position, panelType, title, content, initContent) {\\n            JQXLite(this.componentSelector).jqxDockingLayout('addFloatGroup', width, height, position, panelType, title, content, initContent);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxDockingLayout('destroy');\\n        }\\n    }, {\\n        key: 'loadLayout',\\n        value: function loadLayout(layout) {\\n            JQXLite(this.componentSelector).jqxDockingLayout('loadLayout', layout);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxDockingLayout('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxDockingLayout('render');\\n        }\\n    }, {\\n        key: 'saveLayout',\\n        value: function saveLayout() {\\n            return JQXLite(this.componentSelector).jqxDockingLayout('saveLayout');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDockingLayout' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDockingLayout;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDockingLayout;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 85 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDockPanel = function (_React$Component) {\\n    _inherits(JqxDockPanel, _React$Component);\\n\\n    function JqxDockPanel() {\\n        _classCallCheck(this, JqxDockPanel);\\n\\n        return _possibleConstructorReturn(this, (JqxDockPanel.__proto__ || Object.getPrototypeOf(JqxDockPanel)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDockPanel, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'lastchildfill', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDockPanel(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDockPanel('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDockPanel(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockPanel('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockPanel('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockPanel('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockPanel('height');\\n            }\\n        }\\n    }, {\\n        key: 'lastchildfill',\\n        value: function lastchildfill(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockPanel('lastchildfill', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockPanel('lastchildfill');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDockPanel('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDockPanel('width');\\n            }\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxDockPanel('refresh');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDockPanel' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDockPanel;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDockPanel;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 86 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDragDrop = function (_React$Component) {\\n    _inherits(JqxDragDrop, _React$Component);\\n\\n    function JqxDragDrop() {\\n        _classCallCheck(this, JqxDragDrop);\\n\\n        return _possibleConstructorReturn(this, (JqxDragDrop.__proto__ || Object.getPrototypeOf(JqxDragDrop)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDragDrop, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['appendTo', 'disabled', 'distance', 'data', 'dropAction', 'dropTarget', 'dragZIndex', 'feedback', 'initFeedback', 'opacity', 'onDragEnd', 'onDrag', 'onDragStart', 'onTargetDrop', 'onDropTargetEnter', 'onDropTargetLeave', 'restricter', 'revert', 'revertDuration', 'tolerance'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDragDrop(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDragDrop('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDragDrop(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'appendTo',\\n        value: function appendTo(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('appendTo', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('appendTo');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'distance',\\n        value: function distance(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('distance', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('distance');\\n            }\\n        }\\n    }, {\\n        key: 'data',\\n        value: function data(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('data', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('data');\\n            }\\n        }\\n    }, {\\n        key: 'dropAction',\\n        value: function dropAction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('dropAction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('dropAction');\\n            }\\n        }\\n    }, {\\n        key: 'dropTarget',\\n        value: function dropTarget(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('dropTarget', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('dropTarget');\\n            }\\n        }\\n    }, {\\n        key: 'dragZIndex',\\n        value: function dragZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('dragZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('dragZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'feedback',\\n        value: function feedback(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('feedback', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('feedback');\\n            }\\n        }\\n    }, {\\n        key: 'initFeedback',\\n        value: function initFeedback(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('initFeedback', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('initFeedback');\\n            }\\n        }\\n    }, {\\n        key: 'opacity',\\n        value: function opacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('opacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('opacity');\\n            }\\n        }\\n    }, {\\n        key: 'onDragEnd',\\n        value: function onDragEnd(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('onDragEnd', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('onDragEnd');\\n            }\\n        }\\n    }, {\\n        key: 'onDrag',\\n        value: function onDrag(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('onDrag', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('onDrag');\\n            }\\n        }\\n    }, {\\n        key: 'onDragStart',\\n        value: function onDragStart(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('onDragStart', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('onDragStart');\\n            }\\n        }\\n    }, {\\n        key: 'onTargetDrop',\\n        value: function onTargetDrop(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('onTargetDrop', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('onTargetDrop');\\n            }\\n        }\\n    }, {\\n        key: 'onDropTargetEnter',\\n        value: function onDropTargetEnter(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('onDropTargetEnter', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('onDropTargetEnter');\\n            }\\n        }\\n    }, {\\n        key: 'onDropTargetLeave',\\n        value: function onDropTargetLeave(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('onDropTargetLeave', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('onDropTargetLeave');\\n            }\\n        }\\n    }, {\\n        key: 'restricter',\\n        value: function restricter(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('restricter', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('restricter');\\n            }\\n        }\\n    }, {\\n        key: 'revert',\\n        value: function revert(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('revert', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('revert');\\n            }\\n        }\\n    }, {\\n        key: 'revertDuration',\\n        value: function revertDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('revertDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('revertDuration');\\n            }\\n        }\\n    }, {\\n        key: 'tolerance',\\n        value: function tolerance(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDragDrop('tolerance', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDragDrop('tolerance');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDragDrop' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDragDrop;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDragDrop;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 87 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDraw = function (_React$Component) {\\n    _inherits(JqxDraw, _React$Component);\\n\\n    function JqxDraw() {\\n        _classCallCheck(this, JqxDraw);\\n\\n        return _possibleConstructorReturn(this, (JqxDraw.__proto__ || Object.getPrototypeOf(JqxDraw)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDraw, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['renderEngine'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDraw(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDraw('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDraw(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'renderEngine',\\n        value: function renderEngine(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDraw('renderEngine', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDraw('renderEngine');\\n            }\\n        }\\n    }, {\\n        key: 'attr',\\n        value: function attr(element, attributes) {\\n            JQXLite(this.componentSelector).jqxDraw('attr', element, attributes);\\n        }\\n    }, {\\n        key: 'circle',\\n        value: function circle(cx, cy, r, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('circle', cx, cy, r, attributes);\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxDraw('clear');\\n        }\\n    }, {\\n        key: 'getAttr',\\n        value: function getAttr(element, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('getAttr', element, attributes);\\n        }\\n    }, {\\n        key: 'getSize',\\n        value: function getSize() {\\n            return JQXLite(this.componentSelector).jqxDraw('getSize');\\n        }\\n    }, {\\n        key: 'line',\\n        value: function line(x1, y1, x2, y2, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('line', x1, y1, x2, y2, attributes);\\n        }\\n    }, {\\n        key: 'measureText',\\n        value: function measureText(text, angle, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('measureText', text, angle, attributes);\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(element, event, func) {\\n            JQXLite(this.componentSelector).jqxDraw('on', element, event, func);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(element, event, func) {\\n            JQXLite(this.componentSelector).jqxDraw('off', element, event, func);\\n        }\\n    }, {\\n        key: 'path',\\n        value: function path(_path, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('path', _path, attributes);\\n        }\\n    }, {\\n        key: 'pieslice',\\n        value: function pieslice(cx, xy, innerRadius, outerRadius, fromAngle, endAngle, centerOffset, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('pieslice', cx, xy, innerRadius, outerRadius, fromAngle, endAngle, centerOffset, attributes);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxDraw('refresh');\\n        }\\n    }, {\\n        key: 'rect',\\n        value: function rect(x, y, width, height, attributes) {\\n            return JQXLite(this.componentSelector).jqxDraw('rect', x, y, width, height, attributes);\\n        }\\n    }, {\\n        key: 'saveAsJPEG',\\n        value: function saveAsJPEG(image, url) {\\n            JQXLite(this.componentSelector).jqxDraw('saveAsJPEG', image, url);\\n        }\\n    }, {\\n        key: 'saveAsPNG',\\n        value: function saveAsPNG(image, url) {\\n            JQXLite(this.componentSelector).jqxDraw('saveAsPNG', image, url);\\n        }\\n    }, {\\n        key: 'text',\\n        value: function text(_text, x, y, width, height, angle, attributes, clip, halign, valign, rotateAround) {\\n            return JQXLite(this.componentSelector).jqxDraw('text', _text, x, y, width, height, angle, attributes, clip, halign, valign, rotateAround);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDraw' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDraw;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDraw;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 88 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDropDownButton = function (_React$Component) {\\n    _inherits(JqxDropDownButton, _React$Component);\\n\\n    function JqxDropDownButton() {\\n        _classCallCheck(this, JqxDropDownButton);\\n\\n        return _possibleConstructorReturn(this, (JqxDropDownButton.__proto__ || Object.getPrototypeOf(JqxDropDownButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDropDownButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'arrowSize', 'autoOpen', 'closeDelay', 'disabled', 'dropDownHorizontalAlignment', 'dropDownVerticalAlignment', 'dropDownWidth', 'enableBrowserBoundsDetection', 'height', 'initContent', 'openDelay', 'popupZIndex', 'rtl', 'template', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDropDownButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDropDownButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDropDownButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'arrowSize',\\n        value: function arrowSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('arrowSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('arrowSize');\\n            }\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'closeDelay',\\n        value: function closeDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('closeDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('closeDelay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownHorizontalAlignment',\\n        value: function dropDownHorizontalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('dropDownHorizontalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('dropDownHorizontalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownVerticalAlignment',\\n        value: function dropDownVerticalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('dropDownVerticalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('dropDownVerticalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownWidth',\\n        value: function dropDownWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('dropDownWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('dropDownWidth');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserBoundsDetection',\\n        value: function enableBrowserBoundsDetection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('enableBrowserBoundsDetection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('enableBrowserBoundsDetection');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'openDelay',\\n        value: function openDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('openDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('openDelay');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxDropDownButton('close');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxDropDownButton('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxDropDownButton('focus');\\n        }\\n    }, {\\n        key: 'getContent',\\n        value: function getContent() {\\n            return JQXLite(this.componentSelector).jqxDropDownButton('getContent');\\n        }\\n    }, {\\n        key: 'isOpened',\\n        value: function isOpened() {\\n            return JQXLite(this.componentSelector).jqxDropDownButton('isOpened');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxDropDownButton('open');\\n        }\\n    }, {\\n        key: 'setContent',\\n        value: function setContent(content) {\\n            JQXLite(this.componentSelector).jqxDropDownButton('setContent', content);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDropDownButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDropDownButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDropDownButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 89 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxDropDownList = function (_React$Component) {\\n    _inherits(JqxDropDownList, _React$Component);\\n\\n    function JqxDropDownList() {\\n        _classCallCheck(this, JqxDropDownList);\\n\\n        return _possibleConstructorReturn(this, (JqxDropDownList.__proto__ || Object.getPrototypeOf(JqxDropDownList)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxDropDownList, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['autoOpen', 'autoDropDownHeight', 'animationType', 'checkboxes', 'closeDelay', 'disabled', 'displayMember', 'dropDownHorizontalAlignment', 'dropDownVerticalAlignment', 'dropDownHeight', 'dropDownWidth', 'enableSelection', 'enableBrowserBoundsDetection', 'enableHover', 'filterable', 'filterHeight', 'filterDelay', 'filterPlaceHolder', 'height', 'incrementalSearch', 'incrementalSearchDelay', 'itemHeight', 'openDelay', 'placeHolder', 'popupZIndex', 'rtl', 'renderer', 'selectionRenderer', 'searchMode', 'scrollBarSize', 'source', 'selectedIndex', 'theme', 'template', 'valueMember', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxDropDownList(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxDropDownList('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxDropDownList(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'autoDropDownHeight',\\n        value: function autoDropDownHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('autoDropDownHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('autoDropDownHeight');\\n            }\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'checkboxes',\\n        value: function checkboxes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('checkboxes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('checkboxes');\\n            }\\n        }\\n    }, {\\n        key: 'closeDelay',\\n        value: function closeDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('closeDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('closeDelay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownHorizontalAlignment',\\n        value: function dropDownHorizontalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('dropDownHorizontalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('dropDownHorizontalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownVerticalAlignment',\\n        value: function dropDownVerticalAlignment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('dropDownVerticalAlignment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('dropDownVerticalAlignment');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownHeight',\\n        value: function dropDownHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('dropDownHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('dropDownHeight');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownWidth',\\n        value: function dropDownWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('dropDownWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('dropDownWidth');\\n            }\\n        }\\n    }, {\\n        key: 'enableSelection',\\n        value: function enableSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('enableSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('enableSelection');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserBoundsDetection',\\n        value: function enableBrowserBoundsDetection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('enableBrowserBoundsDetection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('enableBrowserBoundsDetection');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'filterable',\\n        value: function filterable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('filterable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('filterable');\\n            }\\n        }\\n    }, {\\n        key: 'filterHeight',\\n        value: function filterHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('filterHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('filterHeight');\\n            }\\n        }\\n    }, {\\n        key: 'filterDelay',\\n        value: function filterDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('filterDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('filterDelay');\\n            }\\n        }\\n    }, {\\n        key: 'filterPlaceHolder',\\n        value: function filterPlaceHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('filterPlaceHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('filterPlaceHolder');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('height');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearch',\\n        value: function incrementalSearch(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('incrementalSearch', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('incrementalSearch');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearchDelay',\\n        value: function incrementalSearchDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('incrementalSearchDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('incrementalSearchDelay');\\n            }\\n        }\\n    }, {\\n        key: 'itemHeight',\\n        value: function itemHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('itemHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('itemHeight');\\n            }\\n        }\\n    }, {\\n        key: 'openDelay',\\n        value: function openDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('openDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('openDelay');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'renderer',\\n        value: function renderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('renderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('renderer');\\n            }\\n        }\\n    }, {\\n        key: 'selectionRenderer',\\n        value: function selectionRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('selectionRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('selectionRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'searchMode',\\n        value: function searchMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('searchMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('searchMode');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('source');\\n            }\\n        }\\n    }, {\\n        key: 'selectedIndex',\\n        value: function selectedIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('selectedIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('selectedIndex');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('theme');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('template');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('width');\\n            }\\n        }\\n    }, {\\n        key: 'addItem',\\n        value: function addItem(item) {\\n            return JQXLite(this.componentSelector).jqxDropDownList('addItem', item);\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxDropDownList('clearSelection');\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxDropDownList('clear');\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxDropDownList('close');\\n        }\\n    }, {\\n        key: 'checkIndex',\\n        value: function checkIndex(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('checkIndex', index);\\n        }\\n    }, {\\n        key: 'checkItem',\\n        value: function checkItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('checkItem', item);\\n        }\\n    }, {\\n        key: 'checkAll',\\n        value: function checkAll() {\\n            JQXLite(this.componentSelector).jqxDropDownList('checkAll');\\n        }\\n    }, {\\n        key: 'clearFilter',\\n        value: function clearFilter() {\\n            JQXLite(this.componentSelector).jqxDropDownList('clearFilter');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxDropDownList('destroy');\\n        }\\n    }, {\\n        key: 'disableItem',\\n        value: function disableItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('disableItem', item);\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('disableAt', index);\\n        }\\n    }, {\\n        key: 'enableItem',\\n        value: function enableItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('enableItem', item);\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('enableAt', index);\\n        }\\n    }, {\\n        key: 'ensureVisible',\\n        value: function ensureVisible(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('ensureVisible', index);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxDropDownList('focus');\\n        }\\n    }, {\\n        key: 'getItem',\\n        value: function getItem(index) {\\n            return JQXLite(this.componentSelector).jqxDropDownList('getItem', index);\\n        }\\n    }, {\\n        key: 'getItemByValue',\\n        value: function getItemByValue(itemValue) {\\n            return JQXLite(this.componentSelector).jqxDropDownList('getItemByValue', itemValue);\\n        }\\n    }, {\\n        key: 'getItems',\\n        value: function getItems() {\\n            return JQXLite(this.componentSelector).jqxDropDownList('getItems');\\n        }\\n    }, {\\n        key: 'getCheckedItems',\\n        value: function getCheckedItems() {\\n            return JQXLite(this.componentSelector).jqxDropDownList('getCheckedItems');\\n        }\\n    }, {\\n        key: 'getSelectedItem',\\n        value: function getSelectedItem() {\\n            return JQXLite(this.componentSelector).jqxDropDownList('getSelectedItem');\\n        }\\n    }, {\\n        key: 'getSelectedIndex',\\n        value: function getSelectedIndex() {\\n            return JQXLite(this.componentSelector).jqxDropDownList('getSelectedIndex');\\n        }\\n    }, {\\n        key: 'insertAt',\\n        value: function insertAt(item, index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('insertAt', item, index);\\n        }\\n    }, {\\n        key: 'isOpened',\\n        value: function isOpened() {\\n            return JQXLite(this.componentSelector).jqxDropDownList('isOpened');\\n        }\\n    }, {\\n        key: 'indeterminateIndex',\\n        value: function indeterminateIndex(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('indeterminateIndex', index);\\n        }\\n    }, {\\n        key: 'indeterminateItem',\\n        value: function indeterminateItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('indeterminateItem', item);\\n        }\\n    }, {\\n        key: 'loadFromSelect',\\n        value: function loadFromSelect(arg) {\\n            JQXLite(this.componentSelector).jqxDropDownList('loadFromSelect', arg);\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxDropDownList('open');\\n        }\\n    }, {\\n        key: 'removeItem',\\n        value: function removeItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('removeItem', item);\\n        }\\n    }, {\\n        key: 'removeAt',\\n        value: function removeAt(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('removeAt', index);\\n        }\\n    }, {\\n        key: 'selectIndex',\\n        value: function selectIndex(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('selectIndex', index);\\n        }\\n    }, {\\n        key: 'selectItem',\\n        value: function selectItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('selectItem', item);\\n        }\\n    }, {\\n        key: 'setContent',\\n        value: function setContent(content) {\\n            JQXLite(this.componentSelector).jqxDropDownList('setContent', content);\\n        }\\n    }, {\\n        key: 'updateItem',\\n        value: function updateItem(newItem, item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('updateItem', newItem, item);\\n        }\\n    }, {\\n        key: 'updateAt',\\n        value: function updateAt(item, index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('updateAt', item, index);\\n        }\\n    }, {\\n        key: 'unselectIndex',\\n        value: function unselectIndex(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('unselectIndex', index);\\n        }\\n    }, {\\n        key: 'unselectItem',\\n        value: function unselectItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('unselectItem', item);\\n        }\\n    }, {\\n        key: 'uncheckIndex',\\n        value: function uncheckIndex(index) {\\n            JQXLite(this.componentSelector).jqxDropDownList('uncheckIndex', index);\\n        }\\n    }, {\\n        key: 'uncheckItem',\\n        value: function uncheckItem(item) {\\n            JQXLite(this.componentSelector).jqxDropDownList('uncheckItem', item);\\n        }\\n    }, {\\n        key: 'uncheckAll',\\n        value: function uncheckAll() {\\n            JQXLite(this.componentSelector).jqxDropDownList('uncheckAll');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxDropDownList('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxDropDownList('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxDropDownList' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxDropDownList;\\n}(_react2.default.Component);\\n\\nexports.default = JqxDropDownList;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 90 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxEditor = function (_React$Component) {\\n    _inherits(JqxEditor, _React$Component);\\n\\n    function JqxEditor() {\\n        _classCallCheck(this, JqxEditor);\\n\\n        return _possibleConstructorReturn(this, (JqxEditor.__proto__ || Object.getPrototypeOf(JqxEditor)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxEditor, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['createCommand', 'disabled', 'editable', 'height', 'lineBreak', 'localization', 'pasteMode', 'rtl', 'stylesheets', 'theme', 'toolbarPosition', 'tools', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxEditor(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxEditor('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxEditor(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'createCommand',\\n        value: function createCommand(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('createCommand', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('createCommand');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'editable',\\n        value: function editable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('editable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('editable');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('height');\\n            }\\n        }\\n    }, {\\n        key: 'lineBreak',\\n        value: function lineBreak(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('lineBreak', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('lineBreak');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('localization');\\n            }\\n        }\\n    }, {\\n        key: 'pasteMode',\\n        value: function pasteMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('pasteMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('pasteMode');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'stylesheets',\\n        value: function stylesheets(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('stylesheets', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('stylesheets');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toolbarPosition',\\n        value: function toolbarPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('toolbarPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('toolbarPosition');\\n            }\\n        }\\n    }, {\\n        key: 'tools',\\n        value: function tools(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('tools', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('tools');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxEditor('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxEditor('focus');\\n        }\\n    }, {\\n        key: 'print',\\n        value: function print() {\\n            JQXLite(this.componentSelector).jqxEditor('print');\\n        }\\n    }, {\\n        key: 'setMode',\\n        value: function setMode(mode) {\\n            JQXLite(this.componentSelector).jqxEditor('setMode', mode);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxEditor('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxEditor('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxEditor' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxEditor;\\n}(_react2.default.Component);\\n\\nexports.default = JqxEditor;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 91 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxExpander = function (_React$Component) {\\n    _inherits(JqxExpander, _React$Component);\\n\\n    function JqxExpander() {\\n        _classCallCheck(this, JqxExpander);\\n\\n        return _possibleConstructorReturn(this, (JqxExpander.__proto__ || Object.getPrototypeOf(JqxExpander)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxExpander, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'arrowPosition', 'collapseAnimationDuration', 'disabled', 'expanded', 'expandAnimationDuration', 'height', 'headerPosition', 'initContent', 'rtl', 'showArrow', 'theme', 'toggleMode', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxExpander(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxExpander('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxExpander(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'arrowPosition',\\n        value: function arrowPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('arrowPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('arrowPosition');\\n            }\\n        }\\n    }, {\\n        key: 'collapseAnimationDuration',\\n        value: function collapseAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('collapseAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('collapseAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'expanded',\\n        value: function expanded(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('expanded', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('expanded');\\n            }\\n        }\\n    }, {\\n        key: 'expandAnimationDuration',\\n        value: function expandAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('expandAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('expandAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('height');\\n            }\\n        }\\n    }, {\\n        key: 'headerPosition',\\n        value: function headerPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('headerPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('headerPosition');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showArrow',\\n        value: function showArrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('showArrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('showArrow');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toggleMode',\\n        value: function toggleMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('toggleMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('toggleMode');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxExpander('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxExpander('width');\\n            }\\n        }\\n    }, {\\n        key: 'collapse',\\n        value: function collapse() {\\n            JQXLite(this.componentSelector).jqxExpander('collapse');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxExpander('disable');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxExpander('destroy');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxExpander('enable');\\n        }\\n    }, {\\n        key: 'expand',\\n        value: function expand() {\\n            JQXLite(this.componentSelector).jqxExpander('expand');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxExpander('focus');\\n        }\\n    }, {\\n        key: 'getContent',\\n        value: function getContent() {\\n            return JQXLite(this.componentSelector).jqxExpander('getContent');\\n        }\\n    }, {\\n        key: 'getHeaderContent',\\n        value: function getHeaderContent() {\\n            return JQXLite(this.componentSelector).jqxExpander('getHeaderContent');\\n        }\\n    }, {\\n        key: 'invalidate',\\n        value: function invalidate() {\\n            JQXLite(this.componentSelector).jqxExpander('invalidate');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxExpander('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxExpander('render');\\n        }\\n    }, {\\n        key: 'setHeaderContent',\\n        value: function setHeaderContent(headerContent) {\\n            JQXLite(this.componentSelector).jqxExpander('setHeaderContent', headerContent);\\n        }\\n    }, {\\n        key: 'setContent',\\n        value: function setContent(content) {\\n            JQXLite(this.componentSelector).jqxExpander('setContent', content);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxExpander' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxExpander;\\n}(_react2.default.Component);\\n\\nexports.default = JqxExpander;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 92 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxFileUpload = function (_React$Component) {\\n    _inherits(JqxFileUpload, _React$Component);\\n\\n    function JqxFileUpload() {\\n        _classCallCheck(this, JqxFileUpload);\\n\\n        return _possibleConstructorReturn(this, (JqxFileUpload.__proto__ || Object.getPrototypeOf(JqxFileUpload)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxFileUpload, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['autoUpload', 'accept', 'browseTemplate', 'cancelTemplate', 'disabled', 'fileInputName', 'height', 'localization', 'multipleFilesUpload', 'renderFiles', 'rtl', 'theme', 'uploadUrl', 'uploadTemplate', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxFileUpload(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxFileUpload('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxFileUpload(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'autoUpload',\\n        value: function autoUpload(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('autoUpload', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('autoUpload');\\n            }\\n        }\\n    }, {\\n        key: 'accept',\\n        value: function accept(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('accept', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('accept');\\n            }\\n        }\\n    }, {\\n        key: 'browseTemplate',\\n        value: function browseTemplate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('browseTemplate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('browseTemplate');\\n            }\\n        }\\n    }, {\\n        key: 'cancelTemplate',\\n        value: function cancelTemplate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('cancelTemplate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('cancelTemplate');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'fileInputName',\\n        value: function fileInputName(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('fileInputName', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('fileInputName');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('height');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('localization');\\n            }\\n        }\\n    }, {\\n        key: 'multipleFilesUpload',\\n        value: function multipleFilesUpload(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('multipleFilesUpload', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('multipleFilesUpload');\\n            }\\n        }\\n    }, {\\n        key: 'renderFiles',\\n        value: function renderFiles(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('renderFiles', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('renderFiles');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('theme');\\n            }\\n        }\\n    }, {\\n        key: 'uploadUrl',\\n        value: function uploadUrl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('uploadUrl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('uploadUrl');\\n            }\\n        }\\n    }, {\\n        key: 'uploadTemplate',\\n        value: function uploadTemplate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('uploadTemplate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('uploadTemplate');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFileUpload('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFileUpload('width');\\n            }\\n        }\\n    }, {\\n        key: 'browse',\\n        value: function browse() {\\n            JQXLite(this.componentSelector).jqxFileUpload('browse');\\n        }\\n    }, {\\n        key: 'cancelFile',\\n        value: function cancelFile() {\\n            JQXLite(this.componentSelector).jqxFileUpload('cancelFile');\\n        }\\n    }, {\\n        key: 'cancelAll',\\n        value: function cancelAll() {\\n            JQXLite(this.componentSelector).jqxFileUpload('cancelAll');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxFileUpload('destroy');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxFileUpload('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxFileUpload('refresh');\\n        }\\n    }, {\\n        key: 'uploadFile',\\n        value: function uploadFile(fileIndex) {\\n            JQXLite(this.componentSelector).jqxFileUpload('uploadFile', fileIndex);\\n        }\\n    }, {\\n        key: 'uploadAll',\\n        value: function uploadAll() {\\n            JQXLite(this.componentSelector).jqxFileUpload('uploadAll');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxFileUpload' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxFileUpload;\\n}(_react2.default.Component);\\n\\nexports.default = JqxFileUpload;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 93 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxFormattedInput = function (_React$Component) {\\n    _inherits(JqxFormattedInput, _React$Component);\\n\\n    function JqxFormattedInput() {\\n        _classCallCheck(this, JqxFormattedInput);\\n\\n        return _possibleConstructorReturn(this, (JqxFormattedInput.__proto__ || Object.getPrototypeOf(JqxFormattedInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxFormattedInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'decimalNotation', 'dropDown', 'dropDownWidth', 'height', 'min', 'max', 'placeHolder', 'popupZIndex', 'roundedCorners', 'rtl', 'radix', 'spinButtons', 'spinButtonsStep', 'template', 'theme', 'upperCase', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxFormattedInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxFormattedInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxFormattedInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'decimalNotation',\\n        value: function decimalNotation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('decimalNotation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('decimalNotation');\\n            }\\n        }\\n    }, {\\n        key: 'dropDown',\\n        value: function dropDown(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('dropDown', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('dropDown');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownWidth',\\n        value: function dropDownWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('dropDownWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('dropDownWidth');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('max');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'radix',\\n        value: function radix(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('radix', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('radix');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtons',\\n        value: function spinButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('spinButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('spinButtons');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtonsStep',\\n        value: function spinButtonsStep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('spinButtonsStep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('spinButtonsStep');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'upperCase',\\n        value: function upperCase(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('upperCase', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('upperCase');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxFormattedInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('close');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('focus');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('open');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('refresh');\\n        }\\n    }, {\\n        key: 'selectAll',\\n        value: function selectAll() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('selectAll');\\n        }\\n    }, {\\n        key: 'selectFirst',\\n        value: function selectFirst() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('selectFirst');\\n        }\\n    }, {\\n        key: 'selectLast',\\n        value: function selectLast() {\\n            JQXLite(this.componentSelector).jqxFormattedInput('selectLast');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                if (typeof value === 'string') {\\n                    return JQXLite(this.componentSelector).jqxFormattedInput('val', value);\\n                } else {\\n                    JQXLite(this.componentSelector).jqxFormattedInput('val', value);\\n                }\\n                JQXLite(this.componentSelector).jqxFormattedInput('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxFormattedInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxFormattedInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            var spinButtons = this.props.spinButtons;\\n            if (!spinButtons && spinButtons !== false) spinButtons = true;\\n            return _react2.default.createElement(\\n                'div',\\n                null,\\n                this.props.rtl ? _react2.default.createElement(\\n                    'div',\\n                    { id: id },\\n                    spinButtons ? _react2.default.createElement('div', null) : null,\\n                    this.props.dropDown ? _react2.default.createElement('div', null) : null,\\n                    _react2.default.createElement('input', { type: 'text' })\\n                ) : _react2.default.createElement(\\n                    'div',\\n                    { id: id },\\n                    _react2.default.createElement('input', { type: 'text' }),\\n                    spinButtons ? _react2.default.createElement('div', null) : null,\\n                    this.props.dropDown ? _react2.default.createElement('div', null) : null\\n                )\\n            );\\n        }\\n    }]);\\n\\n    return JqxFormattedInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxFormattedInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 94 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxGauge = function (_React$Component) {\\n    _inherits(JqxGauge, _React$Component);\\n\\n    function JqxGauge() {\\n        _classCallCheck(this, JqxGauge);\\n\\n        return _possibleConstructorReturn(this, (JqxGauge.__proto__ || Object.getPrototypeOf(JqxGauge)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxGauge, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDuration', 'border', 'caption', 'cap', 'colorScheme', 'disabled', 'easing', 'endAngle', 'height', 'int64', 'labels', 'min', 'max', 'pointer', 'radius', 'ranges', 'startAngle', 'showRanges', 'style', 'ticksMajor', 'ticksMinor', 'ticksDistance', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxGauge(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxGauge('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxGauge(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'border',\\n        value: function border(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('border', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('border');\\n            }\\n        }\\n    }, {\\n        key: 'caption',\\n        value: function caption(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('caption', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('caption');\\n            }\\n        }\\n    }, {\\n        key: 'cap',\\n        value: function cap(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('cap', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('cap');\\n            }\\n        }\\n    }, {\\n        key: 'colorScheme',\\n        value: function colorScheme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('colorScheme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('colorScheme');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'easing',\\n        value: function easing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('easing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('easing');\\n            }\\n        }\\n    }, {\\n        key: 'endAngle',\\n        value: function endAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('endAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('endAngle');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('height');\\n            }\\n        }\\n    }, {\\n        key: 'int64',\\n        value: function int64(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('int64', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('int64');\\n            }\\n        }\\n    }, {\\n        key: 'labels',\\n        value: function labels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('labels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('labels');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('max');\\n            }\\n        }\\n    }, {\\n        key: 'pointer',\\n        value: function pointer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('pointer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('pointer');\\n            }\\n        }\\n    }, {\\n        key: 'radius',\\n        value: function radius(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('radius', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('radius');\\n            }\\n        }\\n    }, {\\n        key: 'ranges',\\n        value: function ranges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('ranges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('ranges');\\n            }\\n        }\\n    }, {\\n        key: 'startAngle',\\n        value: function startAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('startAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('startAngle');\\n            }\\n        }\\n    }, {\\n        key: 'showRanges',\\n        value: function showRanges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('showRanges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('showRanges');\\n            }\\n        }\\n    }, {\\n        key: 'style',\\n        value: function style(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('style', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('style');\\n            }\\n        }\\n    }, {\\n        key: 'ticksMajor',\\n        value: function ticksMajor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('ticksMajor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('ticksMajor');\\n            }\\n        }\\n    }, {\\n        key: 'ticksMinor',\\n        value: function ticksMinor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('ticksMinor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('ticksMinor');\\n            }\\n        }\\n    }, {\\n        key: 'ticksDistance',\\n        value: function ticksDistance(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('ticksDistance', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('ticksDistance');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('width');\\n            }\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxGauge('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxGauge('enable');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxGauge('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxGauge('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxGauge' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxGauge;\\n}(_react2.default.Component);\\n\\nexports.default = JqxGauge;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 95 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxKanban = function (_React$Component) {\\n    _inherits(JqxKanban, _React$Component);\\n\\n    function JqxKanban() {\\n        _classCallCheck(this, JqxKanban);\\n\\n        return _possibleConstructorReturn(this, (JqxKanban.__proto__ || Object.getPrototypeOf(JqxKanban)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxKanban, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['columnRenderer', 'columns', 'connectWith', 'headerHeight', 'headerWidth', 'height', 'itemRenderer', 'ready', 'rtl', 'source', 'resources', 'template', 'templateContent', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxKanban(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxKanban('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxKanban(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'columnRenderer',\\n        value: function columnRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('columnRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('columnRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'columns',\\n        value: function columns(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('columns', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('columns');\\n            }\\n        }\\n    }, {\\n        key: 'connectWith',\\n        value: function connectWith(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('connectWith', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('connectWith');\\n            }\\n        }\\n    }, {\\n        key: 'headerHeight',\\n        value: function headerHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('headerHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('headerHeight');\\n            }\\n        }\\n    }, {\\n        key: 'headerWidth',\\n        value: function headerWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('headerWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('headerWidth');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('height');\\n            }\\n        }\\n    }, {\\n        key: 'itemRenderer',\\n        value: function itemRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('itemRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('itemRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'ready',\\n        value: function ready(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('ready', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('ready');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('source');\\n            }\\n        }\\n    }, {\\n        key: 'resources',\\n        value: function resources(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('resources', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('resources');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('template');\\n            }\\n        }\\n    }, {\\n        key: 'templateContent',\\n        value: function templateContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('templateContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('templateContent');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKanban('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKanban('width');\\n            }\\n        }\\n    }, {\\n        key: 'addItem',\\n        value: function addItem(newItem) {\\n            JQXLite(this.componentSelector).jqxKanban('addItem', newItem);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxKanban('destroy');\\n        }\\n    }, {\\n        key: 'getColumn',\\n        value: function getColumn(dataField) {\\n            return JQXLite(this.componentSelector).jqxKanban('getColumn', dataField);\\n        }\\n    }, {\\n        key: 'getColumnItems',\\n        value: function getColumnItems(dataField) {\\n            return JQXLite(this.componentSelector).jqxKanban('getColumnItems', dataField);\\n        }\\n    }, {\\n        key: 'getItems',\\n        value: function getItems() {\\n            return JQXLite(this.componentSelector).jqxKanban('getItems');\\n        }\\n    }, {\\n        key: 'removeItem',\\n        value: function removeItem(itemId) {\\n            JQXLite(this.componentSelector).jqxKanban('removeItem', itemId);\\n        }\\n    }, {\\n        key: 'updateItem',\\n        value: function updateItem(itemId, newContent) {\\n            JQXLite(this.componentSelector).jqxKanban('updateItem', itemId, newContent);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxKanban' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxKanban;\\n}(_react2.default.Component);\\n\\nexports.default = JqxKanban;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 96 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxKnob = function (_React$Component) {\\n    _inherits(JqxKnob, _React$Component);\\n\\n    function JqxKnob() {\\n        _classCallCheck(this, JqxKnob);\\n\\n        return _possibleConstructorReturn(this, (JqxKnob.__proto__ || Object.getPrototypeOf(JqxKnob)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxKnob, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['allowValueChangeOnClick', 'allowValueChangeOnDrag', 'allowValueChangeOnMouseWheel', 'changing', 'dragEndAngle', 'dragStartAngle', 'disabled', 'dial', 'endAngle', 'height', 'labels', 'marks', 'min', 'max', 'progressBar', 'pointer', 'pointerGrabAction', 'rotation', 'startAngle', 'spinner', 'style', 'step', 'snapToStep', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxKnob(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxKnob('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxKnob(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'allowValueChangeOnClick',\\n        value: function allowValueChangeOnClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('allowValueChangeOnClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('allowValueChangeOnClick');\\n            }\\n        }\\n    }, {\\n        key: 'allowValueChangeOnDrag',\\n        value: function allowValueChangeOnDrag(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('allowValueChangeOnDrag', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('allowValueChangeOnDrag');\\n            }\\n        }\\n    }, {\\n        key: 'allowValueChangeOnMouseWheel',\\n        value: function allowValueChangeOnMouseWheel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('allowValueChangeOnMouseWheel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('allowValueChangeOnMouseWheel');\\n            }\\n        }\\n    }, {\\n        key: 'changing',\\n        value: function changing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('changing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('changing');\\n            }\\n        }\\n    }, {\\n        key: 'dragEndAngle',\\n        value: function dragEndAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('dragEndAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('dragEndAngle');\\n            }\\n        }\\n    }, {\\n        key: 'dragStartAngle',\\n        value: function dragStartAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('dragStartAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('dragStartAngle');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'dial',\\n        value: function dial(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('dial', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('dial');\\n            }\\n        }\\n    }, {\\n        key: 'endAngle',\\n        value: function endAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('endAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('endAngle');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('height');\\n            }\\n        }\\n    }, {\\n        key: 'labels',\\n        value: function labels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('labels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('labels');\\n            }\\n        }\\n    }, {\\n        key: 'marks',\\n        value: function marks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('marks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('marks');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('max');\\n            }\\n        }\\n    }, {\\n        key: 'progressBar',\\n        value: function progressBar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('progressBar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('progressBar');\\n            }\\n        }\\n    }, {\\n        key: 'pointer',\\n        value: function pointer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('pointer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('pointer');\\n            }\\n        }\\n    }, {\\n        key: 'pointerGrabAction',\\n        value: function pointerGrabAction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('pointerGrabAction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('pointerGrabAction');\\n            }\\n        }\\n    }, {\\n        key: 'rotation',\\n        value: function rotation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('rotation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('rotation');\\n            }\\n        }\\n    }, {\\n        key: 'startAngle',\\n        value: function startAngle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('startAngle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('startAngle');\\n            }\\n        }\\n    }, {\\n        key: 'spinner',\\n        value: function spinner(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('spinner', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('spinner');\\n            }\\n        }\\n    }, {\\n        key: 'style',\\n        value: function style(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('style', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('style');\\n            }\\n        }\\n    }, {\\n        key: 'step',\\n        value: function step(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('step', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('step');\\n            }\\n        }\\n    }, {\\n        key: 'snapToStep',\\n        value: function snapToStep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('snapToStep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('snapToStep');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxKnob('destroy');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxKnob('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxKnob('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxKnob' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxKnob;\\n}(_react2.default.Component);\\n\\nexports.default = JqxKnob;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 97 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxLayout = function (_React$Component) {\\n    _inherits(JqxLayout, _React$Component);\\n\\n    function JqxLayout() {\\n        _classCallCheck(this, JqxLayout);\\n\\n        return _possibleConstructorReturn(this, (JqxLayout.__proto__ || Object.getPrototypeOf(JqxLayout)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxLayout, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['contextMenu', 'height', 'layout', 'minGroupHeight', 'minGroupWidth', 'resizable', 'rtl', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxLayout(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxLayout('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxLayout(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'contextMenu',\\n        value: function contextMenu(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('contextMenu', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('contextMenu');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('height');\\n            }\\n        }\\n    }, {\\n        key: 'layout',\\n        value: function layout(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('layout', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('layout');\\n            }\\n        }\\n    }, {\\n        key: 'minGroupHeight',\\n        value: function minGroupHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('minGroupHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('minGroupHeight');\\n            }\\n        }\\n    }, {\\n        key: 'minGroupWidth',\\n        value: function minGroupWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('minGroupWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('minGroupWidth');\\n            }\\n        }\\n    }, {\\n        key: 'resizable',\\n        value: function resizable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('resizable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('resizable');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLayout('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLayout('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxLayout('destroy');\\n        }\\n    }, {\\n        key: 'loadLayout',\\n        value: function loadLayout(Layout) {\\n            JQXLite(this.componentSelector).jqxLayout('loadLayout', Layout);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxLayout('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxLayout('render');\\n        }\\n    }, {\\n        key: 'saveLayout',\\n        value: function saveLayout() {\\n            return JQXLite(this.componentSelector).jqxLayout('saveLayout');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxLayout' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxLayout;\\n}(_react2.default.Component);\\n\\nexports.default = JqxLayout;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 98 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxLinearGauge = function (_React$Component) {\\n    _inherits(JqxLinearGauge, _React$Component);\\n\\n    function JqxLinearGauge() {\\n        _classCallCheck(this, JqxLinearGauge);\\n\\n        return _possibleConstructorReturn(this, (JqxLinearGauge.__proto__ || Object.getPrototypeOf(JqxLinearGauge)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxLinearGauge, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDuration', 'background', 'colorScheme', 'disabled', 'easing', 'height', 'int64', 'labels', 'min', 'max', 'orientation', 'pointer', 'rangesOffset', 'rangeSize', 'ranges', 'showRanges', 'scaleStyle', 'scaleLength', 'ticksOffset', 'ticksPosition', 'ticksMinor', 'ticksMajor', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxLinearGauge(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxLinearGauge('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxLinearGauge(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'background',\\n        value: function background(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('background', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('background');\\n            }\\n        }\\n    }, {\\n        key: 'colorScheme',\\n        value: function colorScheme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('colorScheme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('colorScheme');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'easing',\\n        value: function easing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('easing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('easing');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('height');\\n            }\\n        }\\n    }, {\\n        key: 'int64',\\n        value: function int64(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('int64', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('int64');\\n            }\\n        }\\n    }, {\\n        key: 'labels',\\n        value: function labels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('labels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('labels');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('max');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'pointer',\\n        value: function pointer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('pointer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('pointer');\\n            }\\n        }\\n    }, {\\n        key: 'rangesOffset',\\n        value: function rangesOffset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('rangesOffset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('rangesOffset');\\n            }\\n        }\\n    }, {\\n        key: 'rangeSize',\\n        value: function rangeSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('rangeSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('rangeSize');\\n            }\\n        }\\n    }, {\\n        key: 'ranges',\\n        value: function ranges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('ranges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('ranges');\\n            }\\n        }\\n    }, {\\n        key: 'showRanges',\\n        value: function showRanges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('showRanges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('showRanges');\\n            }\\n        }\\n    }, {\\n        key: 'scaleStyle',\\n        value: function scaleStyle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('scaleStyle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('scaleStyle');\\n            }\\n        }\\n    }, {\\n        key: 'scaleLength',\\n        value: function scaleLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('scaleLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('scaleLength');\\n            }\\n        }\\n    }, {\\n        key: 'ticksOffset',\\n        value: function ticksOffset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('ticksOffset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('ticksOffset');\\n            }\\n        }\\n    }, {\\n        key: 'ticksPosition',\\n        value: function ticksPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('ticksPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('ticksPosition');\\n            }\\n        }\\n    }, {\\n        key: 'ticksMinor',\\n        value: function ticksMinor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('ticksMinor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('ticksMinor');\\n            }\\n        }\\n    }, {\\n        key: 'ticksMajor',\\n        value: function ticksMajor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('ticksMajor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('ticksMajor');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('width');\\n            }\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxLinearGauge('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxLinearGauge('enable');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinearGauge('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinearGauge('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxLinearGauge' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxLinearGauge;\\n}(_react2.default.Component);\\n\\nexports.default = JqxLinearGauge;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 99 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxLinkButton = function (_React$Component) {\\n    _inherits(JqxLinkButton, _React$Component);\\n\\n    function JqxLinkButton() {\\n        _classCallCheck(this, JqxLinkButton);\\n\\n        return _possibleConstructorReturn(this, (JqxLinkButton.__proto__ || Object.getPrototypeOf(JqxLinkButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxLinkButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['delay', 'disabled', 'height', 'imgSrc', 'imgWidth', 'imgHeight', 'imgPosition', 'roundedCorners', 'rtl', 'textPosition', 'textImageRelation', 'theme', 'template', 'toggled', 'width', 'value'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxLinkButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxLinkButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxLinkButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'delay',\\n        value: function delay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('delay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('delay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'imgSrc',\\n        value: function imgSrc(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('imgSrc', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('imgSrc');\\n            }\\n        }\\n    }, {\\n        key: 'imgWidth',\\n        value: function imgWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('imgWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('imgWidth');\\n            }\\n        }\\n    }, {\\n        key: 'imgHeight',\\n        value: function imgHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('imgHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('imgHeight');\\n            }\\n        }\\n    }, {\\n        key: 'imgPosition',\\n        value: function imgPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('imgPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('imgPosition');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'textPosition',\\n        value: function textPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('textPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('textPosition');\\n            }\\n        }\\n    }, {\\n        key: 'textImageRelation',\\n        value: function textImageRelation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('textImageRelation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('textImageRelation');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('theme');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('template');\\n            }\\n        }\\n    }, {\\n        key: 'toggled',\\n        value: function toggled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('toggled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('toggled');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('value');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxLinkButton('check');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxLinkButton('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxLinkButton('focus');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxLinkButton('render');\\n        }\\n    }, {\\n        key: 'toggle',\\n        value: function toggle() {\\n            JQXLite(this.componentSelector).jqxLinkButton('toggle');\\n        }\\n    }, {\\n        key: 'unCheck',\\n        value: function unCheck() {\\n            JQXLite(this.componentSelector).jqxLinkButton('unCheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxLinkButton('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLinkButton('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxLinkButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'a',\\n                { id: id, target: this.props.target, href: this.props.href },\\n                ' ',\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxLinkButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxLinkButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 100 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxListBox = function (_React$Component) {\\n    _inherits(JqxListBox, _React$Component);\\n\\n    function JqxListBox() {\\n        _classCallCheck(this, JqxListBox);\\n\\n        return _possibleConstructorReturn(this, (JqxListBox.__proto__ || Object.getPrototypeOf(JqxListBox)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxListBox, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['autoHeight', 'allowDrag', 'allowDrop', 'checkboxes', 'disabled', 'displayMember', 'dropAction', 'dragStart', 'dragEnd', 'enableHover', 'enableSelection', 'equalItemsWidth', 'filterable', 'filterHeight', 'filterDelay', 'filterPlaceHolder', 'height', 'hasThreeStates', 'itemHeight', 'incrementalSearch', 'incrementalSearchDelay', 'multiple', 'multipleextended', 'renderer', 'rendered', 'rtl', 'selectedIndex', 'selectedIndexes', 'source', 'scrollBarSize', 'searchMode', 'theme', 'valueMember', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxListBox(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxListBox('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxListBox(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'autoHeight',\\n        value: function autoHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('autoHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('autoHeight');\\n            }\\n        }\\n    }, {\\n        key: 'allowDrag',\\n        value: function allowDrag(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('allowDrag', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('allowDrag');\\n            }\\n        }\\n    }, {\\n        key: 'allowDrop',\\n        value: function allowDrop(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('allowDrop', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('allowDrop');\\n            }\\n        }\\n    }, {\\n        key: 'checkboxes',\\n        value: function checkboxes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('checkboxes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('checkboxes');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'dropAction',\\n        value: function dropAction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('dropAction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('dropAction');\\n            }\\n        }\\n    }, {\\n        key: 'dragStart',\\n        value: function dragStart(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('dragStart', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('dragStart');\\n            }\\n        }\\n    }, {\\n        key: 'dragEnd',\\n        value: function dragEnd(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('dragEnd', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('dragEnd');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'enableSelection',\\n        value: function enableSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('enableSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('enableSelection');\\n            }\\n        }\\n    }, {\\n        key: 'equalItemsWidth',\\n        value: function equalItemsWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('equalItemsWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('equalItemsWidth');\\n            }\\n        }\\n    }, {\\n        key: 'filterable',\\n        value: function filterable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('filterable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('filterable');\\n            }\\n        }\\n    }, {\\n        key: 'filterHeight',\\n        value: function filterHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('filterHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('filterHeight');\\n            }\\n        }\\n    }, {\\n        key: 'filterDelay',\\n        value: function filterDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('filterDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('filterDelay');\\n            }\\n        }\\n    }, {\\n        key: 'filterPlaceHolder',\\n        value: function filterPlaceHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('filterPlaceHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('filterPlaceHolder');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('height');\\n            }\\n        }\\n    }, {\\n        key: 'hasThreeStates',\\n        value: function hasThreeStates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('hasThreeStates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('hasThreeStates');\\n            }\\n        }\\n    }, {\\n        key: 'itemHeight',\\n        value: function itemHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('itemHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('itemHeight');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearch',\\n        value: function incrementalSearch(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('incrementalSearch', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('incrementalSearch');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearchDelay',\\n        value: function incrementalSearchDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('incrementalSearchDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('incrementalSearchDelay');\\n            }\\n        }\\n    }, {\\n        key: 'multiple',\\n        value: function multiple(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('multiple', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('multiple');\\n            }\\n        }\\n    }, {\\n        key: 'multipleextended',\\n        value: function multipleextended(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('multipleextended', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('multipleextended');\\n            }\\n        }\\n    }, {\\n        key: 'renderer',\\n        value: function renderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('renderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('renderer');\\n            }\\n        }\\n    }, {\\n        key: 'rendered',\\n        value: function rendered(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('rendered', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('rendered');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'selectedIndex',\\n        value: function selectedIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('selectedIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('selectedIndex');\\n            }\\n        }\\n    }, {\\n        key: 'selectedIndexes',\\n        value: function selectedIndexes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('selectedIndexes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('selectedIndexes');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('source');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'searchMode',\\n        value: function searchMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('searchMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('searchMode');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('theme');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('width');\\n            }\\n        }\\n    }, {\\n        key: 'addItem',\\n        value: function addItem(Item) {\\n            return JQXLite(this.componentSelector).jqxListBox('addItem', Item);\\n        }\\n    }, {\\n        key: 'beginUpdate',\\n        value: function beginUpdate() {\\n            JQXLite(this.componentSelector).jqxListBox('beginUpdate');\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxListBox('clear');\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxListBox('clearSelection');\\n        }\\n    }, {\\n        key: 'checkIndex',\\n        value: function checkIndex(Index) {\\n            JQXLite(this.componentSelector).jqxListBox('checkIndex', Index);\\n        }\\n    }, {\\n        key: 'checkItem',\\n        value: function checkItem(Item) {\\n            JQXLite(this.componentSelector).jqxListBox('checkItem', Item);\\n        }\\n    }, {\\n        key: 'checkAll',\\n        value: function checkAll() {\\n            JQXLite(this.componentSelector).jqxListBox('checkAll');\\n        }\\n    }, {\\n        key: 'clearFilter',\\n        value: function clearFilter() {\\n            JQXLite(this.componentSelector).jqxListBox('clearFilter');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxListBox('destroy');\\n        }\\n    }, {\\n        key: 'disableItem',\\n        value: function disableItem(Item) {\\n            JQXLite(this.componentSelector).jqxListBox('disableItem', Item);\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(Index) {\\n            JQXLite(this.componentSelector).jqxListBox('disableAt', Index);\\n        }\\n    }, {\\n        key: 'enableItem',\\n        value: function enableItem(Item) {\\n            JQXLite(this.componentSelector).jqxListBox('enableItem', Item);\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(Index) {\\n            JQXLite(this.componentSelector).jqxListBox('enableAt', Index);\\n        }\\n    }, {\\n        key: 'ensureVisible',\\n        value: function ensureVisible(item) {\\n            JQXLite(this.componentSelector).jqxListBox('ensureVisible', item);\\n        }\\n    }, {\\n        key: 'endUpdate',\\n        value: function endUpdate() {\\n            JQXLite(this.componentSelector).jqxListBox('endUpdate');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxListBox('focus');\\n        }\\n    }, {\\n        key: 'getItems',\\n        value: function getItems() {\\n            return JQXLite(this.componentSelector).jqxListBox('getItems');\\n        }\\n    }, {\\n        key: 'getSelectedItems',\\n        value: function getSelectedItems() {\\n            return JQXLite(this.componentSelector).jqxListBox('getSelectedItems');\\n        }\\n    }, {\\n        key: 'getCheckedItems',\\n        value: function getCheckedItems() {\\n            return JQXLite(this.componentSelector).jqxListBox('getCheckedItems');\\n        }\\n    }, {\\n        key: 'getItem',\\n        value: function getItem(Index) {\\n            return JQXLite(this.componentSelector).jqxListBox('getItem', Index);\\n        }\\n    }, {\\n        key: 'getItemByValue',\\n        value: function getItemByValue(Item) {\\n            return JQXLite(this.componentSelector).jqxListBox('getItemByValue', Item);\\n        }\\n    }, {\\n        key: 'getSelectedItem',\\n        value: function getSelectedItem() {\\n            return JQXLite(this.componentSelector).jqxListBox('getSelectedItem');\\n        }\\n    }, {\\n        key: 'getSelectedIndex',\\n        value: function getSelectedIndex() {\\n            return JQXLite(this.componentSelector).jqxListBox('getSelectedIndex');\\n        }\\n    }, {\\n        key: 'insertAt',\\n        value: function insertAt(Item, Index) {\\n            JQXLite(this.componentSelector).jqxListBox('insertAt', Item, Index);\\n        }\\n    }, {\\n        key: 'invalidate',\\n        value: function invalidate() {\\n            JQXLite(this.componentSelector).jqxListBox('invalidate');\\n        }\\n    }, {\\n        key: 'indeterminateItem',\\n        value: function indeterminateItem(Item) {\\n            JQXLite(this.componentSelector).jqxListBox('indeterminateItem', Item);\\n        }\\n    }, {\\n        key: 'indeterminateIndex',\\n        value: function indeterminateIndex(Index) {\\n            JQXLite(this.componentSelector).jqxListBox('indeterminateIndex', Index);\\n        }\\n    }, {\\n        key: 'loadFromSelect',\\n        value: function loadFromSelect(selector) {\\n            JQXLite(this.componentSelector).jqxListBox('loadFromSelect', selector);\\n        }\\n    }, {\\n        key: 'removeItem',\\n        value: function removeItem(Item) {\\n            JQXLite(this.componentSelector).jqxListBox('removeItem', Item);\\n        }\\n    }, {\\n        key: 'removeAt',\\n        value: function removeAt(Index) {\\n            JQXLite(this.componentSelector).jqxListBox('removeAt', Index);\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxListBox('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxListBox('refresh');\\n        }\\n    }, {\\n        key: 'selectItem',\\n        value: function selectItem(Item) {\\n            JQXLite(this.componentSelector).jqxListBox('selectItem', Item);\\n        }\\n    }, {\\n        key: 'selectIndex',\\n        value: function selectIndex(Index) {\\n            JQXLite(this.componentSelector).jqxListBox('selectIndex', Index);\\n        }\\n    }, {\\n        key: 'updateItem',\\n        value: function updateItem(Item, Value) {\\n            JQXLite(this.componentSelector).jqxListBox('updateItem', Item, Value);\\n        }\\n    }, {\\n        key: 'updateAt',\\n        value: function updateAt(item, index) {\\n            JQXLite(this.componentSelector).jqxListBox('updateAt', item, index);\\n        }\\n    }, {\\n        key: 'unselectIndex',\\n        value: function unselectIndex(index) {\\n            JQXLite(this.componentSelector).jqxListBox('unselectIndex', index);\\n        }\\n    }, {\\n        key: 'unselectItem',\\n        value: function unselectItem(item) {\\n            JQXLite(this.componentSelector).jqxListBox('unselectItem', item);\\n        }\\n    }, {\\n        key: 'uncheckIndex',\\n        value: function uncheckIndex(index) {\\n            JQXLite(this.componentSelector).jqxListBox('uncheckIndex', index);\\n        }\\n    }, {\\n        key: 'uncheckItem',\\n        value: function uncheckItem(item) {\\n            JQXLite(this.componentSelector).jqxListBox('uncheckItem', item);\\n        }\\n    }, {\\n        key: 'uncheckAll',\\n        value: function uncheckAll() {\\n            JQXLite(this.componentSelector).jqxListBox('uncheckAll');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxListBox('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListBox('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxListBox' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxListBox;\\n}(_react2.default.Component);\\n\\nexports.default = JqxListBox;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 101 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxListMenu = function (_React$Component) {\\n    _inherits(JqxListMenu, _React$Component);\\n\\n    function JqxListMenu() {\\n        _classCallCheck(this, JqxListMenu);\\n\\n        return _possibleConstructorReturn(this, (JqxListMenu.__proto__ || Object.getPrototypeOf(JqxListMenu)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxListMenu, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['alwaysShowNavigationArrows', 'animationType', 'animationDuration', 'autoSeparators', 'backLabel', 'disabled', 'enableScrolling', 'filterCallback', 'height', 'headerAnimationDuration', 'placeHolder', 'readOnly', 'rtl', 'roundedCorners', 'showNavigationArrows', 'showFilter', 'showHeader', 'showBackButton', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxListMenu(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxListMenu('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxListMenu(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'alwaysShowNavigationArrows',\\n        value: function alwaysShowNavigationArrows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('alwaysShowNavigationArrows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('alwaysShowNavigationArrows');\\n            }\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'autoSeparators',\\n        value: function autoSeparators(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('autoSeparators', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('autoSeparators');\\n            }\\n        }\\n    }, {\\n        key: 'backLabel',\\n        value: function backLabel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('backLabel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('backLabel');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableScrolling',\\n        value: function enableScrolling(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('enableScrolling', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('enableScrolling');\\n            }\\n        }\\n    }, {\\n        key: 'filterCallback',\\n        value: function filterCallback(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('filterCallback', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('filterCallback');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('height');\\n            }\\n        }\\n    }, {\\n        key: 'headerAnimationDuration',\\n        value: function headerAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('headerAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('headerAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'readOnly',\\n        value: function readOnly(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('readOnly', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('readOnly');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'showNavigationArrows',\\n        value: function showNavigationArrows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('showNavigationArrows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('showNavigationArrows');\\n            }\\n        }\\n    }, {\\n        key: 'showFilter',\\n        value: function showFilter(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('showFilter', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('showFilter');\\n            }\\n        }\\n    }, {\\n        key: 'showHeader',\\n        value: function showHeader(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('showHeader', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('showHeader');\\n            }\\n        }\\n    }, {\\n        key: 'showBackButton',\\n        value: function showBackButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('showBackButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('showBackButton');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxListMenu('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxListMenu('width');\\n            }\\n        }\\n    }, {\\n        key: 'back',\\n        value: function back() {\\n            JQXLite(this.componentSelector).jqxListMenu('back');\\n        }\\n    }, {\\n        key: 'changePage',\\n        value: function changePage(Item) {\\n            JQXLite(this.componentSelector).jqxListMenu('changePage', Item);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxListMenu('destroy');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxListMenu' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxListMenu;\\n}(_react2.default.Component);\\n\\nexports.default = JqxListMenu;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 102 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxLoader = function (_React$Component) {\\n    _inherits(JqxLoader, _React$Component);\\n\\n    function JqxLoader() {\\n        _classCallCheck(this, JqxLoader);\\n\\n        return _possibleConstructorReturn(this, (JqxLoader.__proto__ || Object.getPrototypeOf(JqxLoader)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxLoader, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['autoOpen', 'height', 'html', 'isModal', 'imagePosition', 'rtl', 'text', 'textPosition', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxLoader(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxLoader('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxLoader(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('height');\\n            }\\n        }\\n    }, {\\n        key: 'html',\\n        value: function html(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('html', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('html');\\n            }\\n        }\\n    }, {\\n        key: 'isModal',\\n        value: function isModal(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('isModal', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('isModal');\\n            }\\n        }\\n    }, {\\n        key: 'imagePosition',\\n        value: function imagePosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('imagePosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('imagePosition');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'text',\\n        value: function text(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('text', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('text');\\n            }\\n        }\\n    }, {\\n        key: 'textPosition',\\n        value: function textPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('textPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('textPosition');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxLoader('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxLoader('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxLoader('close');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxLoader('open');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxLoader' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxLoader;\\n}(_react2.default.Component);\\n\\nexports.default = JqxLoader;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 103 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxMaskedInput = function (_React$Component) {\\n    _inherits(JqxMaskedInput, _React$Component);\\n\\n    function JqxMaskedInput() {\\n        _classCallCheck(this, JqxMaskedInput);\\n\\n        return _possibleConstructorReturn(this, (JqxMaskedInput.__proto__ || Object.getPrototypeOf(JqxMaskedInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxMaskedInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'mask', 'promptChar', 'readOnly', 'rtl', 'theme', 'textAlign', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxMaskedInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxMaskedInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxMaskedInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'mask',\\n        value: function mask(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('mask', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('mask');\\n            }\\n        }\\n    }, {\\n        key: 'promptChar',\\n        value: function promptChar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('promptChar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('promptChar');\\n            }\\n        }\\n    }, {\\n        key: 'readOnly',\\n        value: function readOnly(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('readOnly', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('readOnly');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'textAlign',\\n        value: function textAlign(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('textAlign', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('textAlign');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxMaskedInput('clear');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxMaskedInput('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxMaskedInput('focus');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxMaskedInput('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMaskedInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxMaskedInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxMaskedInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxMaskedInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 104 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxMenu = function (_React$Component) {\\n    _inherits(JqxMenu, _React$Component);\\n\\n    function JqxMenu() {\\n        _classCallCheck(this, JqxMenu);\\n\\n        return _possibleConstructorReturn(this, (JqxMenu.__proto__ || Object.getPrototypeOf(JqxMenu)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxMenu, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationShowDuration', 'animationHideDuration', 'animationHideDelay', 'animationShowDelay', 'autoCloseInterval', 'autoSizeMainItems', 'autoCloseOnClick', 'autoOpenPopup', 'autoOpen', 'autoCloseOnMouseLeave', 'clickToOpen', 'disabled', 'enableHover', 'easing', 'height', 'keyboardNavigation', 'minimizeWidth', 'mode', 'popupZIndex', 'rtl', 'showTopLevelArrows', 'source', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxMenu(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxMenu('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxMenu(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationShowDuration',\\n        value: function animationShowDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('animationShowDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('animationShowDuration');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDuration',\\n        value: function animationHideDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('animationHideDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('animationHideDuration');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDelay',\\n        value: function animationHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('animationHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('animationHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationShowDelay',\\n        value: function animationShowDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('animationShowDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('animationShowDelay');\\n            }\\n        }\\n    }, {\\n        key: 'autoCloseInterval',\\n        value: function autoCloseInterval(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('autoCloseInterval', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('autoCloseInterval');\\n            }\\n        }\\n    }, {\\n        key: 'autoSizeMainItems',\\n        value: function autoSizeMainItems(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('autoSizeMainItems', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('autoSizeMainItems');\\n            }\\n        }\\n    }, {\\n        key: 'autoCloseOnClick',\\n        value: function autoCloseOnClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('autoCloseOnClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('autoCloseOnClick');\\n            }\\n        }\\n    }, {\\n        key: 'autoOpenPopup',\\n        value: function autoOpenPopup(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('autoOpenPopup', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('autoOpenPopup');\\n            }\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'autoCloseOnMouseLeave',\\n        value: function autoCloseOnMouseLeave(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('autoCloseOnMouseLeave', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('autoCloseOnMouseLeave');\\n            }\\n        }\\n    }, {\\n        key: 'clickToOpen',\\n        value: function clickToOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('clickToOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('clickToOpen');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'easing',\\n        value: function easing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('easing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('easing');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('height');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardNavigation',\\n        value: function keyboardNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('keyboardNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('keyboardNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'minimizeWidth',\\n        value: function minimizeWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('minimizeWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('minimizeWidth');\\n            }\\n        }\\n    }, {\\n        key: 'mode',\\n        value: function mode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('mode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('mode');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showTopLevelArrows',\\n        value: function showTopLevelArrows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('showTopLevelArrows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('showTopLevelArrows');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('source');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxMenu('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxMenu('width');\\n            }\\n        }\\n    }, {\\n        key: 'closeItem',\\n        value: function closeItem(itemID) {\\n            JQXLite(this.componentSelector).jqxMenu('closeItem', itemID);\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxMenu('close');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable(itemID, value) {\\n            JQXLite(this.componentSelector).jqxMenu('disable', itemID, value);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxMenu('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxMenu('focus');\\n        }\\n    }, {\\n        key: 'minimize',\\n        value: function minimize() {\\n            JQXLite(this.componentSelector).jqxMenu('minimize');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open(left, top) {\\n            JQXLite(this.componentSelector).jqxMenu('open', left, top);\\n        }\\n    }, {\\n        key: 'openItem',\\n        value: function openItem(itemID) {\\n            JQXLite(this.componentSelector).jqxMenu('openItem', itemID);\\n        }\\n    }, {\\n        key: 'restore',\\n        value: function restore() {\\n            JQXLite(this.componentSelector).jqxMenu('restore');\\n        }\\n    }, {\\n        key: 'setItemOpenDirection',\\n        value: function setItemOpenDirection(item, horizontaldirection, verticaldirection) {\\n            JQXLite(this.componentSelector).jqxMenu('setItemOpenDirection', item, horizontaldirection, verticaldirection);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxMenu' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxMenu;\\n}(_react2.default.Component);\\n\\nexports.default = JqxMenu;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 105 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxNavBar = function (_React$Component) {\\n    _inherits(JqxNavBar, _React$Component);\\n\\n    function JqxNavBar() {\\n        _classCallCheck(this, JqxNavBar);\\n\\n        return _possibleConstructorReturn(this, (JqxNavBar.__proto__ || Object.getPrototypeOf(JqxNavBar)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxNavBar, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['columns', 'disabled', 'height', 'minimized', 'minimizeButtonPosition', 'minimizedHeight', 'minimizedTitle', 'orientation', 'popupAnimationDelay', 'rtl', 'selection', 'selectedItem', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxNavBar(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxNavBar('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxNavBar(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'columns',\\n        value: function columns(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('columns', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('columns');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('height');\\n            }\\n        }\\n    }, {\\n        key: 'minimized',\\n        value: function minimized(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('minimized', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('minimized');\\n            }\\n        }\\n    }, {\\n        key: 'minimizeButtonPosition',\\n        value: function minimizeButtonPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('minimizeButtonPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('minimizeButtonPosition');\\n            }\\n        }\\n    }, {\\n        key: 'minimizedHeight',\\n        value: function minimizedHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('minimizedHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('minimizedHeight');\\n            }\\n        }\\n    }, {\\n        key: 'minimizedTitle',\\n        value: function minimizedTitle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('minimizedTitle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('minimizedTitle');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'popupAnimationDelay',\\n        value: function popupAnimationDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('popupAnimationDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('popupAnimationDelay');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'selection',\\n        value: function selection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('selection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('selection');\\n            }\\n        }\\n    }, {\\n        key: 'selectedItem',\\n        value: function selectedItem(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('selectedItem', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('selectedItem');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavBar('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavBar('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxNavBar('close');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxNavBar('destroy');\\n        }\\n    }, {\\n        key: 'getSelectedIndex',\\n        value: function getSelectedIndex() {\\n            return JQXLite(this.componentSelector).jqxNavBar('getSelectedIndex');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxNavBar('open');\\n        }\\n    }, {\\n        key: 'selectAt',\\n        value: function selectAt(index) {\\n            JQXLite(this.componentSelector).jqxNavBar('selectAt', index);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxNavBar' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxNavBar;\\n}(_react2.default.Component);\\n\\nexports.default = JqxNavBar;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 106 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxNavigationBar = function (_React$Component) {\\n    _inherits(JqxNavigationBar, _React$Component);\\n\\n    function JqxNavigationBar() {\\n        _classCallCheck(this, JqxNavigationBar);\\n\\n        return _possibleConstructorReturn(this, (JqxNavigationBar.__proto__ || Object.getPrototypeOf(JqxNavigationBar)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxNavigationBar, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'arrowPosition', 'collapseAnimationDuration', 'disabled', 'expandAnimationDuration', 'expandMode', 'expandedIndexes', 'height', 'initContent', 'rtl', 'showArrow', 'theme', 'toggleMode', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxNavigationBar(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxNavigationBar(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'arrowPosition',\\n        value: function arrowPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('arrowPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('arrowPosition');\\n            }\\n        }\\n    }, {\\n        key: 'collapseAnimationDuration',\\n        value: function collapseAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('collapseAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('collapseAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'expandAnimationDuration',\\n        value: function expandAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('expandAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('expandAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'expandMode',\\n        value: function expandMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('expandMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('expandMode');\\n            }\\n        }\\n    }, {\\n        key: 'expandedIndexes',\\n        value: function expandedIndexes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('expandedIndexes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('expandedIndexes');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('height');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showArrow',\\n        value: function showArrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('showArrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('showArrow');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toggleMode',\\n        value: function toggleMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('toggleMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('toggleMode');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('width');\\n            }\\n        }\\n    }, {\\n        key: 'add',\\n        value: function add(header, content) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('add', header, content);\\n        }\\n    }, {\\n        key: 'collapseAt',\\n        value: function collapseAt(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('collapseAt', index);\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('disableAt', index);\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('disable');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('destroy');\\n        }\\n    }, {\\n        key: 'expandAt',\\n        value: function expandAt(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('expandAt', index);\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('enableAt', index);\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('enable');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('focus');\\n        }\\n    }, {\\n        key: 'getHeaderContentAt',\\n        value: function getHeaderContentAt(index) {\\n            return JQXLite(this.componentSelector).jqxNavigationBar('getHeaderContentAt', index);\\n        }\\n    }, {\\n        key: 'getContentAt',\\n        value: function getContentAt(index) {\\n            return JQXLite(this.componentSelector).jqxNavigationBar('getContentAt', index);\\n        }\\n    }, {\\n        key: 'hideArrowAt',\\n        value: function hideArrowAt(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('hideArrowAt', index);\\n        }\\n    }, {\\n        key: 'invalidate',\\n        value: function invalidate() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('invalidate');\\n        }\\n    }, {\\n        key: 'insert',\\n        value: function insert(Index, header, content) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('insert', Index, header, content);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxNavigationBar('render');\\n        }\\n    }, {\\n        key: 'remove',\\n        value: function remove(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('remove', index);\\n        }\\n    }, {\\n        key: 'setContentAt',\\n        value: function setContentAt(index, item) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('setContentAt', index, item);\\n        }\\n    }, {\\n        key: 'setHeaderContentAt',\\n        value: function setHeaderContentAt(index, item) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('setHeaderContentAt', index, item);\\n        }\\n    }, {\\n        key: 'showArrowAt',\\n        value: function showArrowAt(index) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('showArrowAt', index);\\n        }\\n    }, {\\n        key: 'update',\\n        value: function update(index, header, content) {\\n            JQXLite(this.componentSelector).jqxNavigationBar('update', index, header, content);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxNavigationBar('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNavigationBar('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxNavigationBar' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxNavigationBar;\\n}(_react2.default.Component);\\n\\nexports.default = JqxNavigationBar;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 107 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxNotification = function (_React$Component) {\\n    _inherits(JqxNotification, _React$Component);\\n\\n    function JqxNotification() {\\n        _classCallCheck(this, JqxNotification);\\n\\n        return _possibleConstructorReturn(this, (JqxNotification.__proto__ || Object.getPrototypeOf(JqxNotification)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxNotification, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['appendContainer', 'autoOpen', 'animationOpenDelay', 'animationCloseDelay', 'autoClose', 'autoCloseDelay', 'blink', 'browserBoundsOffset', 'closeOnClick', 'disabled', 'height', 'hoverOpacity', 'icon', 'notificationOffset', 'opacity', 'position', 'rtl', 'showCloseButton', 'template', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxNotification(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxNotification('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxNotification(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'appendContainer',\\n        value: function appendContainer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('appendContainer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('appendContainer');\\n            }\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'animationOpenDelay',\\n        value: function animationOpenDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('animationOpenDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('animationOpenDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationCloseDelay',\\n        value: function animationCloseDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('animationCloseDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('animationCloseDelay');\\n            }\\n        }\\n    }, {\\n        key: 'autoClose',\\n        value: function autoClose(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('autoClose', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('autoClose');\\n            }\\n        }\\n    }, {\\n        key: 'autoCloseDelay',\\n        value: function autoCloseDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('autoCloseDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('autoCloseDelay');\\n            }\\n        }\\n    }, {\\n        key: 'blink',\\n        value: function blink(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('blink', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('blink');\\n            }\\n        }\\n    }, {\\n        key: 'browserBoundsOffset',\\n        value: function browserBoundsOffset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('browserBoundsOffset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('browserBoundsOffset');\\n            }\\n        }\\n    }, {\\n        key: 'closeOnClick',\\n        value: function closeOnClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('closeOnClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('closeOnClick');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('height');\\n            }\\n        }\\n    }, {\\n        key: 'hoverOpacity',\\n        value: function hoverOpacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('hoverOpacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('hoverOpacity');\\n            }\\n        }\\n    }, {\\n        key: 'icon',\\n        value: function icon(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('icon', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('icon');\\n            }\\n        }\\n    }, {\\n        key: 'notificationOffset',\\n        value: function notificationOffset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('notificationOffset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('notificationOffset');\\n            }\\n        }\\n    }, {\\n        key: 'opacity',\\n        value: function opacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('opacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('opacity');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('position');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showCloseButton',\\n        value: function showCloseButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('showCloseButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('showCloseButton');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNotification('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNotification('width');\\n            }\\n        }\\n    }, {\\n        key: 'closeAll',\\n        value: function closeAll() {\\n            JQXLite(this.componentSelector).jqxNotification('closeAll');\\n        }\\n    }, {\\n        key: 'closeLast',\\n        value: function closeLast() {\\n            JQXLite(this.componentSelector).jqxNotification('closeLast');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxNotification('destroy');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxNotification('open');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxNotification('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxNotification('render');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxNotification' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxNotification;\\n}(_react2.default.Component);\\n\\nexports.default = JqxNotification;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 108 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxNumberInput = function (_React$Component) {\\n    _inherits(JqxNumberInput, _React$Component);\\n\\n    function JqxNumberInput() {\\n        _classCallCheck(this, JqxNumberInput);\\n\\n        return _possibleConstructorReturn(this, (JqxNumberInput.__proto__ || Object.getPrototypeOf(JqxNumberInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxNumberInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['allowNull', 'decimal', 'disabled', 'decimalDigits', 'decimalSeparator', 'digits', 'groupSeparator', 'groupSize', 'height', 'inputMode', 'min', 'max', 'negativeSymbol', 'placeHolder', 'promptChar', 'rtl', 'readOnly', 'spinMode', 'spinButtons', 'spinButtonsWidth', 'spinButtonsStep', 'symbol', 'symbolPosition', 'textAlign', 'template', 'theme', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxNumberInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxNumberInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxNumberInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'allowNull',\\n        value: function allowNull(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('allowNull', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('allowNull');\\n            }\\n        }\\n    }, {\\n        key: 'decimal',\\n        value: function decimal(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('decimal', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('decimal');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'decimalDigits',\\n        value: function decimalDigits(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('decimalDigits', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('decimalDigits');\\n            }\\n        }\\n    }, {\\n        key: 'decimalSeparator',\\n        value: function decimalSeparator(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('decimalSeparator', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('decimalSeparator');\\n            }\\n        }\\n    }, {\\n        key: 'digits',\\n        value: function digits(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('digits', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('digits');\\n            }\\n        }\\n    }, {\\n        key: 'groupSeparator',\\n        value: function groupSeparator(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('groupSeparator', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('groupSeparator');\\n            }\\n        }\\n    }, {\\n        key: 'groupSize',\\n        value: function groupSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('groupSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('groupSize');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'inputMode',\\n        value: function inputMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('inputMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('inputMode');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('max');\\n            }\\n        }\\n    }, {\\n        key: 'negativeSymbol',\\n        value: function negativeSymbol(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('negativeSymbol', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('negativeSymbol');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'promptChar',\\n        value: function promptChar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('promptChar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('promptChar');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'readOnly',\\n        value: function readOnly(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('readOnly', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('readOnly');\\n            }\\n        }\\n    }, {\\n        key: 'spinMode',\\n        value: function spinMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('spinMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('spinMode');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtons',\\n        value: function spinButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('spinButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('spinButtons');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtonsWidth',\\n        value: function spinButtonsWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('spinButtonsWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('spinButtonsWidth');\\n            }\\n        }\\n    }, {\\n        key: 'spinButtonsStep',\\n        value: function spinButtonsStep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('spinButtonsStep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('spinButtonsStep');\\n            }\\n        }\\n    }, {\\n        key: 'symbol',\\n        value: function symbol(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('symbol', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('symbol');\\n            }\\n        }\\n    }, {\\n        key: 'symbolPosition',\\n        value: function symbolPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('symbolPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('symbolPosition');\\n            }\\n        }\\n    }, {\\n        key: 'textAlign',\\n        value: function textAlign(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('textAlign', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('textAlign');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxNumberInput('clear');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxNumberInput('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxNumberInput('focus');\\n        }\\n    }, {\\n        key: 'getDecimal',\\n        value: function getDecimal() {\\n            return JQXLite(this.componentSelector).jqxNumberInput('getDecimal');\\n        }\\n    }, {\\n        key: 'setDecimal',\\n        value: function setDecimal(index) {\\n            JQXLite(this.componentSelector).jqxNumberInput('setDecimal', index);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxNumberInput('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxNumberInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxNumberInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement('div', { id: id });\\n        }\\n    }]);\\n\\n    return JqxNumberInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxNumberInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 109 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxPanel = function (_React$Component) {\\n    _inherits(JqxPanel, _React$Component);\\n\\n    function JqxPanel() {\\n        _classCallCheck(this, JqxPanel);\\n\\n        return _possibleConstructorReturn(this, (JqxPanel.__proto__ || Object.getPrototypeOf(JqxPanel)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxPanel, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['autoUpdate', 'disabled', 'height', 'rtl', 'sizeMode', 'scrollBarSize', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxPanel(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxPanel('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPanel(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'autoUpdate',\\n        value: function autoUpdate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('autoUpdate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('autoUpdate');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('height');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'sizeMode',\\n        value: function sizeMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('sizeMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('sizeMode');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPanel('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPanel('width');\\n            }\\n        }\\n    }, {\\n        key: 'append',\\n        value: function append(HTMLElement) {\\n            JQXLite(this.componentSelector).jqxPanel('append', HTMLElement);\\n        }\\n    }, {\\n        key: 'clearcontent',\\n        value: function clearcontent() {\\n            JQXLite(this.componentSelector).jqxPanel('clearcontent');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxPanel('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxPanel('focus');\\n        }\\n    }, {\\n        key: 'getScrollHeight',\\n        value: function getScrollHeight() {\\n            return JQXLite(this.componentSelector).jqxPanel('getScrollHeight');\\n        }\\n    }, {\\n        key: 'getVScrollPosition',\\n        value: function getVScrollPosition() {\\n            return JQXLite(this.componentSelector).jqxPanel('getVScrollPosition');\\n        }\\n    }, {\\n        key: 'getScrollWidth',\\n        value: function getScrollWidth() {\\n            return JQXLite(this.componentSelector).jqxPanel('getScrollWidth');\\n        }\\n    }, {\\n        key: 'getHScrollPosition',\\n        value: function getHScrollPosition() {\\n            return JQXLite(this.componentSelector).jqxPanel('getHScrollPosition');\\n        }\\n    }, {\\n        key: 'prepend',\\n        value: function prepend(HTMLElement) {\\n            JQXLite(this.componentSelector).jqxPanel('prepend', HTMLElement);\\n        }\\n    }, {\\n        key: 'remove',\\n        value: function remove(HTMLElement) {\\n            JQXLite(this.componentSelector).jqxPanel('remove', HTMLElement);\\n        }\\n    }, {\\n        key: 'scrollTo',\\n        value: function scrollTo(top, left) {\\n            JQXLite(this.componentSelector).jqxPanel('scrollTo', top, left);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxPanel' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxPanel;\\n}(_react2.default.Component);\\n\\nexports.default = JqxPanel;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 110 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxPasswordInput = function (_React$Component) {\\n    _inherits(JqxPasswordInput, _React$Component);\\n\\n    function JqxPasswordInput() {\\n        _classCallCheck(this, JqxPasswordInput);\\n\\n        return _possibleConstructorReturn(this, (JqxPasswordInput.__proto__ || Object.getPrototypeOf(JqxPasswordInput)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxPasswordInput, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'localization', 'maxLength', 'placeHolder', 'passwordStrength', 'rtl', 'strengthColors', 'showStrength', 'showStrengthPosition', 'strengthTypeRenderer', 'showPasswordIcon', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxPasswordInput(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxPasswordInput('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPasswordInput(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('height');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('localization');\\n            }\\n        }\\n    }, {\\n        key: 'maxLength',\\n        value: function maxLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('maxLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('maxLength');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'passwordStrength',\\n        value: function passwordStrength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('passwordStrength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('passwordStrength');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'strengthColors',\\n        value: function strengthColors(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('strengthColors', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('strengthColors');\\n            }\\n        }\\n    }, {\\n        key: 'showStrength',\\n        value: function showStrength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('showStrength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('showStrength');\\n            }\\n        }\\n    }, {\\n        key: 'showStrengthPosition',\\n        value: function showStrengthPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('showStrengthPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('showStrengthPosition');\\n            }\\n        }\\n    }, {\\n        key: 'strengthTypeRenderer',\\n        value: function strengthTypeRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('strengthTypeRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('strengthTypeRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'showPasswordIcon',\\n        value: function showPasswordIcon(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('showPasswordIcon', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('showPasswordIcon');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('width');\\n            }\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxPasswordInput('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxPasswordInput('refresh');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxPasswordInput('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPasswordInput('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxPasswordInput' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement('input', { type: 'password', id: id });\\n        }\\n    }]);\\n\\n    return JqxPasswordInput;\\n}(_react2.default.Component);\\n\\nexports.default = JqxPasswordInput;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 111 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxPopover = function (_React$Component) {\\n    _inherits(JqxPopover, _React$Component);\\n\\n    function JqxPopover() {\\n        _classCallCheck(this, JqxPopover);\\n\\n        return _possibleConstructorReturn(this, (JqxPopover.__proto__ || Object.getPrototypeOf(JqxPopover)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxPopover, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['arrowOffsetValue', 'animationOpenDelay', 'animationCloseDelay', 'autoClose', 'animationType', 'height', 'initContent', 'isModal', 'offset', 'position', 'rtl', 'selector', 'showArrow', 'showCloseButton', 'width', 'title', 'theme'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxPopover(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxPopover('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'arrowOffsetValue',\\n        value: function arrowOffsetValue(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\\n            }\\n        }\\n    }, {\\n        key: 'animationOpenDelay',\\n        value: function animationOpenDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationCloseDelay',\\n        value: function animationCloseDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\\n            }\\n        }\\n    }, {\\n        key: 'autoClose',\\n        value: function autoClose(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('autoClose', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('autoClose');\\n            }\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('height');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'isModal',\\n        value: function isModal(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('isModal', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('isModal');\\n            }\\n        }\\n    }, {\\n        key: 'offset',\\n        value: function offset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('offset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('offset');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('position');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'selector',\\n        value: function selector(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('selector', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('selector');\\n            }\\n        }\\n    }, {\\n        key: 'showArrow',\\n        value: function showArrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('showArrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('showArrow');\\n            }\\n        }\\n    }, {\\n        key: 'showCloseButton',\\n        value: function showCloseButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('width');\\n            }\\n        }\\n    }, {\\n        key: 'title',\\n        value: function title(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('title', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('title');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxPopover('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxPopover('theme');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxPopover('close');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxPopover('destroy');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxPopover('open');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxPopover' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxPopover;\\n}(_react2.default.Component);\\n\\nexports.default = JqxPopover;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 112 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxProgressBar = function (_React$Component) {\\n    _inherits(JqxProgressBar, _React$Component);\\n\\n    function JqxProgressBar() {\\n        _classCallCheck(this, JqxProgressBar);\\n\\n        return _possibleConstructorReturn(this, (JqxProgressBar.__proto__ || Object.getPrototypeOf(JqxProgressBar)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxProgressBar, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDuration', 'colorRanges', 'disabled', 'height', 'layout', 'max', 'min', 'orientation', 'rtl', 'renderText', 'showText', 'template', 'theme', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxProgressBar(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxProgressBar('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxProgressBar(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'colorRanges',\\n        value: function colorRanges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('colorRanges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('colorRanges');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('height');\\n            }\\n        }\\n    }, {\\n        key: 'layout',\\n        value: function layout(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('layout', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('layout');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('max');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('min');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'renderText',\\n        value: function renderText(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('renderText', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('renderText');\\n            }\\n        }\\n    }, {\\n        key: 'showText',\\n        value: function showText(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('showText', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('showText');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('theme');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('width');\\n            }\\n        }\\n    }, {\\n        key: 'actualValue',\\n        value: function actualValue(value) {\\n            JQXLite(this.componentSelector).jqxProgressBar('actualValue', value);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxProgressBar('destroy');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxProgressBar('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxProgressBar('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxProgressBar' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxProgressBar;\\n}(_react2.default.Component);\\n\\nexports.default = JqxProgressBar;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 113 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxRadioButton = function (_React$Component) {\\n    _inherits(JqxRadioButton, _React$Component);\\n\\n    function JqxRadioButton() {\\n        _classCallCheck(this, JqxRadioButton);\\n\\n        return _possibleConstructorReturn(this, (JqxRadioButton.__proto__ || Object.getPrototypeOf(JqxRadioButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxRadioButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationShowDelay', 'animationHideDelay', 'boxSize', 'checked', 'disabled', 'enableContainerClick', 'groupName', 'hasThreeStates', 'height', 'rtl', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxRadioButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxRadioButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxRadioButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationShowDelay',\\n        value: function animationShowDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('animationShowDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('animationShowDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDelay',\\n        value: function animationHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('animationHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('animationHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'boxSize',\\n        value: function boxSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('boxSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('boxSize');\\n            }\\n        }\\n    }, {\\n        key: 'checked',\\n        value: function checked(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('checked', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('checked');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableContainerClick',\\n        value: function enableContainerClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('enableContainerClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('enableContainerClick');\\n            }\\n        }\\n    }, {\\n        key: 'groupName',\\n        value: function groupName(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('groupName', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('groupName');\\n            }\\n        }\\n    }, {\\n        key: 'hasThreeStates',\\n        value: function hasThreeStates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('hasThreeStates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('hasThreeStates');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxRadioButton('check');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxRadioButton('disable');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxRadioButton('destroy');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxRadioButton('enable');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxRadioButton('focus');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxRadioButton('render');\\n        }\\n    }, {\\n        key: 'uncheck',\\n        value: function uncheck() {\\n            JQXLite(this.componentSelector).jqxRadioButton('uncheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxRadioButton('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRadioButton('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxRadioButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxRadioButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxRadioButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 114 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxRangeSelector = function (_React$Component) {\\n    _inherits(JqxRangeSelector, _React$Component);\\n\\n    function JqxRangeSelector() {\\n        _classCallCheck(this, JqxRangeSelector);\\n\\n        return _possibleConstructorReturn(this, (JqxRangeSelector.__proto__ || Object.getPrototypeOf(JqxRangeSelector)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxRangeSelector, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'showGroupLabels', 'labelsOnTicks', 'markersFormatFunction', 'height', 'labelsFormat', 'labelsFormatFunction', 'labelPrecision', 'moveOnClick', 'markerRenderer', 'markerPrecision', 'majorLabelRenderer', 'markersFormat', 'majorTicksInterval', 'minorTicksInterval', 'max', 'min', 'padding', 'range', 'resizable', 'rtl', 'showMinorTicks', 'snapToTicks', 'showMajorLabels', 'showMarkers', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxRangeSelector(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxRangeSelector('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxRangeSelector(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'showGroupLabels',\\n        value: function showGroupLabels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('showGroupLabels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('showGroupLabels');\\n            }\\n        }\\n    }, {\\n        key: 'labelsOnTicks',\\n        value: function labelsOnTicks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('labelsOnTicks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('labelsOnTicks');\\n            }\\n        }\\n    }, {\\n        key: 'markersFormatFunction',\\n        value: function markersFormatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('markersFormatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('markersFormatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('height');\\n            }\\n        }\\n    }, {\\n        key: 'labelsFormat',\\n        value: function labelsFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('labelsFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('labelsFormat');\\n            }\\n        }\\n    }, {\\n        key: 'labelsFormatFunction',\\n        value: function labelsFormatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('labelsFormatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('labelsFormatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'labelPrecision',\\n        value: function labelPrecision(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('labelPrecision', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('labelPrecision');\\n            }\\n        }\\n    }, {\\n        key: 'moveOnClick',\\n        value: function moveOnClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('moveOnClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('moveOnClick');\\n            }\\n        }\\n    }, {\\n        key: 'markerRenderer',\\n        value: function markerRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('markerRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('markerRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'markerPrecision',\\n        value: function markerPrecision(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('markerPrecision', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('markerPrecision');\\n            }\\n        }\\n    }, {\\n        key: 'majorLabelRenderer',\\n        value: function majorLabelRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('majorLabelRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('majorLabelRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'markersFormat',\\n        value: function markersFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('markersFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('markersFormat');\\n            }\\n        }\\n    }, {\\n        key: 'majorTicksInterval',\\n        value: function majorTicksInterval(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('majorTicksInterval', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('majorTicksInterval');\\n            }\\n        }\\n    }, {\\n        key: 'minorTicksInterval',\\n        value: function minorTicksInterval(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('minorTicksInterval', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('minorTicksInterval');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('max');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('min');\\n            }\\n        }\\n    }, {\\n        key: 'padding',\\n        value: function padding(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('padding', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('padding');\\n            }\\n        }\\n    }, {\\n        key: 'range',\\n        value: function range(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('range', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('range');\\n            }\\n        }\\n    }, {\\n        key: 'resizable',\\n        value: function resizable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('resizable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('resizable');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showMinorTicks',\\n        value: function showMinorTicks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('showMinorTicks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('showMinorTicks');\\n            }\\n        }\\n    }, {\\n        key: 'snapToTicks',\\n        value: function snapToTicks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('snapToTicks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('snapToTicks');\\n            }\\n        }\\n    }, {\\n        key: 'showMajorLabels',\\n        value: function showMajorLabels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('showMajorLabels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('showMajorLabels');\\n            }\\n        }\\n    }, {\\n        key: 'showMarkers',\\n        value: function showMarkers(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('showMarkers', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('showMarkers');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRangeSelector('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRangeSelector('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxRangeSelector('destroy');\\n        }\\n    }, {\\n        key: 'getRange',\\n        value: function getRange() {\\n            return JQXLite(this.componentSelector).jqxRangeSelector('getRange');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxRangeSelector('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxRangeSelector('refresh');\\n        }\\n    }, {\\n        key: 'setRange',\\n        value: function setRange(from, to) {\\n            JQXLite(this.componentSelector).jqxRangeSelector('setRange', from, to);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxRangeSelector' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxRangeSelector;\\n}(_react2.default.Component);\\n\\nexports.default = JqxRangeSelector;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 115 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxRating = function (_React$Component) {\\n    _inherits(JqxRating, _React$Component);\\n\\n    function JqxRating() {\\n        _classCallCheck(this, JqxRating);\\n\\n        return _possibleConstructorReturn(this, (JqxRating.__proto__ || Object.getPrototypeOf(JqxRating)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxRating, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['count', 'disabled', 'height', 'itemHeight', 'itemWidth', 'precision', 'singleVote', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxRating(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxRating('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxRating(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'count',\\n        value: function count(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('count', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('count');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('height');\\n            }\\n        }\\n    }, {\\n        key: 'itemHeight',\\n        value: function itemHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('itemHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('itemHeight');\\n            }\\n        }\\n    }, {\\n        key: 'itemWidth',\\n        value: function itemWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('itemWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('itemWidth');\\n            }\\n        }\\n    }, {\\n        key: 'precision',\\n        value: function precision(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('precision', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('precision');\\n            }\\n        }\\n    }, {\\n        key: 'singleVote',\\n        value: function singleVote(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('singleVote', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('singleVote');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('width');\\n            }\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxRating('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxRating('enable');\\n        }\\n    }, {\\n        key: 'getValue',\\n        value: function getValue() {\\n            return JQXLite(this.componentSelector).jqxRating('getValue');\\n        }\\n    }, {\\n        key: 'setValue',\\n        value: function setValue(value) {\\n            JQXLite(this.componentSelector).jqxRating('setValue', value);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxRating('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRating('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxRating' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxRating;\\n}(_react2.default.Component);\\n\\nexports.default = JqxRating;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 116 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxRepeatButton = function (_React$Component) {\\n    _inherits(JqxRepeatButton, _React$Component);\\n\\n    function JqxRepeatButton() {\\n        _classCallCheck(this, JqxRepeatButton);\\n\\n        return _possibleConstructorReturn(this, (JqxRepeatButton.__proto__ || Object.getPrototypeOf(JqxRepeatButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxRepeatButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['delay', 'disabled', 'height', 'imgSrc', 'imgWidth', 'imgHeight', 'imgPosition', 'roundedCorners', 'rtl', 'textPosition', 'textImageRelation', 'theme', 'template', 'toggled', 'width', 'value'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxRepeatButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxRepeatButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxRepeatButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'delay',\\n        value: function delay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('delay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('delay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'imgSrc',\\n        value: function imgSrc(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('imgSrc', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('imgSrc');\\n            }\\n        }\\n    }, {\\n        key: 'imgWidth',\\n        value: function imgWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('imgWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('imgWidth');\\n            }\\n        }\\n    }, {\\n        key: 'imgHeight',\\n        value: function imgHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('imgHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('imgHeight');\\n            }\\n        }\\n    }, {\\n        key: 'imgPosition',\\n        value: function imgPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('imgPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('imgPosition');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'textPosition',\\n        value: function textPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('textPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('textPosition');\\n            }\\n        }\\n    }, {\\n        key: 'textImageRelation',\\n        value: function textImageRelation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('textImageRelation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('textImageRelation');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('theme');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('template');\\n            }\\n        }\\n    }, {\\n        key: 'toggled',\\n        value: function toggled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('toggled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('toggled');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('value');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxRepeatButton('check');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxRepeatButton('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxRepeatButton('focus');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxRepeatButton('render');\\n        }\\n    }, {\\n        key: 'toggle',\\n        value: function toggle() {\\n            JQXLite(this.componentSelector).jqxRepeatButton('toggle');\\n        }\\n    }, {\\n        key: 'unCheck',\\n        value: function unCheck() {\\n            JQXLite(this.componentSelector).jqxRepeatButton('unCheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxRepeatButton('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRepeatButton('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxRepeatButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxRepeatButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxRepeatButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 117 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxResponsivePanel = function (_React$Component) {\\n    _inherits(JqxResponsivePanel, _React$Component);\\n\\n    function JqxResponsivePanel() {\\n        _classCallCheck(this, JqxResponsivePanel);\\n\\n        return _possibleConstructorReturn(this, (JqxResponsivePanel.__proto__ || Object.getPrototypeOf(JqxResponsivePanel)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxResponsivePanel, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDirection', 'animationHideDelay', 'animationShowDelay', 'animationType', 'autoClose', 'collapseBreakpoint', 'collapseWidth', 'height', 'initContent', 'theme', 'toggleButton', 'toggleButtonSize', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxResponsivePanel(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxResponsivePanel('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxResponsivePanel(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDirection',\\n        value: function animationDirection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationDirection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationDirection');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDelay',\\n        value: function animationHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationShowDelay',\\n        value: function animationShowDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationShowDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationShowDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'autoClose',\\n        value: function autoClose(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('autoClose', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('autoClose');\\n            }\\n        }\\n    }, {\\n        key: 'collapseBreakpoint',\\n        value: function collapseBreakpoint(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('collapseBreakpoint', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('collapseBreakpoint');\\n            }\\n        }\\n    }, {\\n        key: 'collapseWidth',\\n        value: function collapseWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('collapseWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('collapseWidth');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('height');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toggleButton',\\n        value: function toggleButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('toggleButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('toggleButton');\\n            }\\n        }\\n    }, {\\n        key: 'toggleButtonSize',\\n        value: function toggleButtonSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('toggleButtonSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('toggleButtonSize');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxResponsivePanel('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxResponsivePanel('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxResponsivePanel('close');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxResponsivePanel('destroy');\\n        }\\n    }, {\\n        key: 'isCollapsed',\\n        value: function isCollapsed() {\\n            return JQXLite(this.componentSelector).jqxResponsivePanel('isCollapsed');\\n        }\\n    }, {\\n        key: 'isOpened',\\n        value: function isOpened() {\\n            return JQXLite(this.componentSelector).jqxResponsivePanel('isOpened');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxResponsivePanel('open');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxResponsivePanel('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxResponsivePanel('render');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxResponsivePanel' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxResponsivePanel;\\n}(_react2.default.Component);\\n\\nexports.default = JqxResponsivePanel;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 118 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxRibbon = function (_React$Component) {\\n    _inherits(JqxRibbon, _React$Component);\\n\\n    function JqxRibbon() {\\n        _classCallCheck(this, JqxRibbon);\\n\\n        return _possibleConstructorReturn(this, (JqxRibbon.__proto__ || Object.getPrototypeOf(JqxRibbon)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxRibbon, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'animationDelay', 'disabled', 'height', 'initContent', 'mode', 'popupCloseMode', 'position', 'rtl', 'selectedIndex', 'selectionMode', 'scrollPosition', 'scrollStep', 'scrollDelay', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxRibbon(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxRibbon('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxRibbon(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'animationDelay',\\n        value: function animationDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('animationDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('animationDelay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('height');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'mode',\\n        value: function mode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('mode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('mode');\\n            }\\n        }\\n    }, {\\n        key: 'popupCloseMode',\\n        value: function popupCloseMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('popupCloseMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('popupCloseMode');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('position');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'selectedIndex',\\n        value: function selectedIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('selectedIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('selectedIndex');\\n            }\\n        }\\n    }, {\\n        key: 'selectionMode',\\n        value: function selectionMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('selectionMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('selectionMode');\\n            }\\n        }\\n    }, {\\n        key: 'scrollPosition',\\n        value: function scrollPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('scrollPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('scrollPosition');\\n            }\\n        }\\n    }, {\\n        key: 'scrollStep',\\n        value: function scrollStep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('scrollStep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('scrollStep');\\n            }\\n        }\\n    }, {\\n        key: 'scrollDelay',\\n        value: function scrollDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('scrollDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('scrollDelay');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('width');\\n            }\\n        }\\n    }, {\\n        key: 'addAt',\\n        value: function addAt(index, item) {\\n            JQXLite(this.componentSelector).jqxRibbon('addAt', index, item);\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxRibbon('clearSelection');\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(index) {\\n            JQXLite(this.componentSelector).jqxRibbon('disableAt', index);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxRibbon('destroy');\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(index) {\\n            JQXLite(this.componentSelector).jqxRibbon('enableAt', index);\\n        }\\n    }, {\\n        key: 'hideAt',\\n        value: function hideAt(index) {\\n            JQXLite(this.componentSelector).jqxRibbon('hideAt', index);\\n        }\\n    }, {\\n        key: 'removeAt',\\n        value: function removeAt(index) {\\n            JQXLite(this.componentSelector).jqxRibbon('removeAt', index);\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxRibbon('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxRibbon('refresh');\\n        }\\n    }, {\\n        key: 'selectAt',\\n        value: function selectAt(index) {\\n            JQXLite(this.componentSelector).jqxRibbon('selectAt', index);\\n        }\\n    }, {\\n        key: 'showAt',\\n        value: function showAt(index) {\\n            JQXLite(this.componentSelector).jqxRibbon('showAt', index);\\n        }\\n    }, {\\n        key: 'setPopupLayout',\\n        value: function setPopupLayout(index, layout, width, height) {\\n            JQXLite(this.componentSelector).jqxRibbon('setPopupLayout', index, layout, width, height);\\n        }\\n    }, {\\n        key: 'updateAt',\\n        value: function updateAt(index, item) {\\n            JQXLite(this.componentSelector).jqxRibbon('updateAt', index, item);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxRibbon('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxRibbon('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxRibbon' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxRibbon;\\n}(_react2.default.Component);\\n\\nexports.default = JqxRibbon;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 119 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxScheduler = function (_React$Component) {\\n    _inherits(JqxScheduler, _React$Component);\\n\\n    function JqxScheduler() {\\n        _classCallCheck(this, JqxScheduler);\\n\\n        return _possibleConstructorReturn(this, (JqxScheduler.__proto__ || Object.getPrototypeOf(JqxScheduler)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxScheduler, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['appointmentOpacity', 'appointmentsMinHeight', 'appointmentDataFields', 'appointmentTooltips', 'columnsHeight', 'contextMenu', 'contextMenuOpen', 'contextMenuClose', 'contextMenuItemClick', 'contextMenuCreate', 'changedAppointments', 'disabled', 'date', 'dayNameFormat', 'enableHover', 'editDialog', 'editDialogDateTimeFormatstring', 'editDialogDateFormatstring', 'editDialogOpen', 'editDialogCreate', 'editDialogKeyDown', 'editDialogClose', 'exportSettings', 'height', 'legendPosition', 'legendHeight', 'localization', 'min', 'max', 'ready', 'renderAppointment', 'rendering', 'rendered', 'rtl', 'resources', 'rowsHeight', 'showToolbar', 'showLegend', 'scrollBarSize', 'source', 'statuses', 'touchRowsHeight', 'theme', 'touchAppointmentsMinHeight', 'touchScrollBarSize', 'timeZone', 'touchDayNameFormat', 'toolBarRangeFormat', 'toolBarRangeFormatAbbr', 'toolbarHeight', 'views', 'view', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxScheduler(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxScheduler('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxScheduler(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'appointmentOpacity',\\n        value: function appointmentOpacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('appointmentOpacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentOpacity');\\n            }\\n        }\\n    }, {\\n        key: 'appointmentsMinHeight',\\n        value: function appointmentsMinHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('appointmentsMinHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentsMinHeight');\\n            }\\n        }\\n    }, {\\n        key: 'appointmentDataFields',\\n        value: function appointmentDataFields(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('appointmentDataFields', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentDataFields');\\n            }\\n        }\\n    }, {\\n        key: 'appointmentTooltips',\\n        value: function appointmentTooltips(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('appointmentTooltips', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentTooltips');\\n            }\\n        }\\n    }, {\\n        key: 'columnsHeight',\\n        value: function columnsHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('columnsHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('columnsHeight');\\n            }\\n        }\\n    }, {\\n        key: 'contextMenu',\\n        value: function contextMenu(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('contextMenu', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenu');\\n            }\\n        }\\n    }, {\\n        key: 'contextMenuOpen',\\n        value: function contextMenuOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuOpen');\\n            }\\n        }\\n    }, {\\n        key: 'contextMenuClose',\\n        value: function contextMenuClose(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuClose', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuClose');\\n            }\\n        }\\n    }, {\\n        key: 'contextMenuItemClick',\\n        value: function contextMenuItemClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuItemClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuItemClick');\\n            }\\n        }\\n    }, {\\n        key: 'contextMenuCreate',\\n        value: function contextMenuCreate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuCreate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuCreate');\\n            }\\n        }\\n    }, {\\n        key: 'changedAppointments',\\n        value: function changedAppointments(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('changedAppointments', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('changedAppointments');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'date',\\n        value: function date(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('date', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('date');\\n            }\\n        }\\n    }, {\\n        key: 'dayNameFormat',\\n        value: function dayNameFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('dayNameFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('dayNameFormat');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'editDialog',\\n        value: function editDialog(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialog', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialog');\\n            }\\n        }\\n    }, {\\n        key: 'editDialogDateTimeFormatstring',\\n        value: function editDialogDateTimeFormatstring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialogDateTimeFormatstring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogDateTimeFormatstring');\\n            }\\n        }\\n    }, {\\n        key: 'editDialogDateFormatstring',\\n        value: function editDialogDateFormatstring(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialogDateFormatstring', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogDateFormatstring');\\n            }\\n        }\\n    }, {\\n        key: 'editDialogOpen',\\n        value: function editDialogOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialogOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogOpen');\\n            }\\n        }\\n    }, {\\n        key: 'editDialogCreate',\\n        value: function editDialogCreate(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialogCreate', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogCreate');\\n            }\\n        }\\n    }, {\\n        key: 'editDialogKeyDown',\\n        value: function editDialogKeyDown(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialogKeyDown', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogKeyDown');\\n            }\\n        }\\n    }, {\\n        key: 'editDialogClose',\\n        value: function editDialogClose(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('editDialogClose', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogClose');\\n            }\\n        }\\n    }, {\\n        key: 'exportSettings',\\n        value: function exportSettings(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('exportSettings', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('exportSettings');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('height');\\n            }\\n        }\\n    }, {\\n        key: 'legendPosition',\\n        value: function legendPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('legendPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('legendPosition');\\n            }\\n        }\\n    }, {\\n        key: 'legendHeight',\\n        value: function legendHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('legendHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('legendHeight');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('localization');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('max');\\n            }\\n        }\\n    }, {\\n        key: 'ready',\\n        value: function ready(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('ready', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('ready');\\n            }\\n        }\\n    }, {\\n        key: 'renderAppointment',\\n        value: function renderAppointment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('renderAppointment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('renderAppointment');\\n            }\\n        }\\n    }, {\\n        key: 'rendering',\\n        value: function rendering(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('rendering', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('rendering');\\n            }\\n        }\\n    }, {\\n        key: 'rendered',\\n        value: function rendered(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('rendered', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('rendered');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'resources',\\n        value: function resources(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('resources', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('resources');\\n            }\\n        }\\n    }, {\\n        key: 'rowsHeight',\\n        value: function rowsHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('rowsHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('rowsHeight');\\n            }\\n        }\\n    }, {\\n        key: 'showToolbar',\\n        value: function showToolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('showToolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('showToolbar');\\n            }\\n        }\\n    }, {\\n        key: 'showLegend',\\n        value: function showLegend(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('showLegend', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('showLegend');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('source');\\n            }\\n        }\\n    }, {\\n        key: 'statuses',\\n        value: function statuses(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('statuses', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('statuses');\\n            }\\n        }\\n    }, {\\n        key: 'touchRowsHeight',\\n        value: function touchRowsHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('touchRowsHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('touchRowsHeight');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('theme');\\n            }\\n        }\\n    }, {\\n        key: 'touchAppointmentsMinHeight',\\n        value: function touchAppointmentsMinHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('touchAppointmentsMinHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('touchAppointmentsMinHeight');\\n            }\\n        }\\n    }, {\\n        key: 'touchScrollBarSize',\\n        value: function touchScrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('touchScrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('touchScrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'timeZone',\\n        value: function timeZone(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('timeZone', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('timeZone');\\n            }\\n        }\\n    }, {\\n        key: 'touchDayNameFormat',\\n        value: function touchDayNameFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('touchDayNameFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('touchDayNameFormat');\\n            }\\n        }\\n    }, {\\n        key: 'toolBarRangeFormat',\\n        value: function toolBarRangeFormat(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormat', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormat');\\n            }\\n        }\\n    }, {\\n        key: 'toolBarRangeFormatAbbr',\\n        value: function toolBarRangeFormatAbbr(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormatAbbr', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormatAbbr');\\n            }\\n        }\\n    }, {\\n        key: 'toolbarHeight',\\n        value: function toolbarHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('toolbarHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('toolbarHeight');\\n            }\\n        }\\n    }, {\\n        key: 'views',\\n        value: function views(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('views', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('views');\\n            }\\n        }\\n    }, {\\n        key: 'view',\\n        value: function view(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('view', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('view');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScheduler('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScheduler('width');\\n            }\\n        }\\n    }, {\\n        key: 'addAppointment',\\n        value: function addAppointment(item) {\\n            JQXLite(this.componentSelector).jqxScheduler('addAppointment', item);\\n        }\\n    }, {\\n        key: 'beginAppointmentsUpdate',\\n        value: function beginAppointmentsUpdate() {\\n            JQXLite(this.componentSelector).jqxScheduler('beginAppointmentsUpdate');\\n        }\\n    }, {\\n        key: 'clearAppointmentsSelection',\\n        value: function clearAppointmentsSelection() {\\n            JQXLite(this.componentSelector).jqxScheduler('clearAppointmentsSelection');\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxScheduler('clearSelection');\\n        }\\n    }, {\\n        key: 'closeMenu',\\n        value: function closeMenu() {\\n            JQXLite(this.componentSelector).jqxScheduler('closeMenu');\\n        }\\n    }, {\\n        key: 'closeDialog',\\n        value: function closeDialog() {\\n            JQXLite(this.componentSelector).jqxScheduler('closeDialog');\\n        }\\n    }, {\\n        key: 'deleteAppointment',\\n        value: function deleteAppointment(appointmenId) {\\n            JQXLite(this.componentSelector).jqxScheduler('deleteAppointment', appointmenId);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxScheduler('destroy');\\n        }\\n    }, {\\n        key: 'endAppointmentsUpdate',\\n        value: function endAppointmentsUpdate() {\\n            JQXLite(this.componentSelector).jqxScheduler('endAppointmentsUpdate');\\n        }\\n    }, {\\n        key: 'ensureAppointmentVisible',\\n        value: function ensureAppointmentVisible(id) {\\n            JQXLite(this.componentSelector).jqxScheduler('ensureAppointmentVisible', id);\\n        }\\n    }, {\\n        key: 'ensureVisible',\\n        value: function ensureVisible(item, resourceId) {\\n            JQXLite(this.componentSelector).jqxScheduler('ensureVisible', item, resourceId);\\n        }\\n    }, {\\n        key: 'exportData',\\n        value: function exportData(format) {\\n            return JQXLite(this.componentSelector).jqxScheduler('exportData', format);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxScheduler('focus');\\n        }\\n    }, {\\n        key: 'getAppointmentProperty',\\n        value: function getAppointmentProperty(appointmentId, name) {\\n            return JQXLite(this.componentSelector).jqxScheduler('getAppointmentProperty', appointmentId, name);\\n        }\\n    }, {\\n        key: 'getSelection',\\n        value: function getSelection() {\\n            return JQXLite(this.componentSelector).jqxScheduler('getSelection');\\n        }\\n    }, {\\n        key: 'getAppointments',\\n        value: function getAppointments() {\\n            return JQXLite(this.componentSelector).jqxScheduler('getAppointments');\\n        }\\n    }, {\\n        key: 'getDataAppointments',\\n        value: function getDataAppointments() {\\n            return JQXLite(this.componentSelector).jqxScheduler('getDataAppointments');\\n        }\\n    }, {\\n        key: 'hideAppointmentsByResource',\\n        value: function hideAppointmentsByResource(resourcesId) {\\n            JQXLite(this.componentSelector).jqxScheduler('hideAppointmentsByResource', resourcesId);\\n        }\\n    }, {\\n        key: 'openMenu',\\n        value: function openMenu(left, top) {\\n            JQXLite(this.componentSelector).jqxScheduler('openMenu', left, top);\\n        }\\n    }, {\\n        key: 'openDialog',\\n        value: function openDialog(left, top) {\\n            JQXLite(this.componentSelector).jqxScheduler('openDialog', left, top);\\n        }\\n    }, {\\n        key: 'selectAppointment',\\n        value: function selectAppointment(appointmentId) {\\n            JQXLite(this.componentSelector).jqxScheduler('selectAppointment', appointmentId);\\n        }\\n    }, {\\n        key: 'setAppointmentProperty',\\n        value: function setAppointmentProperty(appointmentId, name, value) {\\n            JQXLite(this.componentSelector).jqxScheduler('setAppointmentProperty', appointmentId, name, value);\\n        }\\n    }, {\\n        key: 'selectCell',\\n        value: function selectCell(date, allday, resourceId) {\\n            JQXLite(this.componentSelector).jqxScheduler('selectCell', date, allday, resourceId);\\n        }\\n    }, {\\n        key: 'showAppointmentsByResource',\\n        value: function showAppointmentsByResource(resourceId) {\\n            JQXLite(this.componentSelector).jqxScheduler('showAppointmentsByResource', resourceId);\\n        }\\n    }, {\\n        key: 'scrollWidth',\\n        value: function scrollWidth() {\\n            return JQXLite(this.componentSelector).jqxScheduler('scrollWidth');\\n        }\\n    }, {\\n        key: 'scrollHeight',\\n        value: function scrollHeight() {\\n            return JQXLite(this.componentSelector).jqxScheduler('scrollHeight');\\n        }\\n    }, {\\n        key: 'scrollLeft',\\n        value: function scrollLeft(left) {\\n            JQXLite(this.componentSelector).jqxScheduler('scrollLeft', left);\\n        }\\n    }, {\\n        key: 'scrollTop',\\n        value: function scrollTop(top) {\\n            JQXLite(this.componentSelector).jqxScheduler('scrollTop', top);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxScheduler' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxScheduler;\\n}(_react2.default.Component);\\n\\nexports.default = JqxScheduler;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 120 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxScrollBar = function (_React$Component) {\\n    _inherits(JqxScrollBar, _React$Component);\\n\\n    function JqxScrollBar() {\\n        _classCallCheck(this, JqxScrollBar);\\n\\n        return _possibleConstructorReturn(this, (JqxScrollBar.__proto__ || Object.getPrototypeOf(JqxScrollBar)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxScrollBar, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'largestep', 'min', 'max', 'rtl', 'step', 'showButtons', 'thumbMinSize', 'theme', 'vertical', 'value', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxScrollBar(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxScrollBar('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxScrollBar(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('height');\\n            }\\n        }\\n    }, {\\n        key: 'largestep',\\n        value: function largestep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('largestep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('largestep');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('min');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('max');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'step',\\n        value: function step(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('step', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('step');\\n            }\\n        }\\n    }, {\\n        key: 'showButtons',\\n        value: function showButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('showButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('showButtons');\\n            }\\n        }\\n    }, {\\n        key: 'thumbMinSize',\\n        value: function thumbMinSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('thumbMinSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('thumbMinSize');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('theme');\\n            }\\n        }\\n    }, {\\n        key: 'vertical',\\n        value: function vertical(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('vertical', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('vertical');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('value');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollBar('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollBar('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxScrollBar('destroy');\\n        }\\n    }, {\\n        key: 'isScrolling',\\n        value: function isScrolling() {\\n            return JQXLite(this.componentSelector).jqxScrollBar('isScrolling');\\n        }\\n    }, {\\n        key: 'setPosition',\\n        value: function setPosition(index) {\\n            JQXLite(this.componentSelector).jqxScrollBar('setPosition', index);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxScrollBar' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxScrollBar;\\n}(_react2.default.Component);\\n\\nexports.default = JqxScrollBar;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 121 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxScrollView = function (_React$Component) {\\n    _inherits(JqxScrollView, _React$Component);\\n\\n    function JqxScrollView() {\\n        _classCallCheck(this, JqxScrollView);\\n\\n        return _possibleConstructorReturn(this, (JqxScrollView.__proto__ || Object.getPrototypeOf(JqxScrollView)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxScrollView, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationDuration', 'bounceEnabled', 'buttonsOffset', 'currentPage', 'disabled', 'height', 'moveThreshold', 'showButtons', 'slideShow', 'slideDuration', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxScrollView(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxScrollView('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxScrollView(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'bounceEnabled',\\n        value: function bounceEnabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('bounceEnabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('bounceEnabled');\\n            }\\n        }\\n    }, {\\n        key: 'buttonsOffset',\\n        value: function buttonsOffset(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('buttonsOffset', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('buttonsOffset');\\n            }\\n        }\\n    }, {\\n        key: 'currentPage',\\n        value: function currentPage(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('currentPage', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('currentPage');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('height');\\n            }\\n        }\\n    }, {\\n        key: 'moveThreshold',\\n        value: function moveThreshold(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('moveThreshold', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('moveThreshold');\\n            }\\n        }\\n    }, {\\n        key: 'showButtons',\\n        value: function showButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('showButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('showButtons');\\n            }\\n        }\\n    }, {\\n        key: 'slideShow',\\n        value: function slideShow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('slideShow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('slideShow');\\n            }\\n        }\\n    }, {\\n        key: 'slideDuration',\\n        value: function slideDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('slideDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('slideDuration');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxScrollView('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxScrollView('width');\\n            }\\n        }\\n    }, {\\n        key: 'back',\\n        value: function back() {\\n            JQXLite(this.componentSelector).jqxScrollView('back');\\n        }\\n    }, {\\n        key: 'changePage',\\n        value: function changePage(index) {\\n            JQXLite(this.componentSelector).jqxScrollView('changePage', index);\\n        }\\n    }, {\\n        key: 'forward',\\n        value: function forward() {\\n            JQXLite(this.componentSelector).jqxScrollView('forward');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxScrollView('refresh');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxScrollView' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxScrollView;\\n}(_react2.default.Component);\\n\\nexports.default = JqxScrollView;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 122 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxSlider = function (_React$Component) {\\n    _inherits(JqxSlider, _React$Component);\\n\\n    function JqxSlider() {\\n        _classCallCheck(this, JqxSlider);\\n\\n        return _possibleConstructorReturn(this, (JqxSlider.__proto__ || Object.getPrototypeOf(JqxSlider)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxSlider, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['buttonsPosition', 'disabled', 'height', 'layout', 'mode', 'minorTicksFrequency', 'minorTickSize', 'max', 'min', 'orientation', 'rangeSlider', 'rtl', 'step', 'showTicks', 'showMinorTicks', 'showTickLabels', 'showButtons', 'showRange', 'template', 'theme', 'ticksPosition', 'ticksFrequency', 'tickSize', 'tickLabelFormatFunction', 'tooltip', 'tooltipHideDelay', 'tooltipPosition', 'tooltipFormatFunction', 'value', 'values', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxSlider(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxSlider('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxSlider(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'buttonsPosition',\\n        value: function buttonsPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('buttonsPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('buttonsPosition');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('height');\\n            }\\n        }\\n    }, {\\n        key: 'layout',\\n        value: function layout(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('layout', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('layout');\\n            }\\n        }\\n    }, {\\n        key: 'mode',\\n        value: function mode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('mode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('mode');\\n            }\\n        }\\n    }, {\\n        key: 'minorTicksFrequency',\\n        value: function minorTicksFrequency(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('minorTicksFrequency', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('minorTicksFrequency');\\n            }\\n        }\\n    }, {\\n        key: 'minorTickSize',\\n        value: function minorTickSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('minorTickSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('minorTickSize');\\n            }\\n        }\\n    }, {\\n        key: 'max',\\n        value: function max(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('max', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('max');\\n            }\\n        }\\n    }, {\\n        key: 'min',\\n        value: function min(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('min', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('min');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'rangeSlider',\\n        value: function rangeSlider(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('rangeSlider', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('rangeSlider');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'step',\\n        value: function step(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('step', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('step');\\n            }\\n        }\\n    }, {\\n        key: 'showTicks',\\n        value: function showTicks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('showTicks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('showTicks');\\n            }\\n        }\\n    }, {\\n        key: 'showMinorTicks',\\n        value: function showMinorTicks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('showMinorTicks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('showMinorTicks');\\n            }\\n        }\\n    }, {\\n        key: 'showTickLabels',\\n        value: function showTickLabels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('showTickLabels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('showTickLabels');\\n            }\\n        }\\n    }, {\\n        key: 'showButtons',\\n        value: function showButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('showButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('showButtons');\\n            }\\n        }\\n    }, {\\n        key: 'showRange',\\n        value: function showRange(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('showRange', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('showRange');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('template');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('theme');\\n            }\\n        }\\n    }, {\\n        key: 'ticksPosition',\\n        value: function ticksPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('ticksPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('ticksPosition');\\n            }\\n        }\\n    }, {\\n        key: 'ticksFrequency',\\n        value: function ticksFrequency(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('ticksFrequency', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('ticksFrequency');\\n            }\\n        }\\n    }, {\\n        key: 'tickSize',\\n        value: function tickSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('tickSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('tickSize');\\n            }\\n        }\\n    }, {\\n        key: 'tickLabelFormatFunction',\\n        value: function tickLabelFormatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('tickLabelFormatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('tickLabelFormatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'tooltip',\\n        value: function tooltip(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('tooltip', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('tooltip');\\n            }\\n        }\\n    }, {\\n        key: 'tooltipHideDelay',\\n        value: function tooltipHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('tooltipHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('tooltipHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'tooltipPosition',\\n        value: function tooltipPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('tooltipPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('tooltipPosition');\\n            }\\n        }\\n    }, {\\n        key: 'tooltipFormatFunction',\\n        value: function tooltipFormatFunction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('tooltipFormatFunction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('tooltipFormatFunction');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('value');\\n            }\\n        }\\n    }, {\\n        key: 'values',\\n        value: function values(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('values', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('values');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxSlider('destroy');\\n        }\\n    }, {\\n        key: 'decrementValue',\\n        value: function decrementValue() {\\n            JQXLite(this.componentSelector).jqxSlider('decrementValue');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxSlider('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxSlider('enable');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxSlider('focus');\\n        }\\n    }, {\\n        key: 'getValue',\\n        value: function getValue() {\\n            return JQXLite(this.componentSelector).jqxSlider('getValue');\\n        }\\n    }, {\\n        key: 'incrementValue',\\n        value: function incrementValue() {\\n            JQXLite(this.componentSelector).jqxSlider('incrementValue');\\n        }\\n    }, {\\n        key: 'setValue',\\n        value: function setValue(index) {\\n            JQXLite(this.componentSelector).jqxSlider('setValue', index);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxSlider('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSlider('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxSlider' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxSlider;\\n}(_react2.default.Component);\\n\\nexports.default = JqxSlider;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 123 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxSortable = function (_React$Component) {\\n    _inherits(JqxSortable, _React$Component);\\n\\n    function JqxSortable() {\\n        _classCallCheck(this, JqxSortable);\\n\\n        return _possibleConstructorReturn(this, (JqxSortable.__proto__ || Object.getPrototypeOf(JqxSortable)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxSortable, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['appendTo', 'axis', 'cancelProperty', 'connectWith', 'containment', 'cursor', 'cursorAt', 'delay', 'disabled', 'distance', 'dropOnEmpty', 'forceHelperSize', 'forcePlaceholderSize', 'grid', 'handle', 'helper', 'items', 'opacity', 'placeholderShow', 'revert', 'scroll', 'scrollSensitivity', 'scrollSpeed', 'tolerance', 'zIndex'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxSortable(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxSortable('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxSortable(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'appendTo',\\n        value: function appendTo(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('appendTo', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('appendTo');\\n            }\\n        }\\n    }, {\\n        key: 'axis',\\n        value: function axis(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('axis', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('axis');\\n            }\\n        }\\n    }, {\\n        key: 'cancelProperty',\\n        value: function cancelProperty(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('cancelProperty', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('cancelProperty');\\n            }\\n        }\\n    }, {\\n        key: 'connectWith',\\n        value: function connectWith(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('connectWith', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('connectWith');\\n            }\\n        }\\n    }, {\\n        key: 'containment',\\n        value: function containment(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('containment', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('containment');\\n            }\\n        }\\n    }, {\\n        key: 'cursor',\\n        value: function cursor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('cursor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('cursor');\\n            }\\n        }\\n    }, {\\n        key: 'cursorAt',\\n        value: function cursorAt(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('cursorAt', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('cursorAt');\\n            }\\n        }\\n    }, {\\n        key: 'delay',\\n        value: function delay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('delay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('delay');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'distance',\\n        value: function distance(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('distance', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('distance');\\n            }\\n        }\\n    }, {\\n        key: 'dropOnEmpty',\\n        value: function dropOnEmpty(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('dropOnEmpty', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('dropOnEmpty');\\n            }\\n        }\\n    }, {\\n        key: 'forceHelperSize',\\n        value: function forceHelperSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('forceHelperSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('forceHelperSize');\\n            }\\n        }\\n    }, {\\n        key: 'forcePlaceholderSize',\\n        value: function forcePlaceholderSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('forcePlaceholderSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('forcePlaceholderSize');\\n            }\\n        }\\n    }, {\\n        key: 'grid',\\n        value: function grid(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('grid', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('grid');\\n            }\\n        }\\n    }, {\\n        key: 'handle',\\n        value: function handle(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('handle', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('handle');\\n            }\\n        }\\n    }, {\\n        key: 'helper',\\n        value: function helper(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('helper', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('helper');\\n            }\\n        }\\n    }, {\\n        key: 'items',\\n        value: function items(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('items', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('items');\\n            }\\n        }\\n    }, {\\n        key: 'opacity',\\n        value: function opacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('opacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('opacity');\\n            }\\n        }\\n    }, {\\n        key: 'placeholderShow',\\n        value: function placeholderShow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('placeholderShow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('placeholderShow');\\n            }\\n        }\\n    }, {\\n        key: 'revert',\\n        value: function revert(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('revert', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('revert');\\n            }\\n        }\\n    }, {\\n        key: 'scroll',\\n        value: function scroll(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('scroll', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('scroll');\\n            }\\n        }\\n    }, {\\n        key: 'scrollSensitivity',\\n        value: function scrollSensitivity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('scrollSensitivity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('scrollSensitivity');\\n            }\\n        }\\n    }, {\\n        key: 'scrollSpeed',\\n        value: function scrollSpeed(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('scrollSpeed', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('scrollSpeed');\\n            }\\n        }\\n    }, {\\n        key: 'tolerance',\\n        value: function tolerance(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('tolerance', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('tolerance');\\n            }\\n        }\\n    }, {\\n        key: 'zIndex',\\n        value: function zIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSortable('zIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSortable('zIndex');\\n            }\\n        }\\n    }, {\\n        key: 'cancelMethod',\\n        value: function cancelMethod() {\\n            JQXLite(this.componentSelector).jqxSortable('cancelMethod');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxSortable('destroy');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxSortable('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxSortable('enable');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxSortable('refresh');\\n        }\\n    }, {\\n        key: 'refreshPositions',\\n        value: function refreshPositions() {\\n            JQXLite(this.componentSelector).jqxSortable('refreshPositions');\\n        }\\n    }, {\\n        key: 'serialize',\\n        value: function serialize() {\\n            JQXLite(this.componentSelector).jqxSortable('serialize');\\n        }\\n    }, {\\n        key: 'toArray',\\n        value: function toArray() {\\n            return JQXLite(this.componentSelector).jqxSortable('toArray');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxSortable' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxSortable;\\n}(_react2.default.Component);\\n\\nexports.default = JqxSortable;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 124 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxSplitter = function (_React$Component) {\\n    _inherits(JqxSplitter, _React$Component);\\n\\n    function JqxSplitter() {\\n        _classCallCheck(this, JqxSplitter);\\n\\n        return _possibleConstructorReturn(this, (JqxSplitter.__proto__ || Object.getPrototypeOf(JqxSplitter)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxSplitter, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'orientation', 'panels', 'resizable', 'splitBarSize', 'showSplitBar', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxSplitter(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxSplitter('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxSplitter(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('height');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'panels',\\n        value: function panels(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('panels', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('panels');\\n            }\\n        }\\n    }, {\\n        key: 'resizable',\\n        value: function resizable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('resizable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('resizable');\\n            }\\n        }\\n    }, {\\n        key: 'splitBarSize',\\n        value: function splitBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('splitBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('splitBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'showSplitBar',\\n        value: function showSplitBar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('showSplitBar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('showSplitBar');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSplitter('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSplitter('width');\\n            }\\n        }\\n    }, {\\n        key: 'collapse',\\n        value: function collapse() {\\n            JQXLite(this.componentSelector).jqxSplitter('collapse');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxSplitter('destroy');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxSplitter('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxSplitter('enable');\\n        }\\n    }, {\\n        key: 'expand',\\n        value: function expand() {\\n            JQXLite(this.componentSelector).jqxSplitter('expand');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxSplitter('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxSplitter('refresh');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxSplitter' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxSplitter;\\n}(_react2.default.Component);\\n\\nexports.default = JqxSplitter;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 125 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxSwitchButton = function (_React$Component) {\\n    _inherits(JqxSwitchButton, _React$Component);\\n\\n    function JqxSwitchButton() {\\n        _classCallCheck(this, JqxSwitchButton);\\n\\n        return _possibleConstructorReturn(this, (JqxSwitchButton.__proto__ || Object.getPrototypeOf(JqxSwitchButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxSwitchButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['checked', 'disabled', 'height', 'orientation', 'onLabel', 'offLabel', 'thumbSize', 'rtl', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxSwitchButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxSwitchButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxSwitchButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'checked',\\n        value: function checked(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('checked', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('checked');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'orientation',\\n        value: function orientation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('orientation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('orientation');\\n            }\\n        }\\n    }, {\\n        key: 'onLabel',\\n        value: function onLabel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('onLabel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('onLabel');\\n            }\\n        }\\n    }, {\\n        key: 'offLabel',\\n        value: function offLabel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('offLabel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('offLabel');\\n            }\\n        }\\n    }, {\\n        key: 'thumbSize',\\n        value: function thumbSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('thumbSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('thumbSize');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxSwitchButton('check');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxSwitchButton('disable');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxSwitchButton('enable');\\n        }\\n    }, {\\n        key: 'toggle',\\n        value: function toggle() {\\n            JQXLite(this.componentSelector).jqxSwitchButton('toggle');\\n        }\\n    }, {\\n        key: 'uncheck',\\n        value: function uncheck() {\\n            JQXLite(this.componentSelector).jqxSwitchButton('uncheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxSwitchButton('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxSwitchButton('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxSwitchButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxSwitchButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxSwitchButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 126 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTabs = function (_React$Component) {\\n    _inherits(JqxTabs, _React$Component);\\n\\n    function JqxTabs() {\\n        _classCallCheck(this, JqxTabs);\\n\\n        return _possibleConstructorReturn(this, (JqxTabs.__proto__ || Object.getPrototypeOf(JqxTabs)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTabs, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationType', 'autoHeight', 'closeButtonSize', 'collapsible', 'contentTransitionDuration', 'disabled', 'enabledHover', 'enableScrollAnimation', 'enableDropAnimation', 'height', 'initTabContent', 'keyboardNavigation', 'next', 'previous', 'position', 'reorder', 'rtl', 'scrollAnimationDuration', 'selectedItem', 'selectionTracker', 'scrollable', 'scrollPosition', 'scrollStep', 'showCloseButtons', 'toggleMode', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTabs(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTabs('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTabs(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'autoHeight',\\n        value: function autoHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('autoHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('autoHeight');\\n            }\\n        }\\n    }, {\\n        key: 'closeButtonSize',\\n        value: function closeButtonSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('closeButtonSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('closeButtonSize');\\n            }\\n        }\\n    }, {\\n        key: 'collapsible',\\n        value: function collapsible(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('collapsible', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('collapsible');\\n            }\\n        }\\n    }, {\\n        key: 'contentTransitionDuration',\\n        value: function contentTransitionDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('contentTransitionDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('contentTransitionDuration');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enabledHover',\\n        value: function enabledHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('enabledHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('enabledHover');\\n            }\\n        }\\n    }, {\\n        key: 'enableScrollAnimation',\\n        value: function enableScrollAnimation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('enableScrollAnimation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('enableScrollAnimation');\\n            }\\n        }\\n    }, {\\n        key: 'enableDropAnimation',\\n        value: function enableDropAnimation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('enableDropAnimation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('enableDropAnimation');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('height');\\n            }\\n        }\\n    }, {\\n        key: 'initTabContent',\\n        value: function initTabContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('initTabContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('initTabContent');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardNavigation',\\n        value: function keyboardNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('keyboardNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('keyboardNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'next',\\n        value: function next(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('next', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('next');\\n            }\\n        }\\n    }, {\\n        key: 'previous',\\n        value: function previous(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('previous', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('previous');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('position');\\n            }\\n        }\\n    }, {\\n        key: 'reorder',\\n        value: function reorder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('reorder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('reorder');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'scrollAnimationDuration',\\n        value: function scrollAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('scrollAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('scrollAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'selectedItem',\\n        value: function selectedItem(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('selectedItem', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('selectedItem');\\n            }\\n        }\\n    }, {\\n        key: 'selectionTracker',\\n        value: function selectionTracker(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('selectionTracker', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('selectionTracker');\\n            }\\n        }\\n    }, {\\n        key: 'scrollable',\\n        value: function scrollable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('scrollable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('scrollable');\\n            }\\n        }\\n    }, {\\n        key: 'scrollPosition',\\n        value: function scrollPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('scrollPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('scrollPosition');\\n            }\\n        }\\n    }, {\\n        key: 'scrollStep',\\n        value: function scrollStep(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('scrollStep', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('scrollStep');\\n            }\\n        }\\n    }, {\\n        key: 'showCloseButtons',\\n        value: function showCloseButtons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('showCloseButtons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('showCloseButtons');\\n            }\\n        }\\n    }, {\\n        key: 'toggleMode',\\n        value: function toggleMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('toggleMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('toggleMode');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('width');\\n            }\\n        }\\n    }, {\\n        key: 'addAt',\\n        value: function addAt(index, title, content) {\\n            JQXLite(this.componentSelector).jqxTabs('addAt', index, title, content);\\n        }\\n    }, {\\n        key: 'addFirst',\\n        value: function addFirst(htmlElement) {\\n            JQXLite(this.componentSelector).jqxTabs('addFirst', htmlElement);\\n        }\\n    }, {\\n        key: 'addLast',\\n        value: function addLast(htmlElement1, htmlElemen2t) {\\n            JQXLite(this.componentSelector).jqxTabs('addLast', htmlElement1, htmlElemen2t);\\n        }\\n    }, {\\n        key: 'collapse',\\n        value: function collapse() {\\n            JQXLite(this.componentSelector).jqxTabs('collapse');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxTabs('disable');\\n        }\\n    }, {\\n        key: 'disableAt',\\n        value: function disableAt(index) {\\n            JQXLite(this.componentSelector).jqxTabs('disableAt', index);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTabs('destroy');\\n        }\\n    }, {\\n        key: 'ensureVisible',\\n        value: function ensureVisible(index) {\\n            JQXLite(this.componentSelector).jqxTabs('ensureVisible', index);\\n        }\\n    }, {\\n        key: 'enableAt',\\n        value: function enableAt(index) {\\n            JQXLite(this.componentSelector).jqxTabs('enableAt', index);\\n        }\\n    }, {\\n        key: 'expand',\\n        value: function expand() {\\n            JQXLite(this.componentSelector).jqxTabs('expand');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxTabs('enable');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxTabs('focus');\\n        }\\n    }, {\\n        key: 'getTitleAt',\\n        value: function getTitleAt(index) {\\n            return JQXLite(this.componentSelector).jqxTabs('getTitleAt', index);\\n        }\\n    }, {\\n        key: 'getContentAt',\\n        value: function getContentAt(index) {\\n            return JQXLite(this.componentSelector).jqxTabs('getContentAt', index);\\n        }\\n    }, {\\n        key: 'getDisabledTabsCount',\\n        value: function getDisabledTabsCount() {\\n            return JQXLite(this.componentSelector).jqxTabs('getDisabledTabsCount');\\n        }\\n    }, {\\n        key: 'hideCloseButtonAt',\\n        value: function hideCloseButtonAt(index) {\\n            JQXLite(this.componentSelector).jqxTabs('hideCloseButtonAt', index);\\n        }\\n    }, {\\n        key: 'hideAllCloseButtons',\\n        value: function hideAllCloseButtons() {\\n            JQXLite(this.componentSelector).jqxTabs('hideAllCloseButtons');\\n        }\\n    }, {\\n        key: 'length',\\n        value: function length() {\\n            return JQXLite(this.componentSelector).jqxTabs('length');\\n        }\\n    }, {\\n        key: 'removeAt',\\n        value: function removeAt(index) {\\n            JQXLite(this.componentSelector).jqxTabs('removeAt', index);\\n        }\\n    }, {\\n        key: 'removeFirst',\\n        value: function removeFirst() {\\n            JQXLite(this.componentSelector).jqxTabs('removeFirst');\\n        }\\n    }, {\\n        key: 'removeLast',\\n        value: function removeLast() {\\n            JQXLite(this.componentSelector).jqxTabs('removeLast');\\n        }\\n    }, {\\n        key: 'select',\\n        value: function select(index) {\\n            JQXLite(this.componentSelector).jqxTabs('select', index);\\n        }\\n    }, {\\n        key: 'setContentAt',\\n        value: function setContentAt(index, htmlElement) {\\n            JQXLite(this.componentSelector).jqxTabs('setContentAt', index, htmlElement);\\n        }\\n    }, {\\n        key: 'setTitleAt',\\n        value: function setTitleAt(index, htmlElement) {\\n            JQXLite(this.componentSelector).jqxTabs('setTitleAt', index, htmlElement);\\n        }\\n    }, {\\n        key: 'showCloseButtonAt',\\n        value: function showCloseButtonAt(index) {\\n            JQXLite(this.componentSelector).jqxTabs('showCloseButtonAt', index);\\n        }\\n    }, {\\n        key: 'showAllCloseButtons',\\n        value: function showAllCloseButtons() {\\n            JQXLite(this.componentSelector).jqxTabs('showAllCloseButtons');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxTabs('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTabs('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTabs' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTabs;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTabs;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 127 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTagCloud = function (_React$Component) {\\n    _inherits(JqxTagCloud, _React$Component);\\n\\n    function JqxTagCloud() {\\n        _classCallCheck(this, JqxTagCloud);\\n\\n        return _possibleConstructorReturn(this, (JqxTagCloud.__proto__ || Object.getPrototypeOf(JqxTagCloud)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTagCloud, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['alterTextCase', 'disabled', 'displayLimit', 'displayMember', 'displayValue', 'fontSizeUnit', 'height', 'maxColor', 'maxFontSize', 'maxValueToDisplay', 'minColor', 'minFontSize', 'minValueToDisplay', 'rtl', 'sortBy', 'sortOrder', 'source', 'tagRenderer', 'takeTopWeightedItems', 'textColor', 'urlBase', 'urlMember', 'valueMember', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTagCloud(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTagCloud('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTagCloud(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'alterTextCase',\\n        value: function alterTextCase(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('alterTextCase', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('alterTextCase');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'displayLimit',\\n        value: function displayLimit(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('displayLimit', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('displayLimit');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'displayValue',\\n        value: function displayValue(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('displayValue', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('displayValue');\\n            }\\n        }\\n    }, {\\n        key: 'fontSizeUnit',\\n        value: function fontSizeUnit(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('fontSizeUnit', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('fontSizeUnit');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('height');\\n            }\\n        }\\n    }, {\\n        key: 'maxColor',\\n        value: function maxColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('maxColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('maxColor');\\n            }\\n        }\\n    }, {\\n        key: 'maxFontSize',\\n        value: function maxFontSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('maxFontSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('maxFontSize');\\n            }\\n        }\\n    }, {\\n        key: 'maxValueToDisplay',\\n        value: function maxValueToDisplay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('maxValueToDisplay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('maxValueToDisplay');\\n            }\\n        }\\n    }, {\\n        key: 'minColor',\\n        value: function minColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('minColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('minColor');\\n            }\\n        }\\n    }, {\\n        key: 'minFontSize',\\n        value: function minFontSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('minFontSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('minFontSize');\\n            }\\n        }\\n    }, {\\n        key: 'minValueToDisplay',\\n        value: function minValueToDisplay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('minValueToDisplay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('minValueToDisplay');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'sortBy',\\n        value: function sortBy(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('sortBy', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('sortBy');\\n            }\\n        }\\n    }, {\\n        key: 'sortOrder',\\n        value: function sortOrder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('sortOrder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('sortOrder');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('source');\\n            }\\n        }\\n    }, {\\n        key: 'tagRenderer',\\n        value: function tagRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('tagRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('tagRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'takeTopWeightedItems',\\n        value: function takeTopWeightedItems(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('takeTopWeightedItems', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('takeTopWeightedItems');\\n            }\\n        }\\n    }, {\\n        key: 'textColor',\\n        value: function textColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('textColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('textColor');\\n            }\\n        }\\n    }, {\\n        key: 'urlBase',\\n        value: function urlBase(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('urlBase', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('urlBase');\\n            }\\n        }\\n    }, {\\n        key: 'urlMember',\\n        value: function urlMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('urlMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('urlMember');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTagCloud('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTagCloud('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTagCloud('destroy');\\n        }\\n    }, {\\n        key: 'findTagIndex',\\n        value: function findTagIndex(tag) {\\n            return JQXLite(this.componentSelector).jqxTagCloud('findTagIndex', tag);\\n        }\\n    }, {\\n        key: 'getHiddenTagsList',\\n        value: function getHiddenTagsList() {\\n            return JQXLite(this.componentSelector).jqxTagCloud('getHiddenTagsList');\\n        }\\n    }, {\\n        key: 'getRenderedTags',\\n        value: function getRenderedTags() {\\n            return JQXLite(this.componentSelector).jqxTagCloud('getRenderedTags');\\n        }\\n    }, {\\n        key: 'getTagsList',\\n        value: function getTagsList() {\\n            return JQXLite(this.componentSelector).jqxTagCloud('getTagsList');\\n        }\\n    }, {\\n        key: 'hideItem',\\n        value: function hideItem(index) {\\n            JQXLite(this.componentSelector).jqxTagCloud('hideItem', index);\\n        }\\n    }, {\\n        key: 'insertAt',\\n        value: function insertAt(index, item) {\\n            JQXLite(this.componentSelector).jqxTagCloud('insertAt', index, item);\\n        }\\n    }, {\\n        key: 'removeAt',\\n        value: function removeAt(index) {\\n            JQXLite(this.componentSelector).jqxTagCloud('removeAt', index);\\n        }\\n    }, {\\n        key: 'updateAt',\\n        value: function updateAt(index, item) {\\n            JQXLite(this.componentSelector).jqxTagCloud('updateAt', index, item);\\n        }\\n    }, {\\n        key: 'showItem',\\n        value: function showItem(index) {\\n            JQXLite(this.componentSelector).jqxTagCloud('showItem', index);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTagCloud' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTagCloud;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTagCloud;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 128 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTextArea = function (_React$Component) {\\n    _inherits(JqxTextArea, _React$Component);\\n\\n    function JqxTextArea() {\\n        _classCallCheck(this, JqxTextArea);\\n\\n        return _possibleConstructorReturn(this, (JqxTextArea.__proto__ || Object.getPrototypeOf(JqxTextArea)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTextArea, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'displayMember', 'dropDownWidth', 'height', 'items', 'maxLength', 'minLength', 'opened', 'placeHolder', 'popupZIndex', 'query', 'renderer', 'roundedCorners', 'rtl', 'scrollBarSize', 'searchMode', 'source', 'theme', 'valueMember', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTextArea(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTextArea('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTextArea(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'dropDownWidth',\\n        value: function dropDownWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('dropDownWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('dropDownWidth');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('height');\\n            }\\n        }\\n    }, {\\n        key: 'items',\\n        value: function items(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('items', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('items');\\n            }\\n        }\\n    }, {\\n        key: 'maxLength',\\n        value: function maxLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('maxLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('maxLength');\\n            }\\n        }\\n    }, {\\n        key: 'minLength',\\n        value: function minLength(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('minLength', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('minLength');\\n            }\\n        }\\n    }, {\\n        key: 'opened',\\n        value: function opened(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('opened', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('opened');\\n            }\\n        }\\n    }, {\\n        key: 'placeHolder',\\n        value: function placeHolder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('placeHolder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('placeHolder');\\n            }\\n        }\\n    }, {\\n        key: 'popupZIndex',\\n        value: function popupZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('popupZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('popupZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'query',\\n        value: function query(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('query', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('query');\\n            }\\n        }\\n    }, {\\n        key: 'renderer',\\n        value: function renderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('renderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('renderer');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'searchMode',\\n        value: function searchMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('searchMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('searchMode');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('source');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('theme');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTextArea('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxTextArea('focus');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxTextArea('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxTextArea('render');\\n        }\\n    }, {\\n        key: 'selectAll',\\n        value: function selectAll() {\\n            JQXLite(this.componentSelector).jqxTextArea('selectAll');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxTextArea('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTextArea('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTextArea' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTextArea;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTextArea;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 129 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxToggleButton = function (_React$Component) {\\n    _inherits(JqxToggleButton, _React$Component);\\n\\n    function JqxToggleButton() {\\n        _classCallCheck(this, JqxToggleButton);\\n\\n        return _possibleConstructorReturn(this, (JqxToggleButton.__proto__ || Object.getPrototypeOf(JqxToggleButton)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxToggleButton, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'imgSrc', 'imgWidth', 'imgHeight', 'imgPosition', 'roundedCorners', 'rtl', 'textPosition', 'textImageRelation', 'theme', 'template', 'toggled', 'width', 'value'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxToggleButton(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxToggleButton('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxToggleButton(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('height');\\n            }\\n        }\\n    }, {\\n        key: 'imgSrc',\\n        value: function imgSrc(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('imgSrc', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('imgSrc');\\n            }\\n        }\\n    }, {\\n        key: 'imgWidth',\\n        value: function imgWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('imgWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('imgWidth');\\n            }\\n        }\\n    }, {\\n        key: 'imgHeight',\\n        value: function imgHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('imgHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('imgHeight');\\n            }\\n        }\\n    }, {\\n        key: 'imgPosition',\\n        value: function imgPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('imgPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('imgPosition');\\n            }\\n        }\\n    }, {\\n        key: 'roundedCorners',\\n        value: function roundedCorners(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('roundedCorners', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('roundedCorners');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'textPosition',\\n        value: function textPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('textPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('textPosition');\\n            }\\n        }\\n    }, {\\n        key: 'textImageRelation',\\n        value: function textImageRelation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('textImageRelation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('textImageRelation');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('theme');\\n            }\\n        }\\n    }, {\\n        key: 'template',\\n        value: function template(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('template', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('template');\\n            }\\n        }\\n    }, {\\n        key: 'toggled',\\n        value: function toggled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('toggled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('toggled');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('width');\\n            }\\n        }\\n    }, {\\n        key: 'value',\\n        value: function value(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('value', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('value');\\n            }\\n        }\\n    }, {\\n        key: 'check',\\n        value: function check() {\\n            JQXLite(this.componentSelector).jqxToggleButton('check');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxToggleButton('destroy');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxToggleButton('focus');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxToggleButton('render');\\n        }\\n    }, {\\n        key: 'toggle',\\n        value: function toggle() {\\n            JQXLite(this.componentSelector).jqxToggleButton('toggle');\\n        }\\n    }, {\\n        key: 'unCheck',\\n        value: function unCheck() {\\n            JQXLite(this.componentSelector).jqxToggleButton('unCheck');\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxToggleButton('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToggleButton('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxToggleButton' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxToggleButton;\\n}(_react2.default.Component);\\n\\nexports.default = JqxToggleButton;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 130 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxToolBar = function (_React$Component) {\\n    _inherits(JqxToolBar, _React$Component);\\n\\n    function JqxToolBar() {\\n        _classCallCheck(this, JqxToolBar);\\n\\n        return _possibleConstructorReturn(this, (JqxToolBar.__proto__ || Object.getPrototypeOf(JqxToolBar)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxToolBar, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['disabled', 'height', 'initTools', 'minimizeWidth', 'minWidth', 'maxWidth', 'rtl', 'tools', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxToolBar(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxToolBar('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxToolBar(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('height');\\n            }\\n        }\\n    }, {\\n        key: 'initTools',\\n        value: function initTools(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('initTools', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('initTools');\\n            }\\n        }\\n    }, {\\n        key: 'minimizeWidth',\\n        value: function minimizeWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('minimizeWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('minimizeWidth');\\n            }\\n        }\\n    }, {\\n        key: 'minWidth',\\n        value: function minWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('minWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('minWidth');\\n            }\\n        }\\n    }, {\\n        key: 'maxWidth',\\n        value: function maxWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('maxWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('maxWidth');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'tools',\\n        value: function tools(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('tools', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('tools');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxToolBar('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxToolBar('width');\\n            }\\n        }\\n    }, {\\n        key: 'addTool',\\n        value: function addTool(type, position, separator, menuToolIninitialization) {\\n            JQXLite(this.componentSelector).jqxToolBar('addTool', type, position, separator, menuToolIninitialization);\\n        }\\n    }, {\\n        key: 'disableTool',\\n        value: function disableTool(index, disable) {\\n            JQXLite(this.componentSelector).jqxToolBar('disableTool', index, disable);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxToolBar('destroy');\\n        }\\n    }, {\\n        key: 'destroyTool',\\n        value: function destroyTool(index) {\\n            JQXLite(this.componentSelector).jqxToolBar('destroyTool', index);\\n        }\\n    }, {\\n        key: 'getTools',\\n        value: function getTools() {\\n            return JQXLite(this.componentSelector).jqxToolBar('getTools');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxToolBar('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxToolBar('refresh');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxToolBar' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxToolBar;\\n}(_react2.default.Component);\\n\\nexports.default = JqxToolBar;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 131 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTooltip = function (_React$Component) {\\n    _inherits(JqxTooltip, _React$Component);\\n\\n    function JqxTooltip() {\\n        _classCallCheck(this, JqxTooltip);\\n\\n        return _possibleConstructorReturn(this, (JqxTooltip.__proto__ || Object.getPrototypeOf(JqxTooltip)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTooltip, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['absolutePositionX', 'absolutePositionY', 'autoHide', 'autoHideDelay', 'animationShowDelay', 'animationHideDelay', 'content', 'closeOnClick', 'disabled', 'enableBrowserBoundsDetection', 'height', 'left', 'name', 'opacity', 'position', 'rtl', 'showDelay', 'showArrow', 'top', 'trigger', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTooltip(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTooltip('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTooltip(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'absolutePositionX',\\n        value: function absolutePositionX(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('absolutePositionX', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('absolutePositionX');\\n            }\\n        }\\n    }, {\\n        key: 'absolutePositionY',\\n        value: function absolutePositionY(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('absolutePositionY', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('absolutePositionY');\\n            }\\n        }\\n    }, {\\n        key: 'autoHide',\\n        value: function autoHide(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('autoHide', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('autoHide');\\n            }\\n        }\\n    }, {\\n        key: 'autoHideDelay',\\n        value: function autoHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('autoHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('autoHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationShowDelay',\\n        value: function animationShowDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('animationShowDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('animationShowDelay');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDelay',\\n        value: function animationHideDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('animationHideDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('animationHideDelay');\\n            }\\n        }\\n    }, {\\n        key: 'content',\\n        value: function content(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('content', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('content');\\n            }\\n        }\\n    }, {\\n        key: 'closeOnClick',\\n        value: function closeOnClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('closeOnClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('closeOnClick');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserBoundsDetection',\\n        value: function enableBrowserBoundsDetection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('enableBrowserBoundsDetection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('enableBrowserBoundsDetection');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('height');\\n            }\\n        }\\n    }, {\\n        key: 'left',\\n        value: function left(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('left', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('left');\\n            }\\n        }\\n    }, {\\n        key: 'name',\\n        value: function name(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('name', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('name');\\n            }\\n        }\\n    }, {\\n        key: 'opacity',\\n        value: function opacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('opacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('opacity');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('position');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'showDelay',\\n        value: function showDelay(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('showDelay', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('showDelay');\\n            }\\n        }\\n    }, {\\n        key: 'showArrow',\\n        value: function showArrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('showArrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('showArrow');\\n            }\\n        }\\n    }, {\\n        key: 'top',\\n        value: function top(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('top', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('top');\\n            }\\n        }\\n    }, {\\n        key: 'trigger',\\n        value: function trigger(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('trigger', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('trigger');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTooltip('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTooltip('width');\\n            }\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close(index) {\\n            JQXLite(this.componentSelector).jqxTooltip('close', index);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTooltip('destroy');\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open(left, top) {\\n            JQXLite(this.componentSelector).jqxTooltip('open', left, top);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxTooltip('refresh');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTooltip' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTooltip;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTooltip;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 132 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTreeGrid = function (_React$Component) {\\n    _inherits(JqxTreeGrid, _React$Component);\\n\\n    function JqxTreeGrid() {\\n        _classCallCheck(this, JqxTreeGrid);\\n\\n        return _possibleConstructorReturn(this, (JqxTreeGrid.__proto__ || Object.getPrototypeOf(JqxTreeGrid)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTreeGrid, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['altRows', 'autoRowHeight', 'aggregatesHeight', 'autoShowLoadElement', 'checkboxes', 'columnsHeight', 'columns', 'columnGroups', 'columnsResize', 'columnsReorder', 'disabled', 'editable', 'editSettings', 'exportSettings', 'enableHover', 'enableBrowserSelection', 'filterable', 'filterHeight', 'filterMode', 'height', 'hierarchicalCheckboxes', 'icons', 'incrementalSearch', 'localization', 'pagerHeight', 'pageSize', 'pageSizeOptions', 'pageable', 'pagerPosition', 'pagerMode', 'pageSizeMode', 'pagerButtonsCount', 'pagerRenderer', 'ready', 'rowDetails', 'rowDetailsRenderer', 'renderToolbar', 'renderStatusbar', 'rendering', 'rendered', 'rtl', 'source', 'sortable', 'showAggregates', 'showSubAggregates', 'showToolbar', 'showStatusbar', 'statusBarHeight', 'scrollBarSize', 'selectionMode', 'showHeader', 'theme', 'toolbarHeight', 'width', 'virtualModeCreateRecords', 'virtualModeRecordCreating'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTreeGrid(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTreeGrid(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'altRows',\\n        value: function altRows(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('altRows', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('altRows');\\n            }\\n        }\\n    }, {\\n        key: 'autoRowHeight',\\n        value: function autoRowHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('autoRowHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('autoRowHeight');\\n            }\\n        }\\n    }, {\\n        key: 'aggregatesHeight',\\n        value: function aggregatesHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('aggregatesHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('aggregatesHeight');\\n            }\\n        }\\n    }, {\\n        key: 'autoShowLoadElement',\\n        value: function autoShowLoadElement(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('autoShowLoadElement', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('autoShowLoadElement');\\n            }\\n        }\\n    }, {\\n        key: 'checkboxes',\\n        value: function checkboxes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('checkboxes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('checkboxes');\\n            }\\n        }\\n    }, {\\n        key: 'columnsHeight',\\n        value: function columnsHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('columnsHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('columnsHeight');\\n            }\\n        }\\n    }, {\\n        key: 'columns',\\n        value: function columns(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('columns', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('columns');\\n            }\\n        }\\n    }, {\\n        key: 'columnGroups',\\n        value: function columnGroups(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('columnGroups', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('columnGroups');\\n            }\\n        }\\n    }, {\\n        key: 'columnsResize',\\n        value: function columnsResize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('columnsResize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('columnsResize');\\n            }\\n        }\\n    }, {\\n        key: 'columnsReorder',\\n        value: function columnsReorder(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('columnsReorder', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('columnsReorder');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'editable',\\n        value: function editable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('editable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('editable');\\n            }\\n        }\\n    }, {\\n        key: 'editSettings',\\n        value: function editSettings(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('editSettings', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('editSettings');\\n            }\\n        }\\n    }, {\\n        key: 'exportSettings',\\n        value: function exportSettings(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('exportSettings', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('exportSettings');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'enableBrowserSelection',\\n        value: function enableBrowserSelection(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('enableBrowserSelection', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('enableBrowserSelection');\\n            }\\n        }\\n    }, {\\n        key: 'filterable',\\n        value: function filterable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('filterable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('filterable');\\n            }\\n        }\\n    }, {\\n        key: 'filterHeight',\\n        value: function filterHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('filterHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('filterHeight');\\n            }\\n        }\\n    }, {\\n        key: 'filterMode',\\n        value: function filterMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('filterMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('filterMode');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('height');\\n            }\\n        }\\n    }, {\\n        key: 'hierarchicalCheckboxes',\\n        value: function hierarchicalCheckboxes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('hierarchicalCheckboxes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('hierarchicalCheckboxes');\\n            }\\n        }\\n    }, {\\n        key: 'icons',\\n        value: function icons(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('icons', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('icons');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearch',\\n        value: function incrementalSearch(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('incrementalSearch', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('incrementalSearch');\\n            }\\n        }\\n    }, {\\n        key: 'localization',\\n        value: function localization(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('localization', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('localization');\\n            }\\n        }\\n    }, {\\n        key: 'pagerHeight',\\n        value: function pagerHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pagerHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pagerHeight');\\n            }\\n        }\\n    }, {\\n        key: 'pageSize',\\n        value: function pageSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pageSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pageSize');\\n            }\\n        }\\n    }, {\\n        key: 'pageSizeOptions',\\n        value: function pageSizeOptions(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pageSizeOptions', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pageSizeOptions');\\n            }\\n        }\\n    }, {\\n        key: 'pageable',\\n        value: function pageable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pageable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pageable');\\n            }\\n        }\\n    }, {\\n        key: 'pagerPosition',\\n        value: function pagerPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pagerPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pagerPosition');\\n            }\\n        }\\n    }, {\\n        key: 'pagerMode',\\n        value: function pagerMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pagerMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pagerMode');\\n            }\\n        }\\n    }, {\\n        key: 'pageSizeMode',\\n        value: function pageSizeMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pageSizeMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pageSizeMode');\\n            }\\n        }\\n    }, {\\n        key: 'pagerButtonsCount',\\n        value: function pagerButtonsCount(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pagerButtonsCount', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pagerButtonsCount');\\n            }\\n        }\\n    }, {\\n        key: 'pagerRenderer',\\n        value: function pagerRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('pagerRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('pagerRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'ready',\\n        value: function ready(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('ready', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('ready');\\n            }\\n        }\\n    }, {\\n        key: 'rowDetails',\\n        value: function rowDetails(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('rowDetails', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('rowDetails');\\n            }\\n        }\\n    }, {\\n        key: 'rowDetailsRenderer',\\n        value: function rowDetailsRenderer(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('rowDetailsRenderer', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('rowDetailsRenderer');\\n            }\\n        }\\n    }, {\\n        key: 'renderToolbar',\\n        value: function renderToolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('renderToolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('renderToolbar');\\n            }\\n        }\\n    }, {\\n        key: 'renderStatusbar',\\n        value: function renderStatusbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('renderStatusbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('renderStatusbar');\\n            }\\n        }\\n    }, {\\n        key: 'rendering',\\n        value: function rendering(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('rendering', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('rendering');\\n            }\\n        }\\n    }, {\\n        key: 'rendered',\\n        value: function rendered(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('rendered', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('rendered');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('source');\\n            }\\n        }\\n    }, {\\n        key: 'sortable',\\n        value: function sortable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('sortable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('sortable');\\n            }\\n        }\\n    }, {\\n        key: 'showAggregates',\\n        value: function showAggregates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('showAggregates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('showAggregates');\\n            }\\n        }\\n    }, {\\n        key: 'showSubAggregates',\\n        value: function showSubAggregates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('showSubAggregates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('showSubAggregates');\\n            }\\n        }\\n    }, {\\n        key: 'showToolbar',\\n        value: function showToolbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('showToolbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('showToolbar');\\n            }\\n        }\\n    }, {\\n        key: 'showStatusbar',\\n        value: function showStatusbar(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('showStatusbar', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('showStatusbar');\\n            }\\n        }\\n    }, {\\n        key: 'statusBarHeight',\\n        value: function statusBarHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('statusBarHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('statusBarHeight');\\n            }\\n        }\\n    }, {\\n        key: 'scrollBarSize',\\n        value: function scrollBarSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('scrollBarSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('scrollBarSize');\\n            }\\n        }\\n    }, {\\n        key: 'selectionMode',\\n        value: function selectionMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('selectionMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('selectionMode');\\n            }\\n        }\\n    }, {\\n        key: 'showHeader',\\n        value: function showHeader(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('showHeader', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('showHeader');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('theme');\\n            }\\n        }\\n    }, {\\n        key: 'toolbarHeight',\\n        value: function toolbarHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('toolbarHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('toolbarHeight');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('width');\\n            }\\n        }\\n    }, {\\n        key: 'virtualModeCreateRecords',\\n        value: function virtualModeCreateRecords(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('virtualModeCreateRecords', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('virtualModeCreateRecords');\\n            }\\n        }\\n    }, {\\n        key: 'virtualModeRecordCreating',\\n        value: function virtualModeRecordCreating(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeGrid('virtualModeRecordCreating', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeGrid('virtualModeRecordCreating');\\n            }\\n        }\\n    }, {\\n        key: 'addRow',\\n        value: function addRow(rowKey, rowData, rowPosition, parent) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('addRow', rowKey, rowData, rowPosition, parent);\\n        }\\n    }, {\\n        key: 'addFilter',\\n        value: function addFilter(dataField, filerGroup) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('addFilter', dataField, filerGroup);\\n        }\\n    }, {\\n        key: 'applyFilters',\\n        value: function applyFilters() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('applyFilters');\\n        }\\n    }, {\\n        key: 'beginUpdate',\\n        value: function beginUpdate() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('beginUpdate');\\n        }\\n    }, {\\n        key: 'beginRowEdit',\\n        value: function beginRowEdit(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('beginRowEdit', rowKey);\\n        }\\n    }, {\\n        key: 'beginCellEdit',\\n        value: function beginCellEdit(rowKey, dataField) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('beginCellEdit', rowKey, dataField);\\n        }\\n    }, {\\n        key: 'clearSelection',\\n        value: function clearSelection() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('clearSelection');\\n        }\\n    }, {\\n        key: 'clearFilters',\\n        value: function clearFilters() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('clearFilters');\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('clear');\\n        }\\n    }, {\\n        key: 'checkRow',\\n        value: function checkRow(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('checkRow', rowKey);\\n        }\\n    }, {\\n        key: 'collapseRow',\\n        value: function collapseRow(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('collapseRow', rowKey);\\n        }\\n    }, {\\n        key: 'collapseAll',\\n        value: function collapseAll() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('collapseAll');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('destroy');\\n        }\\n    }, {\\n        key: 'deleteRow',\\n        value: function deleteRow(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('deleteRow', rowKey);\\n        }\\n    }, {\\n        key: 'expandRow',\\n        value: function expandRow(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('expandRow', rowKey);\\n        }\\n    }, {\\n        key: 'expandAll',\\n        value: function expandAll() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('expandAll');\\n        }\\n    }, {\\n        key: 'endUpdate',\\n        value: function endUpdate() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('endUpdate');\\n        }\\n    }, {\\n        key: 'ensureRowVisible',\\n        value: function ensureRowVisible(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('ensureRowVisible', rowKey);\\n        }\\n    }, {\\n        key: 'endRowEdit',\\n        value: function endRowEdit(rowKey, cancelChanges) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('endRowEdit', rowKey, cancelChanges);\\n        }\\n    }, {\\n        key: 'endCellEdit',\\n        value: function endCellEdit(rowKey, dataField, cancelChanges) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('endCellEdit', rowKey, dataField, cancelChanges);\\n        }\\n    }, {\\n        key: 'exportData',\\n        value: function exportData(exportDataType) {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('exportData', exportDataType);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('focus');\\n        }\\n    }, {\\n        key: 'getColumnProperty',\\n        value: function getColumnProperty(dataField, propertyName) {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getColumnProperty', dataField, propertyName);\\n        }\\n    }, {\\n        key: 'goToPage',\\n        value: function goToPage(pageIndex) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('goToPage', pageIndex);\\n        }\\n    }, {\\n        key: 'goToPrevPage',\\n        value: function goToPrevPage() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('goToPrevPage');\\n        }\\n    }, {\\n        key: 'goToNextPage',\\n        value: function goToNextPage() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('goToNextPage');\\n        }\\n    }, {\\n        key: 'getSelection',\\n        value: function getSelection() {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getSelection');\\n        }\\n    }, {\\n        key: 'getKey',\\n        value: function getKey(row) {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getKey', row);\\n        }\\n    }, {\\n        key: 'getRow',\\n        value: function getRow(rowKey) {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getRow', rowKey);\\n        }\\n    }, {\\n        key: 'getRows',\\n        value: function getRows() {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getRows');\\n        }\\n    }, {\\n        key: 'getCheckedRows',\\n        value: function getCheckedRows() {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getCheckedRows');\\n        }\\n    }, {\\n        key: 'getView',\\n        value: function getView() {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getView');\\n        }\\n    }, {\\n        key: 'getCellValue',\\n        value: function getCellValue(rowKey, dataField) {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('getCellValue', rowKey, dataField);\\n        }\\n    }, {\\n        key: 'hideColumn',\\n        value: function hideColumn(dataField) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('hideColumn', dataField);\\n        }\\n    }, {\\n        key: 'isBindingCompleted',\\n        value: function isBindingCompleted() {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('isBindingCompleted');\\n        }\\n    }, {\\n        key: 'lockRow',\\n        value: function lockRow(rowKey) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('lockRow', rowKey);\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('refresh');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('render');\\n        }\\n    }, {\\n        key: 'removeFilter',\\n        value: function removeFilter(dataField) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('removeFilter', dataField);\\n        }\\n    }, {\\n        key: 'scrollOffset',\\n        value: function scrollOffset(top, left) {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('scrollOffset', top, left);\\n        }\\n    }, {\\n        key: 'setColumnProperty',\\n        value: function setColumnProperty(dataField, propertyName, propertyValue) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('setColumnProperty', dataField, propertyName, propertyValue);\\n        }\\n    }, {\\n        key: 'showColumn',\\n        value: function showColumn(dataField) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('showColumn', dataField);\\n        }\\n    }, {\\n        key: 'selectRow',\\n        value: function selectRow(rowId) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('selectRow', rowId);\\n        }\\n    }, {\\n        key: 'setCellValue',\\n        value: function setCellValue(rowId, dataField, cellValue) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('setCellValue', rowId, dataField, cellValue);\\n        }\\n    }, {\\n        key: 'sortBy',\\n        value: function sortBy(dataField, sortOrder) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('sortBy', dataField, sortOrder);\\n        }\\n    }, {\\n        key: 'updating',\\n        value: function updating() {\\n            return JQXLite(this.componentSelector).jqxTreeGrid('updating');\\n        }\\n    }, {\\n        key: 'updateBoundData',\\n        value: function updateBoundData() {\\n            JQXLite(this.componentSelector).jqxTreeGrid('updateBoundData');\\n        }\\n    }, {\\n        key: 'unselectRow',\\n        value: function unselectRow(rowId) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('unselectRow', rowId);\\n        }\\n    }, {\\n        key: 'uncheckRow',\\n        value: function uncheckRow(rowId) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('uncheckRow', rowId);\\n        }\\n    }, {\\n        key: 'updateRow',\\n        value: function updateRow(rowId, data) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('updateRow', rowId, data);\\n        }\\n    }, {\\n        key: 'unlockRow',\\n        value: function unlockRow(rowId) {\\n            JQXLite(this.componentSelector).jqxTreeGrid('unlockRow', rowId);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTreeGrid' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTreeGrid;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTreeGrid;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 133 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTree = function (_React$Component) {\\n    _inherits(JqxTree, _React$Component);\\n\\n    function JqxTree() {\\n        _classCallCheck(this, JqxTree);\\n\\n        return _possibleConstructorReturn(this, (JqxTree.__proto__ || Object.getPrototypeOf(JqxTree)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTree, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['animationShowDuration', 'animationHideDuration', 'allowDrag', 'allowDrop', 'checkboxes', 'dragStart', 'dragEnd', 'disabled', 'easing', 'enableHover', 'height', 'hasThreeStates', 'incrementalSearch', 'keyboardNavigation', 'rtl', 'selectedItem', 'source', 'toggleIndicatorSize', 'toggleMode', 'theme', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTree(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTree('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTree(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'animationShowDuration',\\n        value: function animationShowDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('animationShowDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('animationShowDuration');\\n            }\\n        }\\n    }, {\\n        key: 'animationHideDuration',\\n        value: function animationHideDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('animationHideDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('animationHideDuration');\\n            }\\n        }\\n    }, {\\n        key: 'allowDrag',\\n        value: function allowDrag(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('allowDrag', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('allowDrag');\\n            }\\n        }\\n    }, {\\n        key: 'allowDrop',\\n        value: function allowDrop(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('allowDrop', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('allowDrop');\\n            }\\n        }\\n    }, {\\n        key: 'checkboxes',\\n        value: function checkboxes(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('checkboxes', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('checkboxes');\\n            }\\n        }\\n    }, {\\n        key: 'dragStart',\\n        value: function dragStart(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('dragStart', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('dragStart');\\n            }\\n        }\\n    }, {\\n        key: 'dragEnd',\\n        value: function dragEnd(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('dragEnd', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('dragEnd');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'easing',\\n        value: function easing(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('easing', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('easing');\\n            }\\n        }\\n    }, {\\n        key: 'enableHover',\\n        value: function enableHover(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('enableHover', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('enableHover');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('height');\\n            }\\n        }\\n    }, {\\n        key: 'hasThreeStates',\\n        value: function hasThreeStates(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('hasThreeStates', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('hasThreeStates');\\n            }\\n        }\\n    }, {\\n        key: 'incrementalSearch',\\n        value: function incrementalSearch(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('incrementalSearch', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('incrementalSearch');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardNavigation',\\n        value: function keyboardNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('keyboardNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('keyboardNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'selectedItem',\\n        value: function selectedItem(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('selectedItem', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('selectedItem');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('source');\\n            }\\n        }\\n    }, {\\n        key: 'toggleIndicatorSize',\\n        value: function toggleIndicatorSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('toggleIndicatorSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('toggleIndicatorSize');\\n            }\\n        }\\n    }, {\\n        key: 'toggleMode',\\n        value: function toggleMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('toggleMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('toggleMode');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('theme');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('width');\\n            }\\n        }\\n    }, {\\n        key: 'addBefore',\\n        value: function addBefore(item, id) {\\n            JQXLite(this.componentSelector).jqxTree('addBefore', item, id);\\n        }\\n    }, {\\n        key: 'addAfter',\\n        value: function addAfter(item, id) {\\n            JQXLite(this.componentSelector).jqxTree('addAfter', item, id);\\n        }\\n    }, {\\n        key: 'addTo',\\n        value: function addTo(item, id) {\\n            JQXLite(this.componentSelector).jqxTree('addTo', item, id);\\n        }\\n    }, {\\n        key: 'clear',\\n        value: function clear() {\\n            JQXLite(this.componentSelector).jqxTree('clear');\\n        }\\n    }, {\\n        key: 'checkAll',\\n        value: function checkAll() {\\n            JQXLite(this.componentSelector).jqxTree('checkAll');\\n        }\\n    }, {\\n        key: 'checkItem',\\n        value: function checkItem(item, checked) {\\n            JQXLite(this.componentSelector).jqxTree('checkItem', item, checked);\\n        }\\n    }, {\\n        key: 'collapseAll',\\n        value: function collapseAll() {\\n            JQXLite(this.componentSelector).jqxTree('collapseAll');\\n        }\\n    }, {\\n        key: 'collapseItem',\\n        value: function collapseItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('collapseItem', item);\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTree('destroy');\\n        }\\n    }, {\\n        key: 'disableItem',\\n        value: function disableItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('disableItem', item);\\n        }\\n    }, {\\n        key: 'ensureVisible',\\n        value: function ensureVisible(item) {\\n            JQXLite(this.componentSelector).jqxTree('ensureVisible', item);\\n        }\\n    }, {\\n        key: 'enableItem',\\n        value: function enableItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('enableItem', item);\\n        }\\n    }, {\\n        key: 'enableAll',\\n        value: function enableAll() {\\n            JQXLite(this.componentSelector).jqxTree('enableAll');\\n        }\\n    }, {\\n        key: 'expandAll',\\n        value: function expandAll() {\\n            JQXLite(this.componentSelector).jqxTree('expandAll');\\n        }\\n    }, {\\n        key: 'expandItem',\\n        value: function expandItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('expandItem', item);\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxTree('focus');\\n        }\\n    }, {\\n        key: 'getCheckedItems',\\n        value: function getCheckedItems() {\\n            return JQXLite(this.componentSelector).jqxTree('getCheckedItems');\\n        }\\n    }, {\\n        key: 'getUncheckedItems',\\n        value: function getUncheckedItems() {\\n            return JQXLite(this.componentSelector).jqxTree('getUncheckedItems');\\n        }\\n    }, {\\n        key: 'getItems',\\n        value: function getItems() {\\n            return JQXLite(this.componentSelector).jqxTree('getItems');\\n        }\\n    }, {\\n        key: 'getItem',\\n        value: function getItem(element) {\\n            return JQXLite(this.componentSelector).jqxTree('getItem', element);\\n        }\\n    }, {\\n        key: 'getSelectedItem',\\n        value: function getSelectedItem() {\\n            return JQXLite(this.componentSelector).jqxTree('getSelectedItem');\\n        }\\n    }, {\\n        key: 'getPrevItem',\\n        value: function getPrevItem() {\\n            return JQXLite(this.componentSelector).jqxTree('getPrevItem');\\n        }\\n    }, {\\n        key: 'getNextItem',\\n        value: function getNextItem() {\\n            return JQXLite(this.componentSelector).jqxTree('getNextItem');\\n        }\\n    }, {\\n        key: 'hitTest',\\n        value: function hitTest(left, top) {\\n            return JQXLite(this.componentSelector).jqxTree('hitTest', left, top);\\n        }\\n    }, {\\n        key: 'removeItem',\\n        value: function removeItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('removeItem', item);\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxTree('render');\\n        }\\n    }, {\\n        key: 'refresh',\\n        value: function refresh() {\\n            JQXLite(this.componentSelector).jqxTree('refresh');\\n        }\\n    }, {\\n        key: 'selectItem',\\n        value: function selectItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('selectItem', item);\\n        }\\n    }, {\\n        key: 'uncheckAll',\\n        value: function uncheckAll() {\\n            JQXLite(this.componentSelector).jqxTree('uncheckAll');\\n        }\\n    }, {\\n        key: 'uncheckItem',\\n        value: function uncheckItem(item) {\\n            JQXLite(this.componentSelector).jqxTree('uncheckItem', item);\\n        }\\n    }, {\\n        key: 'updateItem',\\n        value: function updateItem(item, newItem) {\\n            JQXLite(this.componentSelector).jqxTree('updateItem', item, newItem);\\n        }\\n    }, {\\n        key: 'val',\\n        value: function val(value) {\\n            if (value !== undefined) {\\n                JQXLite(this.componentSelector).jqxTree('val', value);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTree('val');\\n            }\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTree' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTree;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTree;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 134 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxTreeMap = function (_React$Component) {\\n    _inherits(JqxTreeMap, _React$Component);\\n\\n    function JqxTreeMap() {\\n        _classCallCheck(this, JqxTreeMap);\\n\\n        return _possibleConstructorReturn(this, (JqxTreeMap.__proto__ || Object.getPrototypeOf(JqxTreeMap)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxTreeMap, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['baseColor', 'colorRanges', 'colorRange', 'colorMode', 'displayMember', 'height', 'hoverEnabled', 'headerHeight', 'legendLabel', 'legendPosition', 'legendScaleCallback', 'renderCallbacks', 'selectionEnabled', 'showLegend', 'source', 'theme', 'valueMember', 'width'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            JQXLite(this.componentSelector).css('margin-left', '1px');if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxTreeMap(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxTreeMap('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxTreeMap(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'baseColor',\\n        value: function baseColor(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('baseColor', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('baseColor');\\n            }\\n        }\\n    }, {\\n        key: 'colorRanges',\\n        value: function colorRanges(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('colorRanges', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('colorRanges');\\n            }\\n        }\\n    }, {\\n        key: 'colorRange',\\n        value: function colorRange(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('colorRange', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('colorRange');\\n            }\\n        }\\n    }, {\\n        key: 'colorMode',\\n        value: function colorMode(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('colorMode', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('colorMode');\\n            }\\n        }\\n    }, {\\n        key: 'displayMember',\\n        value: function displayMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('displayMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('displayMember');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('height');\\n            }\\n        }\\n    }, {\\n        key: 'hoverEnabled',\\n        value: function hoverEnabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('hoverEnabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('hoverEnabled');\\n            }\\n        }\\n    }, {\\n        key: 'headerHeight',\\n        value: function headerHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('headerHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('headerHeight');\\n            }\\n        }\\n    }, {\\n        key: 'legendLabel',\\n        value: function legendLabel(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('legendLabel', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('legendLabel');\\n            }\\n        }\\n    }, {\\n        key: 'legendPosition',\\n        value: function legendPosition(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('legendPosition', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('legendPosition');\\n            }\\n        }\\n    }, {\\n        key: 'legendScaleCallback',\\n        value: function legendScaleCallback(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('legendScaleCallback', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('legendScaleCallback');\\n            }\\n        }\\n    }, {\\n        key: 'renderCallbacks',\\n        value: function renderCallbacks(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('renderCallbacks', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('renderCallbacks');\\n            }\\n        }\\n    }, {\\n        key: 'selectionEnabled',\\n        value: function selectionEnabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('selectionEnabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('selectionEnabled');\\n            }\\n        }\\n    }, {\\n        key: 'showLegend',\\n        value: function showLegend(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('showLegend', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('showLegend');\\n            }\\n        }\\n    }, {\\n        key: 'source',\\n        value: function source(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('source', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('source');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('theme');\\n            }\\n        }\\n    }, {\\n        key: 'valueMember',\\n        value: function valueMember(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('valueMember', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('valueMember');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxTreeMap('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxTreeMap('width');\\n            }\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxTreeMap('destroy');\\n        }\\n    }, {\\n        key: 'performRender',\\n        value: function performRender() {\\n            JQXLite(this.componentSelector).jqxTreeMap('render');\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxTreeMap' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxTreeMap;\\n}(_react2.default.Component);\\n\\nexports.default = JqxTreeMap;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 135 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxValidator = function (_React$Component) {\\n    _inherits(JqxValidator, _React$Component);\\n\\n    function JqxValidator() {\\n        _classCallCheck(this, JqxValidator);\\n\\n        return _possibleConstructorReturn(this, (JqxValidator.__proto__ || Object.getPrototypeOf(JqxValidator)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxValidator, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['arrow', 'animation', 'animationDuration', 'closeOnClick', 'focus', 'hintType', 'onError', 'onSuccess', 'position', 'rules', 'rtl'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxValidator(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxValidator('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxValidator(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'arrow',\\n        value: function arrow(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('arrow', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('arrow');\\n            }\\n        }\\n    }, {\\n        key: 'animation',\\n        value: function animation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('animation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('animation');\\n            }\\n        }\\n    }, {\\n        key: 'animationDuration',\\n        value: function animationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('animationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('animationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'closeOnClick',\\n        value: function closeOnClick(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('closeOnClick', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('closeOnClick');\\n            }\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('focus', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('focus');\\n            }\\n        }\\n    }, {\\n        key: 'hintType',\\n        value: function hintType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('hintType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('hintType');\\n            }\\n        }\\n    }, {\\n        key: 'onError',\\n        value: function onError(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('onError', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('onError');\\n            }\\n        }\\n    }, {\\n        key: 'onSuccess',\\n        value: function onSuccess(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('onSuccess', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('onSuccess');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('position');\\n            }\\n        }\\n    }, {\\n        key: 'rules',\\n        value: function rules(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('rules', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('rules');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxValidator('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxValidator('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'hideHint',\\n        value: function hideHint(id) {\\n            JQXLite(this.componentSelector).jqxValidator('hideHint', id);\\n        }\\n    }, {\\n        key: 'hide',\\n        value: function hide() {\\n            JQXLite(this.componentSelector).jqxValidator('hide');\\n        }\\n    }, {\\n        key: 'updatePosition',\\n        value: function updatePosition() {\\n            JQXLite(this.componentSelector).jqxValidator('updatePosition');\\n        }\\n    }, {\\n        key: 'validate',\\n        value: function validate(htmlElement) {\\n            JQXLite(this.componentSelector).jqxValidator('validate', htmlElement);\\n        }\\n    }, {\\n        key: 'validateInput',\\n        value: function validateInput(id) {\\n            JQXLite(this.componentSelector).jqxValidator('validateInput', id);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxValidator' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxValidator;\\n}(_react2.default.Component);\\n\\nexports.default = JqxValidator;\\n;\\n\\n\\u002F***\\u002F }),\\n\\u002F* 136 *\\u002F\\n\\u002F***\\u002F (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.jqx = undefined;\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i \\u003C props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(0);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } \\u002F*\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jQWidgets v5.5.0 (2017-Dec)\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Copyright (c) 2011-2017 jQWidgets.\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               License: https:\\u002F\\u002Fjqwidgets.com\\u002Flicense\\u002F\\r\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\\u002F\\n\\nvar JQXLite = window.JQXLite;\\n\\nvar jqx = exports.jqx = window.jqx;\\n\\nvar JqxWindow = function (_React$Component) {\\n    _inherits(JqxWindow, _React$Component);\\n\\n    function JqxWindow() {\\n        _classCallCheck(this, JqxWindow);\\n\\n        return _possibleConstructorReturn(this, (JqxWindow.__proto__ || Object.getPrototypeOf(JqxWindow)).apply(this, arguments));\\n    }\\n\\n    _createClass(JqxWindow, [{\\n        key: 'componentDidMount',\\n        value: function componentDidMount() {\\n            var options = this.manageAttributes();\\n            this.createComponent(options);\\n        }\\n    }, {\\n        key: 'manageAttributes',\\n        value: function manageAttributes() {\\n            var properties = ['autoOpen', 'animationType', 'collapsed', 'collapseAnimationDuration', 'content', 'closeAnimationDuration', 'closeButtonSize', 'closeButtonAction', 'cancelButton', 'dragArea', 'draggable', 'disabled', 'height', 'initContent', 'isModal', 'keyboardCloseKey', 'keyboardNavigation', 'minHeight', 'maxHeight', 'minWidth', 'maxWidth', 'modalOpacity', 'modalZIndex', 'modalBackgroundZIndex', 'okButton', 'position', 'rtl', 'resizable', 'showAnimationDuration', 'showCloseButton', 'showCollapseButton', 'theme', 'title', 'width', 'zIndex'];\\n            var options = {};\\n            for (var item in this.props) {\\n                if (item === 'settings') {\\n                    for (var itemTwo in this.props[item]) {\\n                        options[itemTwo] = this.props[item][itemTwo];\\n                    }\\n                } else {\\n                    if (properties.indexOf(item) !== -1) {\\n                        options[item] = this.props[item];\\n                    }\\n                }\\n            }\\n            return options;\\n        }\\n    }, {\\n        key: 'createComponent',\\n        value: function createComponent(options) {\\n            if (!this.style) {\\n                for (var style in this.props.style) {\\n                    JQXLite(this.componentSelector).css(style, this.props.style[style]);\\n                }\\n            }\\n            if (this.props.className !== undefined) {\\n                var classes = this.props.className.split(' ');\\n                for (var i = 0; i \\u003C classes.length; i++) {\\n                    JQXLite(this.componentSelector).addClass(classes[i]);\\n                }\\n            }\\n            if (!this.template) {\\n                JQXLite(this.componentSelector).html(this.props.template);\\n            }\\n            JQXLite(this.componentSelector).jqxWindow(options);\\n        }\\n    }, {\\n        key: 'setOptions',\\n        value: function setOptions(options) {\\n            JQXLite(this.componentSelector).jqxWindow('setOptions', options);\\n        }\\n    }, {\\n        key: 'getOptions',\\n        value: function getOptions() {\\n            if (arguments.length === 0) {\\n                throw Error('At least one argument expected in getOptions()!');\\n            }\\n            var resultToReturn = {};\\n            for (var i = 0; i \\u003C arguments.length; i++) {\\n                resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxWindow(arguments[i]);\\n            }\\n            return resultToReturn;\\n        }\\n    }, {\\n        key: 'on',\\n        value: function on(name, callbackFn) {\\n            JQXLite(this.componentSelector).on(name, callbackFn);\\n        }\\n    }, {\\n        key: 'off',\\n        value: function off(name) {\\n            JQXLite(this.componentSelector).off(name);\\n        }\\n    }, {\\n        key: 'autoOpen',\\n        value: function autoOpen(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('autoOpen', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('autoOpen');\\n            }\\n        }\\n    }, {\\n        key: 'animationType',\\n        value: function animationType(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('animationType', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('animationType');\\n            }\\n        }\\n    }, {\\n        key: 'collapsed',\\n        value: function collapsed(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('collapsed', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('collapsed');\\n            }\\n        }\\n    }, {\\n        key: 'collapseAnimationDuration',\\n        value: function collapseAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('collapseAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('collapseAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'content',\\n        value: function content(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('content', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('content');\\n            }\\n        }\\n    }, {\\n        key: 'closeAnimationDuration',\\n        value: function closeAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('closeAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('closeAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'closeButtonSize',\\n        value: function closeButtonSize(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('closeButtonSize', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('closeButtonSize');\\n            }\\n        }\\n    }, {\\n        key: 'closeButtonAction',\\n        value: function closeButtonAction(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('closeButtonAction', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('closeButtonAction');\\n            }\\n        }\\n    }, {\\n        key: 'cancelButton',\\n        value: function cancelButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('cancelButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('cancelButton');\\n            }\\n        }\\n    }, {\\n        key: 'dragArea',\\n        value: function dragArea(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('dragArea', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('dragArea');\\n            }\\n        }\\n    }, {\\n        key: 'draggable',\\n        value: function draggable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('draggable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('draggable');\\n            }\\n        }\\n    }, {\\n        key: 'disabled',\\n        value: function disabled(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('disabled', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('disabled');\\n            }\\n        }\\n    }, {\\n        key: 'height',\\n        value: function height(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('height', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('height');\\n            }\\n        }\\n    }, {\\n        key: 'initContent',\\n        value: function initContent(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('initContent', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('initContent');\\n            }\\n        }\\n    }, {\\n        key: 'isModal',\\n        value: function isModal(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('isModal', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('isModal');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardCloseKey',\\n        value: function keyboardCloseKey(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('keyboardCloseKey', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('keyboardCloseKey');\\n            }\\n        }\\n    }, {\\n        key: 'keyboardNavigation',\\n        value: function keyboardNavigation(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('keyboardNavigation', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('keyboardNavigation');\\n            }\\n        }\\n    }, {\\n        key: 'minHeight',\\n        value: function minHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('minHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('minHeight');\\n            }\\n        }\\n    }, {\\n        key: 'maxHeight',\\n        value: function maxHeight(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('maxHeight', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('maxHeight');\\n            }\\n        }\\n    }, {\\n        key: 'minWidth',\\n        value: function minWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('minWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('minWidth');\\n            }\\n        }\\n    }, {\\n        key: 'maxWidth',\\n        value: function maxWidth(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('maxWidth', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('maxWidth');\\n            }\\n        }\\n    }, {\\n        key: 'modalOpacity',\\n        value: function modalOpacity(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('modalOpacity', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('modalOpacity');\\n            }\\n        }\\n    }, {\\n        key: 'modalZIndex',\\n        value: function modalZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('modalZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('modalZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'modalBackgroundZIndex',\\n        value: function modalBackgroundZIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('modalBackgroundZIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('modalBackgroundZIndex');\\n            }\\n        }\\n    }, {\\n        key: 'okButton',\\n        value: function okButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('okButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('okButton');\\n            }\\n        }\\n    }, {\\n        key: 'position',\\n        value: function position(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('position', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('position');\\n            }\\n        }\\n    }, {\\n        key: 'rtl',\\n        value: function rtl(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('rtl', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('rtl');\\n            }\\n        }\\n    }, {\\n        key: 'resizable',\\n        value: function resizable(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('resizable', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('resizable');\\n            }\\n        }\\n    }, {\\n        key: 'showAnimationDuration',\\n        value: function showAnimationDuration(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('showAnimationDuration', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('showAnimationDuration');\\n            }\\n        }\\n    }, {\\n        key: 'showCloseButton',\\n        value: function showCloseButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('showCloseButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('showCloseButton');\\n            }\\n        }\\n    }, {\\n        key: 'showCollapseButton',\\n        value: function showCollapseButton(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('showCollapseButton', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('showCollapseButton');\\n            }\\n        }\\n    }, {\\n        key: 'theme',\\n        value: function theme(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('theme', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('theme');\\n            }\\n        }\\n    }, {\\n        key: 'title',\\n        value: function title(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('title', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('title');\\n            }\\n        }\\n    }, {\\n        key: 'width',\\n        value: function width(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('width', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('width');\\n            }\\n        }\\n    }, {\\n        key: 'zIndex',\\n        value: function zIndex(arg) {\\n            if (arg !== undefined) {\\n                JQXLite(this.componentSelector).jqxWindow('zIndex', arg);\\n            } else {\\n                return JQXLite(this.componentSelector).jqxWindow('zIndex');\\n            }\\n        }\\n    }, {\\n        key: 'bringToFront',\\n        value: function bringToFront() {\\n            JQXLite(this.componentSelector).jqxWindow('bringToFront');\\n        }\\n    }, {\\n        key: 'close',\\n        value: function close() {\\n            JQXLite(this.componentSelector).jqxWindow('close');\\n        }\\n    }, {\\n        key: 'collapse',\\n        value: function collapse() {\\n            JQXLite(this.componentSelector).jqxWindow('collapse');\\n        }\\n    }, {\\n        key: 'closeAll',\\n        value: function closeAll() {\\n            JQXLite(this.componentSelector).jqxWindow('closeAll');\\n        }\\n    }, {\\n        key: 'disable',\\n        value: function disable() {\\n            JQXLite(this.componentSelector).jqxWindow('disable');\\n        }\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            JQXLite(this.componentSelector).jqxWindow('destroy');\\n        }\\n    }, {\\n        key: 'enable',\\n        value: function enable() {\\n            JQXLite(this.componentSelector).jqxWindow('enable');\\n        }\\n    }, {\\n        key: 'expand',\\n        value: function expand() {\\n            JQXLite(this.componentSelector).jqxWindow('expand');\\n        }\\n    }, {\\n        key: 'focus',\\n        value: function focus() {\\n            JQXLite(this.componentSelector).jqxWindow('focus');\\n        }\\n    }, {\\n        key: 'isOpen',\\n        value: function isOpen() {\\n            return JQXLite(this.componentSelector).jqxWindow('isOpen');\\n        }\\n    }, {\\n        key: 'move',\\n        value: function move(top, left) {\\n            JQXLite(this.componentSelector).jqxWindow('move', top, left);\\n        }\\n    }, {\\n        key: 'open',\\n        value: function open() {\\n            JQXLite(this.componentSelector).jqxWindow('open');\\n        }\\n    }, {\\n        key: 'hide',\\n        value: function hide() {\\n            JQXLite(this.componentSelector).jqxWindow('hide');\\n        }\\n    }, {\\n        key: 'resize',\\n        value: function resize(top, left) {\\n            JQXLite(this.componentSelector).jqxWindow('resize', top, left);\\n        }\\n    }, {\\n        key: 'setTitle',\\n        value: function setTitle(title) {\\n            JQXLite(this.componentSelector).jqxWindow('setTitle', title);\\n        }\\n    }, {\\n        key: 'setContent',\\n        value: function setContent(content) {\\n            JQXLite(this.componentSelector).jqxWindow('setContent', content);\\n        }\\n    }, {\\n        key: 'render',\\n        value: function render() {\\n            var id = 'jqxWindow' + JQXLite.generateID();\\n            this.componentSelector = '#' + id;\\n            return _react2.default.createElement(\\n                'div',\\n                { id: id },\\n                this.props.value,\\n                this.props.children\\n            );\\n        }\\n    }]);\\n\\n    return JqxWindow;\\n}(_react2.default.Component);\\n\\nexports.default = JqxWindow;\\n;\\n\\n\\u002F***\\u002F })\\n\\u002F******\\u002F ]);\"}","integrity":"sha512-8VBhvMd8RhwmEZL8JyD9uVUqb7SZbs33nCqQytx0hB6GQ+V7IRjdvtFfZXglDfWOnskxC5FLu2YilzHrnFruDw==","time":1515738905651,"size":531476}