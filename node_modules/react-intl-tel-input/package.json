{
  "_args": [
    [
      {
        "raw": "react-intl-tel-input",
        "scope": null,
        "escapedName": "react-intl-tel-input",
        "name": "react-intl-tel-input",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/opt/lampp/htdocs/workspace/React-views"
    ]
  ],
  "_from": "react-intl-tel-input@latest",
  "_id": "react-intl-tel-input@4.3.1",
  "_inCache": true,
  "_location": "/react-intl-tel-input",
  "_nodeVersion": "8.9.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-intl-tel-input-4.3.1.tgz_1515862764505_0.2669295067898929"
  },
  "_npmUser": {
    "name": "patw",
    "email": "patw.hi@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-intl-tel-input",
    "scope": null,
    "escapedName": "react-intl-tel-input",
    "name": "react-intl-tel-input",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-intl-tel-input/-/react-intl-tel-input-4.3.1.tgz",
  "_shasum": "3febeb66b44170489f96d6d5b094b60e548effcc",
  "_shrinkwrap": null,
  "_spec": "react-intl-tel-input",
  "_where": "/opt/lampp/htdocs/workspace/React-views",
  "author": {
    "name": "patw"
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "bugs": {
    "url": "https://github.com/patw0929/react-intl-tel-input/issues"
  },
  "dependencies": {
    "classnames": "^2.2.5",
    "react-style-proptype": "^3.0.0",
    "underscore.deferred": "^0.4.0"
  },
  "description": "Telephone input component. Rewrite intl-tel-input in React.js.",
  "devDependencies": {
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^18.0.0",
    "babel-loader": "6.2.10",
    "babel-plugin-transform-class-properties": "^6.19.0",
    "babel-plugin-transform-object-rest-spread": "^6.20.2",
    "babel-plugin-transform-react-constant-elements": "^6.9.1",
    "babel-plugin-transform-regenerator": "^6.21.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-preset-latest": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-react-app": "^2.0.1",
    "babel-runtime": "^6.20.0",
    "case-sensitive-paths-webpack-plugin": "^1.1.4",
    "chalk": "1.1.3",
    "copy-webpack-plugin": "^4.0.1",
    "coveralls": "^2.11.9",
    "css-loader": "^0.26.1",
    "css-modules-require-hook": "^4.0.1",
    "detect-port": "^1.0.7",
    "dotenv": "^4.0.0",
    "enzyme": "^2.7.0",
    "eslint": "^3.13.0",
    "eslint-config-airbnb": "~14.0.0",
    "eslint-config-airbnb-base": "~11.0.1",
    "eslint-loader": "1.6.1",
    "eslint-plugin-flowtype": "^2.29.2",
    "eslint-plugin-import": "^2.0.1",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.9.0",
    "eslint-plugin-security": "^1.2.0",
    "extract-text-webpack-plugin": "^2.1.0",
    "file-loader": "^0.9.0",
    "filesize": "^3.3.0",
    "gh-pages": "^0.12.0",
    "gzip-size": "3.0.0",
    "html-webpack-plugin": "2.26.0",
    "identity-obj-proxy": "^3.0.0",
    "image-webpack-loader": "^1.8.0",
    "jasmine-reporters": "^2.2.0",
    "jest": "^18.1.0",
    "jsdom": "^9.2.1",
    "lint-staged": "^3.2.6",
    "node-sass": "^4.2.0",
    "pre-commit": "^1.2.2",
    "react-addons-test-utils": "^15.4.2",
    "react-dev-utils": "^0.4.2",
    "react-hot-loader": "^1.3.0",
    "recursive-readdir": "2.1.0",
    "rimraf": "2.5.4",
    "sass-loader": "^4.1.1",
    "serve-static": "^1.11.1",
    "sinon": "^1.17.4",
    "style-loader": "0.13.1",
    "url-loader": "~0.5.7",
    "webpack": "beta",
    "webpack-dev-server": "1.16.2",
    "xmlhttprequest": "^1.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-L4IVg2rFoGFe2XbQDJBrhPj4OzDCFgEM29mLJPh9EnHQxrhQCwaLVHoT+GKizcmv/g/YIhulK0/2p82GiZe3ow==",
    "shasum": "3febeb66b44170489f96d6d5b094b60e548effcc",
    "tarball": "https://registry.npmjs.org/react-intl-tel-input/-/react-intl-tel-input-4.3.1.tgz"
  },
  "engines": {
    "node": ">=6.2.2"
  },
  "eslintConfig": {
    "extends": "./config/eslint.js"
  },
  "gitHead": "e9de24daae11e42179c6c95f224cd31be9abee79",
  "homepage": "https://github.com/patw0929/react-intl-tel-input#readme",
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.js",
      "!**/__mocks__/**",
      "!**/__tests__/**",
      "!src/example.js",
      "!src/libphonenumber.js"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js",
      "<rootDir>/config/jest/setup.js"
    ],
    "setupTestFrameworkScriptFile": "<rootDir>/config/jest/setupTestFramework.js",
    "testPathIgnorePatterns": [
      "<rootDir>[/\\\\](build|docs|node_modules)[/\\\\]"
    ],
    "testEnvironment": "jsdom",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/config/jest/transform.js",
      "^.+\\.(scss|css)$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|scss|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "testRegex": "/__tests__/.*\\.(test|spec)\\.js$"
  },
  "keywords": [
    "react",
    "react-component",
    "tel",
    "telephone",
    "intl-tel-input",
    "international-telephone-input",
    "phonenumber"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "jest --findRelatedTests",
      "eslint --max-warnings 0"
    ]
  },
  "main": "dist/main.js",
  "maintainers": [
    {
      "name": "patw",
      "email": "patw.hi@gmail.com"
    }
  ],
  "name": "react-intl-tel-input",
  "optionalDependencies": {},
  "peerDependencies": {
    "prop-types": "~15.5.8",
    "react": "^15.4.2",
    "react-dom": "^15.4.2"
  },
  "pre-commit": [
    "lint-staged",
    "lint-pass"
  ],
  "readme": "# React-Intl-Tel-Input\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![Build Status](https://travis-ci.org/patw0929/react-intl-tel-input.svg)](https://travis-ci.org/patw0929/react-intl-tel-input)\n[![npm version](https://badge.fury.io/js/react-intl-tel-input.svg)](http://badge.fury.io/js/react-intl-tel-input)\n[![Coverage Status](https://coveralls.io/repos/github/patw0929/react-intl-tel-input/badge.svg?branch=master)](https://coveralls.io/github/patw0929/react-intl-tel-input?branch=master)\n[![npm](https://img.shields.io/npm/l/express.svg?maxAge=2592000)]()\n\n[![NPM](https://nodei.co/npm/react-intl-tel-input.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/react-intl-tel-input/)\n\nRewrite [International Telephone Input](https://github.com/jackocnr/intl-tel-input) in React.js.\n\n\n## Collaborators Wanted!\n\nDue to the long commuting time, I have no much time to maintain this project often. ðŸ˜£\n\nSo If anybody else is willing to take on the work of bug fixes, integrating pull requests, etc.\nPlease let me know. ðŸ™Œ\n\nI hope we can maintain the project together, and make this project better! ðŸ’ª\n\n## Demo & Examples\n\nLive demo: [patw0929.github.io/react-intl-tel-input](http://patw0929.github.io/react-intl-tel-input/)\n\nTo build the examples locally, run:\n\n```bash\nnpm install\nnpm start\n```\n\nor\n\n```bash\nyarn\nyarn start\n```\n\nThen open [`localhost:3000`](http://localhost:3000) in a browser.\n\n\n## Installation\n\nThe easiest way to use react-intl-tel-input is to install it from NPM and include it in your own React build process (using [Browserify](http://browserify.org), [Webpack](http://webpack.github.io/), etc).\n\nYou can also use the standalone build by including `dist/main.js` in your page. If you use this, make sure you have already included React, and it is available as a global variable.\n\n```bash\nnpm install react-intl-tel-input --save\n```\n\nor\n\n```bash\nyarn add react-intl-tel-input\n```\n\n\n## Usage\n\n```javascript\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'file?name=libphonenumber.js!./node_modules/react-intl-tel-input/dist/libphonenumber.js';\nimport './node_modules/react-intl-tel-input/dist/main.css';\n\n<IntlTelInput css={['intl-tel-input', 'form-control']}\n  utilsScript={'libphonenumber.js'} />\n```\n\n### Heads up: CSS Sourcemaps\n\nAs noted [in the readme for style-loader](https://github.com/webpack/style-loader#recommended-configuration), if your webpack configuration for style-loader includes the option to enable sourcemaps, the flag images used by this component will not load.\n\n> **Note** about source maps support and assets referenced with `url`: when style loader is used with ?sourceMap option, the CSS modules will be generated as `Blob`s, so relative paths don't work (they would be relative to `chrome:blob` or `chrome:devtools`). In order for assets to maintain correct paths setting `output.publicPath` property of webpack configuration must be set, so that absolute paths are generated.\n\nBecause of this, we recommend you disable sourcemaps for the CSS include in this module.\n\n### Properties\n\nPlease see the [Demo Page](http://patw0929.github.io/react-intl-tel-input/)\n\n\n## Development (`src` and the build process)\n\n**NOTE:** The source code for the component is in `src`. A UMD bundle is also built to `dist`, which can be included without the need for any build system.\n\nTo build, watch and serve the examples (which will also watch the component source), run `npm start`.\n\nIf you want to build to the bundle file to `dist/` folder, please run:\n\n```bash\nnpm run build\n```\n\nor\n\n```bash\nyarn run build\n```\n\n## Contributing\n\nTo contribute to react-intl-tel-input, clone this repo locally and commit your code on a separate branch. Please write tests for your code, and run the linter before opening a pull-request:\n\n```bash\nnpm test\nnpm run lint\n```\n\nor\n\n```bash\nyarn test\nyarn run lint\n```\n\n## Inspired by\n\n[International Telephone Input](https://github.com/jackocnr/intl-tel-input) - [@jackocnr](https://github.com/jackocnr)\n\n\n## License\n\nMIT\n\nCopyright (c) 2015-2017 patw.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/patw0929/react-intl-tel-input.git"
  },
  "scripts": {
    "build": "node scripts/build.js",
    "coverage": "yarn run test -- --coverage",
    "coveralls": "NODE_ENV=development cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "deploy": "gh-pages -d example",
    "eslint": "eslint src",
    "lint": "yarn run eslint",
    "lint-pass": "echo '\\033[4;32mâ™¡' No any errors! Go go go! â™¡' \\033[0m'",
    "lint-staged": "lint-staged",
    "start": "node scripts/start.js",
    "test": "TZ=Asia/Taipei node scripts/test.js --env=jsdom"
  },
  "version": "4.3.1"
}
